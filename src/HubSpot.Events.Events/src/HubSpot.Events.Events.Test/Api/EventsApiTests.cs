/*
 * HubSpot Events API
 *
 * API for accessing CRM object events.
 *
 * The version of the OpenAPI document: v3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using HubSpot.Events.Events.Client;
using HubSpot.Events.Events.Api;
// uncomment below to import models
//using HubSpot.Events.Events.Model;

namespace HubSpot.Events.Events.Test.Api
{
    /// <summary>
    ///  Class for testing EventsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class EventsApiTests : IDisposable
    {
        private EventsApi instance;

        public EventsApiTests()
        {
            instance = new EventsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of EventsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' EventsApi
            //Assert.IsType<EventsApi>(instance);
        }

        /// <summary>
        /// Test GetEventsV3EventsGetPage
        /// </summary>
        [Fact]
        public void GetEventsV3EventsGetPageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? occurredAfter = null;
            //DateTime? occurredBefore = null;
            //string objectType = null;
            //long? objectId = null;
            //string eventType = null;
            //string after = null;
            //string before = null;
            //int? limit = null;
            //List<string> sort = null;
            //var response = instance.GetEventsV3EventsGetPage(occurredAfter, occurredBefore, objectType, objectId, eventType, after, before, limit, sort);
            //Assert.IsType<CollectionResponseExternalUnifiedEvent>(response);
        }
    }
}
