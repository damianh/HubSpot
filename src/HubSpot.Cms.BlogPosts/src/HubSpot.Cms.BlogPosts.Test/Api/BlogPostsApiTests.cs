/*
 * Blog Post endpoints
 *
 * Use these endpoints for interacting with Blog Posts, Blog Authors, and Blog Tags
 *
 * The version of the OpenAPI document: v3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using HubSpot.Cms.BlogPosts.Client;
using HubSpot.Cms.BlogPosts.Api;
// uncomment below to import models
//using HubSpot.Cms.BlogPosts.Model;

namespace HubSpot.Cms.BlogPosts.Test.Api
{
    /// <summary>
    ///  Class for testing BlogPostsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class BlogPostsApiTests : IDisposable
    {
        private BlogPostsApi instance;

        public BlogPostsApiTests()
        {
            instance = new BlogPostsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of BlogPostsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' BlogPostsApi
            //Assert.IsType<BlogPostsApi>(instance);
        }

        /// <summary>
        /// Test DeleteCmsV3BlogsPostsObjectIdArchive
        /// </summary>
        [Fact]
        public void DeleteCmsV3BlogsPostsObjectIdArchiveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string objectId = null;
            //bool? archived = null;
            //instance.DeleteCmsV3BlogsPostsObjectIdArchive(objectId, archived);
        }

        /// <summary>
        /// Test GetCmsV3BlogsPostsGetPage
        /// </summary>
        [Fact]
        public void GetCmsV3BlogsPostsGetPageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? createdAt = null;
            //DateTime? createdAfter = null;
            //DateTime? createdBefore = null;
            //DateTime? updatedAt = null;
            //DateTime? updatedAfter = null;
            //DateTime? updatedBefore = null;
            //List<string> sort = null;
            //string after = null;
            //int? limit = null;
            //bool? archived = null;
            //var response = instance.GetCmsV3BlogsPostsGetPage(createdAt, createdAfter, createdBefore, updatedAt, updatedAfter, updatedBefore, sort, after, limit, archived);
            //Assert.IsType<CollectionResponseWithTotalBlogPostForwardPaging>(response);
        }

        /// <summary>
        /// Test GetCmsV3BlogsPostsObjectIdDraftGetDraftById
        /// </summary>
        [Fact]
        public void GetCmsV3BlogsPostsObjectIdDraftGetDraftByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string objectId = null;
            //var response = instance.GetCmsV3BlogsPostsObjectIdDraftGetDraftById(objectId);
            //Assert.IsType<BlogPost>(response);
        }

        /// <summary>
        /// Test GetCmsV3BlogsPostsObjectIdGetById
        /// </summary>
        [Fact]
        public void GetCmsV3BlogsPostsObjectIdGetByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string objectId = null;
            //bool? archived = null;
            //var response = instance.GetCmsV3BlogsPostsObjectIdGetById(objectId, archived);
            //Assert.IsType<BlogPost>(response);
        }

        /// <summary>
        /// Test GetCmsV3BlogsPostsObjectIdRevisionsGetPreviousVersions
        /// </summary>
        [Fact]
        public void GetCmsV3BlogsPostsObjectIdRevisionsGetPreviousVersionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string objectId = null;
            //string after = null;
            //string before = null;
            //int? limit = null;
            //var response = instance.GetCmsV3BlogsPostsObjectIdRevisionsGetPreviousVersions(objectId, after, before, limit);
            //Assert.IsType<CollectionResponseWithTotalVersionBlogPost>(response);
        }

        /// <summary>
        /// Test GetCmsV3BlogsPostsObjectIdRevisionsRevisionIdGetPreviousVersion
        /// </summary>
        [Fact]
        public void GetCmsV3BlogsPostsObjectIdRevisionsRevisionIdGetPreviousVersionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string objectId = null;
            //string revisionId = null;
            //var response = instance.GetCmsV3BlogsPostsObjectIdRevisionsRevisionIdGetPreviousVersion(objectId, revisionId);
            //Assert.IsType<VersionBlogPost>(response);
        }

        /// <summary>
        /// Test PatchCmsV3BlogsPostsObjectIdDraftUpdateDraft
        /// </summary>
        [Fact]
        public void PatchCmsV3BlogsPostsObjectIdDraftUpdateDraftTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string objectId = null;
            //BlogPost blogPost = null;
            //var response = instance.PatchCmsV3BlogsPostsObjectIdDraftUpdateDraft(objectId, blogPost);
            //Assert.IsType<BlogPost>(response);
        }

        /// <summary>
        /// Test PatchCmsV3BlogsPostsObjectIdUpdate
        /// </summary>
        [Fact]
        public void PatchCmsV3BlogsPostsObjectIdUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string objectId = null;
            //BlogPost blogPost = null;
            //bool? archived = null;
            //var response = instance.PatchCmsV3BlogsPostsObjectIdUpdate(objectId, blogPost, archived);
            //Assert.IsType<BlogPost>(response);
        }

        /// <summary>
        /// Test PostCmsV3BlogsPostsBatchArchiveArchiveBatch
        /// </summary>
        [Fact]
        public void PostCmsV3BlogsPostsBatchArchiveArchiveBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BatchInputString batchInputString = null;
            //instance.PostCmsV3BlogsPostsBatchArchiveArchiveBatch(batchInputString);
        }

        /// <summary>
        /// Test PostCmsV3BlogsPostsBatchCreateCreateBatch
        /// </summary>
        [Fact]
        public void PostCmsV3BlogsPostsBatchCreateCreateBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BatchInputBlogPost batchInputBlogPost = null;
            //var response = instance.PostCmsV3BlogsPostsBatchCreateCreateBatch(batchInputBlogPost);
            //Assert.IsType<BatchResponseBlogPost>(response);
        }

        /// <summary>
        /// Test PostCmsV3BlogsPostsBatchReadReadBatch
        /// </summary>
        [Fact]
        public void PostCmsV3BlogsPostsBatchReadReadBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BatchInputString batchInputString = null;
            //bool? archived = null;
            //var response = instance.PostCmsV3BlogsPostsBatchReadReadBatch(batchInputString, archived);
            //Assert.IsType<BatchResponseBlogPost>(response);
        }

        /// <summary>
        /// Test PostCmsV3BlogsPostsBatchUpdateUpdateBatch
        /// </summary>
        [Fact]
        public void PostCmsV3BlogsPostsBatchUpdateUpdateBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BatchInputJsonNode batchInputJsonNode = null;
            //bool? archived = null;
            //var response = instance.PostCmsV3BlogsPostsBatchUpdateUpdateBatch(batchInputJsonNode, archived);
            //Assert.IsType<BatchResponseBlogPost>(response);
        }

        /// <summary>
        /// Test PostCmsV3BlogsPostsCloneClone
        /// </summary>
        [Fact]
        public void PostCmsV3BlogsPostsCloneCloneTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ContentCloneRequestVNext contentCloneRequestVNext = null;
            //var response = instance.PostCmsV3BlogsPostsCloneClone(contentCloneRequestVNext);
            //Assert.IsType<BlogPost>(response);
        }

        /// <summary>
        /// Test PostCmsV3BlogsPostsCreate
        /// </summary>
        [Fact]
        public void PostCmsV3BlogsPostsCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BlogPost blogPost = null;
            //var response = instance.PostCmsV3BlogsPostsCreate(blogPost);
            //Assert.IsType<BlogPost>(response);
        }

        /// <summary>
        /// Test PostCmsV3BlogsPostsMultiLanguageAttachToLangGroupAttachToLangGroup
        /// </summary>
        [Fact]
        public void PostCmsV3BlogsPostsMultiLanguageAttachToLangGroupAttachToLangGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AttachToLangPrimaryRequestVNext attachToLangPrimaryRequestVNext = null;
            //var response = instance.PostCmsV3BlogsPostsMultiLanguageAttachToLangGroupAttachToLangGroup(attachToLangPrimaryRequestVNext);
            //Assert.IsType<Error>(response);
        }

        /// <summary>
        /// Test PostCmsV3BlogsPostsMultiLanguageCreateLanguageVariationCreateLangVariation
        /// </summary>
        [Fact]
        public void PostCmsV3BlogsPostsMultiLanguageCreateLanguageVariationCreateLangVariationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BlogPostLanguageCloneRequestVNext blogPostLanguageCloneRequestVNext = null;
            //var response = instance.PostCmsV3BlogsPostsMultiLanguageCreateLanguageVariationCreateLangVariation(blogPostLanguageCloneRequestVNext);
            //Assert.IsType<BlogPost>(response);
        }

        /// <summary>
        /// Test PostCmsV3BlogsPostsMultiLanguageDetachFromLangGroupDetachFromLangGroup
        /// </summary>
        [Fact]
        public void PostCmsV3BlogsPostsMultiLanguageDetachFromLangGroupDetachFromLangGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DetachFromLangGroupRequestVNext detachFromLangGroupRequestVNext = null;
            //var response = instance.PostCmsV3BlogsPostsMultiLanguageDetachFromLangGroupDetachFromLangGroup(detachFromLangGroupRequestVNext);
            //Assert.IsType<Error>(response);
        }

        /// <summary>
        /// Test PostCmsV3BlogsPostsMultiLanguageUpdateLanguagesUpdateLangs
        /// </summary>
        [Fact]
        public void PostCmsV3BlogsPostsMultiLanguageUpdateLanguagesUpdateLangsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateLanguagesRequestVNext updateLanguagesRequestVNext = null;
            //var response = instance.PostCmsV3BlogsPostsMultiLanguageUpdateLanguagesUpdateLangs(updateLanguagesRequestVNext);
            //Assert.IsType<Error>(response);
        }

        /// <summary>
        /// Test PostCmsV3BlogsPostsObjectIdDraftPushLivePushLive
        /// </summary>
        [Fact]
        public void PostCmsV3BlogsPostsObjectIdDraftPushLivePushLiveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string objectId = null;
            //instance.PostCmsV3BlogsPostsObjectIdDraftPushLivePushLive(objectId);
        }

        /// <summary>
        /// Test PostCmsV3BlogsPostsObjectIdDraftResetResetDraft
        /// </summary>
        [Fact]
        public void PostCmsV3BlogsPostsObjectIdDraftResetResetDraftTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string objectId = null;
            //instance.PostCmsV3BlogsPostsObjectIdDraftResetResetDraft(objectId);
        }

        /// <summary>
        /// Test PostCmsV3BlogsPostsObjectIdRevisionsRevisionIdRestoreRestorePreviousVersion
        /// </summary>
        [Fact]
        public void PostCmsV3BlogsPostsObjectIdRevisionsRevisionIdRestoreRestorePreviousVersionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string objectId = null;
            //string revisionId = null;
            //var response = instance.PostCmsV3BlogsPostsObjectIdRevisionsRevisionIdRestoreRestorePreviousVersion(objectId, revisionId);
            //Assert.IsType<BlogPost>(response);
        }

        /// <summary>
        /// Test PostCmsV3BlogsPostsObjectIdRevisionsRevisionIdRestoreToDraftRestorePreviousVersionToDraft
        /// </summary>
        [Fact]
        public void PostCmsV3BlogsPostsObjectIdRevisionsRevisionIdRestoreToDraftRestorePreviousVersionToDraftTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string objectId = null;
            //long revisionId = null;
            //var response = instance.PostCmsV3BlogsPostsObjectIdRevisionsRevisionIdRestoreToDraftRestorePreviousVersionToDraft(objectId, revisionId);
            //Assert.IsType<BlogPost>(response);
        }

        /// <summary>
        /// Test PostCmsV3BlogsPostsScheduleSchedule
        /// </summary>
        [Fact]
        public void PostCmsV3BlogsPostsScheduleScheduleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ContentScheduleRequestVNext contentScheduleRequestVNext = null;
            //instance.PostCmsV3BlogsPostsScheduleSchedule(contentScheduleRequestVNext);
        }

        /// <summary>
        /// Test PutCmsV3BlogsPostsMultiLanguageSetNewLangPrimarySetLangPrimary
        /// </summary>
        [Fact]
        public void PutCmsV3BlogsPostsMultiLanguageSetNewLangPrimarySetLangPrimaryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SetNewLanguagePrimaryRequestVNext setNewLanguagePrimaryRequestVNext = null;
            //instance.PutCmsV3BlogsPostsMultiLanguageSetNewLangPrimarySetLangPrimary(setNewLanguagePrimaryRequestVNext);
        }
    }
}
