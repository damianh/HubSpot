/*
 * URL redirects
 *
 * URL redirect operations
 *
 * The version of the OpenAPI document: v3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using HubSpot.Cms.UrlRedirects.Model;
using HubSpot.Cms.UrlRedirects.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace HubSpot.Cms.UrlRedirects.Test.Model
{
    /// <summary>
    ///  Class for testing UrlMapping
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class UrlMappingTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for UrlMapping
        //private UrlMapping instance;

        public UrlMappingTests()
        {
            // TODO uncomment below to create an instance of UrlMapping
            //instance = new UrlMapping();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of UrlMapping
        /// </summary>
        [Fact]
        public void UrlMappingInstanceTest()
        {
            // TODO uncomment below to test "IsType" UrlMapping
            //Assert.IsType<UrlMapping>(instance);
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'RoutePrefix'
        /// </summary>
        [Fact]
        public void RoutePrefixTest()
        {
            // TODO unit test for the property 'RoutePrefix'
        }
        /// <summary>
        /// Test the property 'Destination'
        /// </summary>
        [Fact]
        public void DestinationTest()
        {
            // TODO unit test for the property 'Destination'
        }
        /// <summary>
        /// Test the property 'RedirectStyle'
        /// </summary>
        [Fact]
        public void RedirectStyleTest()
        {
            // TODO unit test for the property 'RedirectStyle'
        }
        /// <summary>
        /// Test the property 'IsOnlyAfterNotFound'
        /// </summary>
        [Fact]
        public void IsOnlyAfterNotFoundTest()
        {
            // TODO unit test for the property 'IsOnlyAfterNotFound'
        }
        /// <summary>
        /// Test the property 'IsMatchFullUrl'
        /// </summary>
        [Fact]
        public void IsMatchFullUrlTest()
        {
            // TODO unit test for the property 'IsMatchFullUrl'
        }
        /// <summary>
        /// Test the property 'IsMatchQueryString'
        /// </summary>
        [Fact]
        public void IsMatchQueryStringTest()
        {
            // TODO unit test for the property 'IsMatchQueryString'
        }
        /// <summary>
        /// Test the property 'IsPattern'
        /// </summary>
        [Fact]
        public void IsPatternTest()
        {
            // TODO unit test for the property 'IsPattern'
        }
        /// <summary>
        /// Test the property 'IsTrailingSlashOptional'
        /// </summary>
        [Fact]
        public void IsTrailingSlashOptionalTest()
        {
            // TODO unit test for the property 'IsTrailingSlashOptional'
        }
        /// <summary>
        /// Test the property 'IsProtocolAgnostic'
        /// </summary>
        [Fact]
        public void IsProtocolAgnosticTest()
        {
            // TODO unit test for the property 'IsProtocolAgnostic'
        }
        /// <summary>
        /// Test the property 'Precedence'
        /// </summary>
        [Fact]
        public void PrecedenceTest()
        {
            // TODO unit test for the property 'Precedence'
        }
        /// <summary>
        /// Test the property 'Created'
        /// </summary>
        [Fact]
        public void CreatedTest()
        {
            // TODO unit test for the property 'Created'
        }
        /// <summary>
        /// Test the property 'Updated'
        /// </summary>
        [Fact]
        public void UpdatedTest()
        {
            // TODO unit test for the property 'Updated'
        }

    }

}
