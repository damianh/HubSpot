// <auto-generated>
//     This code was generated by Refitter.
// </auto-generated>

using Refit;
using System.Threading;
using System.Threading.Tasks;
using System.Collections.Generic;

namespace HubSpot.Crm.Contacts
{
    public interface IContacts
    {

        /// <summary>
        /// Read a page of contacts. Control what is returned via the `properties` query param.
        /// </summary>
        [Get("/crm/v3/objects/contacts")]
        Task<CollectionResponseSimplePublicObjectWithAssociationsForwardPaging> GetPage([Query(CollectionFormat.Multi)] int? limit, [Query(CollectionFormat.Multi)] string after, [Query(CollectionFormat.Multi)] IEnumerable<string> properties, [Query(CollectionFormat.Multi)] IEnumerable<string> propertiesWithHistory, [Query(CollectionFormat.Multi)] IEnumerable<string> associations, [Query(CollectionFormat.Multi)] bool? archived, CancellationToken cancellationToken = default);

        /// <summary>
        /// Create a contact with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard contacts is provided.
        /// </summary>
        [Post("/crm/v3/objects/contacts")]
        Task Create([Body] SimplePublicObjectInputForCreate body, CancellationToken cancellationToken = default);

        [Post("/crm/v3/objects/contacts/batch/archive")]
        Task Archive([Body] BatchInputSimplePublicObjectId body, CancellationToken cancellationToken = default);

        [Post("/crm/v3/objects/contacts/batch/create")]
        Task Create([Body] BatchInputSimplePublicObjectInputForCreate body, CancellationToken cancellationToken = default);

        [Post("/crm/v3/objects/contacts/batch/read")]
        Task<BatchResponseSimplePublicObject> Read([Query(CollectionFormat.Multi)] bool? archived, [Body] BatchReadInputSimplePublicObjectId body, CancellationToken cancellationToken = default);

        [Post("/crm/v3/objects/contacts/batch/update")]
        Task<BatchResponseSimplePublicObject> Update([Body] BatchInputSimplePublicObjectBatchInput body, CancellationToken cancellationToken = default);

        /// <summary>
        /// Permanently delete a contact and all associated content to follow GDPR. Use optional property 'idProperty' set to 'email' to identify contact by email address. If email address is not found, the email address will be added to a blocklist and prevent it from being used in the future.
        /// </summary>
        [Post("/crm/v3/objects/contacts/gdpr-delete")]
        Task Purge([Body] PublicGdprDeleteInput body, CancellationToken cancellationToken = default);

        [Post("/crm/v3/objects/contacts/merge")]
        Task<SimplePublicObject> Merge([Body] PublicMergeInput body, CancellationToken cancellationToken = default);

        [Post("/crm/v3/objects/contacts/search")]
        Task<CollectionResponseWithTotalSimplePublicObjectForwardPaging> DoSearch([Body] PublicObjectSearchRequest body, CancellationToken cancellationToken = default);

        /// <summary>
        /// Read an Object identified by `{contactId}`. `{contactId}` refers to the internal object ID.  Control what is returned via the `properties` query param.
        /// </summary>
        [Get("/crm/v3/objects/contacts/{contactId}")]
        Task<SimplePublicObjectWithAssociations> GetById(string contactId, [Query(CollectionFormat.Multi)] IEnumerable<string> properties, [Query(CollectionFormat.Multi)] IEnumerable<string> propertiesWithHistory, [Query(CollectionFormat.Multi)] IEnumerable<string> associations, [Query(CollectionFormat.Multi)] bool? archived, CancellationToken cancellationToken = default);

        /// <summary>
        /// Move an Object identified by `{contactId}` to the recycling bin.
        /// </summary>
        [Delete("/crm/v3/objects/contacts/{contactId}")]
        Task Archive(string contactId, CancellationToken cancellationToken = default);

        /// <summary>
        /// Perform a partial update of an Object identified by `{contactId}`. `{contactId}` refers to the internal object ID. Provided property values will be overwritten. Read-only and non-existent properties will be ignored. Properties values can be cleared by passing an empty string.
        /// </summary>
        [Patch("/crm/v3/objects/contacts/{contactId}")]
        Task<SimplePublicObject> Update(string contactId, [Body] SimplePublicObjectInput body, CancellationToken cancellationToken = default);

    }


}


//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 612 // Disable "CS0612 '...' is obsolete"
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

namespace HubSpot.Crm.Contacts
{
    using System = global::System;

    

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class StandardError
    {

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Status { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("category")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public ErrorCategory Category { get; set; } = new ErrorCategory();

        [System.Text.Json.Serialization.JsonPropertyName("subCategory")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public object SubCategory { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("message")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Message { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("errors")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<ErrorDetail> Errors { get; set; } = new System.Collections.ObjectModel.Collection<ErrorDetail>();

        [System.Text.Json.Serialization.JsonPropertyName("context")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.IDictionary<string, System.Collections.Generic.ICollection<string>> Context { get; set; } = new System.Collections.Generic.Dictionary<string, System.Collections.Generic.ICollection<string>>();

        [System.Text.Json.Serialization.JsonPropertyName("links")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.IDictionary<string, string> Links { get; set; } = new System.Collections.Generic.Dictionary<string, string>();

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class CollectionResponseAssociatedId
    {

        [System.Text.Json.Serialization.JsonPropertyName("results")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<AssociatedId> Results { get; set; } = new System.Collections.ObjectModel.Collection<AssociatedId>();

        [System.Text.Json.Serialization.JsonPropertyName("paging")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Paging Paging { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class PublicAssociationsForObject
    {

        [System.Text.Json.Serialization.JsonPropertyName("to")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public PublicObjectId To { get; set; } = new PublicObjectId();

        [System.Text.Json.Serialization.JsonPropertyName("types")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<AssociationSpec> Types { get; set; } = new System.Collections.ObjectModel.Collection<AssociationSpec>();

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class BatchResponseSimplePublicObject
    {

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public BatchResponseSimplePublicObjectStatus Status { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("results")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<SimplePublicObject> Results { get; set; } = new System.Collections.ObjectModel.Collection<SimplePublicObject>();

        [System.Text.Json.Serialization.JsonPropertyName("requestedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset RequestedAt { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("startedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset StartedAt { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("completedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset CompletedAt { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("links")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.IDictionary<string, string> Links { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class FilterGroup
    {

        [System.Text.Json.Serialization.JsonPropertyName("filters")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Filter> Filters { get; set; } = new System.Collections.ObjectModel.Collection<Filter>();

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class ErrorDetail
    {
        /// <summary>
        /// A human readable message describing the error along with remediation steps where appropriate
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("message")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Message { get; set; }

        /// <summary>
        /// The name of the field or parameter in which the error was found.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("in")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string In { get; set; }

        /// <summary>
        /// The status code associated with the error detail
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Code { get; set; }

        /// <summary>
        /// A specific category that contains more specific detail about the error
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("subCategory")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string SubCategory { get; set; }

        /// <summary>
        /// Context about the error condition
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("context")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.IDictionary<string, System.Collections.Generic.ICollection<string>> Context { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class ForwardPaging
    {

        [System.Text.Json.Serialization.JsonPropertyName("next")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public NextPage Next { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class SimplePublicObjectId
    {

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class BatchReadInputSimplePublicObjectId
    {

        [System.Text.Json.Serialization.JsonPropertyName("properties")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<string> Properties { get; set; } = new System.Collections.ObjectModel.Collection<string>();

        [System.Text.Json.Serialization.JsonPropertyName("propertiesWithHistory")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<string> PropertiesWithHistory { get; set; } = new System.Collections.ObjectModel.Collection<string>();

        [System.Text.Json.Serialization.JsonPropertyName("idProperty")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string IdProperty { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("inputs")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<SimplePublicObjectId> Inputs { get; set; } = new System.Collections.ObjectModel.Collection<SimplePublicObjectId>();

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class BatchInputSimplePublicObjectId
    {

        [System.Text.Json.Serialization.JsonPropertyName("inputs")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<SimplePublicObjectId> Inputs { get; set; } = new System.Collections.ObjectModel.Collection<SimplePublicObjectId>();

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class ValueWithTimestamp
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Value { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("timestamp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset Timestamp { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("sourceType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string SourceType { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("sourceId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string SourceId { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("sourceLabel")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string SourceLabel { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("updatedByUserId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int UpdatedByUserId { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class CollectionResponseWithTotalSimplePublicObjectForwardPaging
    {

        [System.Text.Json.Serialization.JsonPropertyName("total")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public int Total { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("results")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<SimplePublicObject> Results { get; set; } = new System.Collections.ObjectModel.Collection<SimplePublicObject>();

        [System.Text.Json.Serialization.JsonPropertyName("paging")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public ForwardPaging Paging { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class SimplePublicObject
    {

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("properties")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.IDictionary<string, string> Properties { get; set; } = new System.Collections.Generic.Dictionary<string, string>();

        [System.Text.Json.Serialization.JsonPropertyName("propertiesWithHistory")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.IDictionary<string, System.Collections.Generic.ICollection<ValueWithTimestamp>> PropertiesWithHistory { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("createdAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset CreatedAt { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("updatedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset UpdatedAt { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("archived")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool Archived { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("archivedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset ArchivedAt { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class PublicObjectId
    {

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class Paging
    {

        [System.Text.Json.Serialization.JsonPropertyName("next")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public NextPage Next { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("prev")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public PreviousPage Prev { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class PublicObjectSearchRequest
    {

        [System.Text.Json.Serialization.JsonPropertyName("filterGroups")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<FilterGroup> FilterGroups { get; set; } = new System.Collections.ObjectModel.Collection<FilterGroup>();

        [System.Text.Json.Serialization.JsonPropertyName("sorts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<string> Sorts { get; set; } = new System.Collections.ObjectModel.Collection<string>();

        [System.Text.Json.Serialization.JsonPropertyName("query")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Query { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("properties")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<string> Properties { get; set; } = new System.Collections.ObjectModel.Collection<string>();

        [System.Text.Json.Serialization.JsonPropertyName("limit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public int Limit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("after")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public int After { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class Error
    {
        /// <summary>
        /// A human readable message describing the error along with remediation steps where appropriate
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("message")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Message { get; set; }

        /// <summary>
        /// A unique identifier for the request. Include this value with any error reports or support tickets
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("correlationId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid CorrelationId { get; set; }

        /// <summary>
        /// The error category
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("category")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Category { get; set; }

        /// <summary>
        /// A specific category that contains more specific detail about the error
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("subCategory")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string SubCategory { get; set; }

        /// <summary>
        /// further information about the error
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("errors")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<ErrorDetail> Errors { get; set; }

        /// <summary>
        /// Context about the error condition
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("context")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.IDictionary<string, System.Collections.Generic.ICollection<string>> Context { get; set; }

        /// <summary>
        /// A map of link names to associated URIs containing documentation about the error or recommended remediation steps
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("links")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.IDictionary<string, string> Links { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class BatchResponseSimplePublicObjectWithErrors
    {

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public BatchResponseSimplePublicObjectWithErrorsStatus Status { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("results")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<SimplePublicObject> Results { get; set; } = new System.Collections.ObjectModel.Collection<SimplePublicObject>();

        [System.Text.Json.Serialization.JsonPropertyName("numErrors")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int NumErrors { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("errors")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<StandardError> Errors { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("requestedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset RequestedAt { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("startedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset StartedAt { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("completedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset CompletedAt { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("links")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.IDictionary<string, string> Links { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class PublicGdprDeleteInput
    {

        [System.Text.Json.Serialization.JsonPropertyName("objectId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ObjectId { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("idProperty")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string IdProperty { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class SimplePublicObjectInput
    {

        [System.Text.Json.Serialization.JsonPropertyName("properties")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.IDictionary<string, string> Properties { get; set; } = new System.Collections.Generic.Dictionary<string, string>();

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class CollectionResponseSimplePublicObjectWithAssociationsForwardPaging
    {

        [System.Text.Json.Serialization.JsonPropertyName("results")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<SimplePublicObjectWithAssociations> Results { get; set; } = new System.Collections.ObjectModel.Collection<SimplePublicObjectWithAssociations>();

        [System.Text.Json.Serialization.JsonPropertyName("paging")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public ForwardPaging Paging { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class AssociationSpec
    {

        [System.Text.Json.Serialization.JsonPropertyName("associationCategory")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public AssociationSpecAssociationCategory AssociationCategory { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("associationTypeId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public int AssociationTypeId { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class PublicMergeInput
    {

        [System.Text.Json.Serialization.JsonPropertyName("primaryObjectId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string PrimaryObjectId { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("objectIdToMerge")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ObjectIdToMerge { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class ErrorCategory
    {

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("httpStatus")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ErrorCategoryHttpStatus HttpStatus { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class SimplePublicObjectWithAssociations
    {

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("properties")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.IDictionary<string, string> Properties { get; set; } = new System.Collections.Generic.Dictionary<string, string>();

        [System.Text.Json.Serialization.JsonPropertyName("propertiesWithHistory")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.IDictionary<string, System.Collections.Generic.ICollection<ValueWithTimestamp>> PropertiesWithHistory { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("createdAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset CreatedAt { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("updatedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset UpdatedAt { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("archived")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool Archived { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("archivedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset ArchivedAt { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("associations")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.IDictionary<string, CollectionResponseAssociatedId> Associations { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class Filter
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Value { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("highValue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string HighValue { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("values")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<string> Values { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("propertyName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string PropertyName { get; set; }

        /// <summary>
        /// null
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("operator")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public FilterOperator Operator { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class BatchInputSimplePublicObjectBatchInput
    {

        [System.Text.Json.Serialization.JsonPropertyName("inputs")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<SimplePublicObjectBatchInput> Inputs { get; set; } = new System.Collections.ObjectModel.Collection<SimplePublicObjectBatchInput>();

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class BatchInputSimplePublicObjectInputForCreate
    {

        [System.Text.Json.Serialization.JsonPropertyName("inputs")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<SimplePublicObjectInputForCreate> Inputs { get; set; } = new System.Collections.ObjectModel.Collection<SimplePublicObjectInputForCreate>();

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class PreviousPage
    {

        [System.Text.Json.Serialization.JsonPropertyName("before")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Before { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("link")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Link { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class SimplePublicObjectBatchInput
    {

        [System.Text.Json.Serialization.JsonPropertyName("properties")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.IDictionary<string, string> Properties { get; set; } = new System.Collections.Generic.Dictionary<string, string>();

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class AssociatedId
    {

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Type { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class NextPage
    {

        [System.Text.Json.Serialization.JsonPropertyName("after")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string After { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("link")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Link { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class SimplePublicObjectInputForCreate
    {

        [System.Text.Json.Serialization.JsonPropertyName("properties")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.IDictionary<string, string> Properties { get; set; } = new System.Collections.Generic.Dictionary<string, string>();

        [System.Text.Json.Serialization.JsonPropertyName("associations")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<PublicAssociationsForObject> Associations { get; set; } = new System.Collections.ObjectModel.Collection<PublicAssociationsForObject>();

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public enum BatchResponseSimplePublicObjectStatus
    {

        [System.Runtime.Serialization.EnumMember(Value = @"PENDING")]
        PENDING = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"PROCESSING")]
        PROCESSING = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"CANCELED")]
        CANCELED = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"COMPLETE")]
        COMPLETE = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public enum BatchResponseSimplePublicObjectWithErrorsStatus
    {

        [System.Runtime.Serialization.EnumMember(Value = @"PENDING")]
        PENDING = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"PROCESSING")]
        PROCESSING = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"CANCELED")]
        CANCELED = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"COMPLETE")]
        COMPLETE = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public enum AssociationSpecAssociationCategory
    {

        [System.Runtime.Serialization.EnumMember(Value = @"HUBSPOT_DEFINED")]
        HUBSPOT_DEFINED = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"USER_DEFINED")]
        USER_DEFINED = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"INTEGRATOR_DEFINED")]
        INTEGRATOR_DEFINED = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public enum ErrorCategoryHttpStatus
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CONTINUE")]
        CONTINUE = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"SWITCHING_PROTOCOLS")]
        SWITCHING_PROTOCOLS = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"PROCESSING")]
        PROCESSING = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"OK")]
        OK = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"CREATED")]
        CREATED = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"ACCEPTED")]
        ACCEPTED = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"NON_AUTHORITATIVE_INFORMATION")]
        NON_AUTHORITATIVE_INFORMATION = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"NO_CONTENT")]
        NO_CONTENT = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"RESET_CONTENT")]
        RESET_CONTENT = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"PARTIAL_CONTENT")]
        PARTIAL_CONTENT = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"MULTI_STATUS")]
        MULTI_STATUS = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"ALREADY_REPORTED")]
        ALREADY_REPORTED = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"IM_USED")]
        IM_USED = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"MULTIPLE_CHOICES")]
        MULTIPLE_CHOICES = 13,

        [System.Runtime.Serialization.EnumMember(Value = @"MOVED_PERMANENTLY")]
        MOVED_PERMANENTLY = 14,

        [System.Runtime.Serialization.EnumMember(Value = @"FOUND")]
        FOUND = 15,

        [System.Runtime.Serialization.EnumMember(Value = @"SEE_OTHER")]
        SEE_OTHER = 16,

        [System.Runtime.Serialization.EnumMember(Value = @"NOT_MODIFIED")]
        NOT_MODIFIED = 17,

        [System.Runtime.Serialization.EnumMember(Value = @"USE_PROXY")]
        USE_PROXY = 18,

        [System.Runtime.Serialization.EnumMember(Value = @"TEMPORARY_REDIRECT")]
        TEMPORARY_REDIRECT = 19,

        [System.Runtime.Serialization.EnumMember(Value = @"PERMANENT_REDIRECT")]
        PERMANENT_REDIRECT = 20,

        [System.Runtime.Serialization.EnumMember(Value = @"BAD_REQUEST")]
        BAD_REQUEST = 21,

        [System.Runtime.Serialization.EnumMember(Value = @"UNAUTHORIZED")]
        UNAUTHORIZED = 22,

        [System.Runtime.Serialization.EnumMember(Value = @"PAYMENT_REQUIRED")]
        PAYMENT_REQUIRED = 23,

        [System.Runtime.Serialization.EnumMember(Value = @"FORBIDDEN")]
        FORBIDDEN = 24,

        [System.Runtime.Serialization.EnumMember(Value = @"NOT_FOUND")]
        NOT_FOUND = 25,

        [System.Runtime.Serialization.EnumMember(Value = @"METHOD_NOT_ALLOWED")]
        METHOD_NOT_ALLOWED = 26,

        [System.Runtime.Serialization.EnumMember(Value = @"NOT_ACCEPTABLE")]
        NOT_ACCEPTABLE = 27,

        [System.Runtime.Serialization.EnumMember(Value = @"PROXY_AUTHENTICATION_REQUIRED")]
        PROXY_AUTHENTICATION_REQUIRED = 28,

        [System.Runtime.Serialization.EnumMember(Value = @"REQUEST_TIMEOUT")]
        REQUEST_TIMEOUT = 29,

        [System.Runtime.Serialization.EnumMember(Value = @"CONFLICT")]
        CONFLICT = 30,

        [System.Runtime.Serialization.EnumMember(Value = @"GONE")]
        GONE = 31,

        [System.Runtime.Serialization.EnumMember(Value = @"LENGTH_REQUIRED")]
        LENGTH_REQUIRED = 32,

        [System.Runtime.Serialization.EnumMember(Value = @"PRECONDITION_FAILED")]
        PRECONDITION_FAILED = 33,

        [System.Runtime.Serialization.EnumMember(Value = @"REQUEST_ENTITY_TOO_LARGE")]
        REQUEST_ENTITY_TOO_LARGE = 34,

        [System.Runtime.Serialization.EnumMember(Value = @"REQUEST_URI_TOO_LONG")]
        REQUEST_URI_TOO_LONG = 35,

        [System.Runtime.Serialization.EnumMember(Value = @"UNSUPPORTED_MEDIA_TYPE")]
        UNSUPPORTED_MEDIA_TYPE = 36,

        [System.Runtime.Serialization.EnumMember(Value = @"REQUESTED_RANGE_NOT_SATISFIABLE")]
        REQUESTED_RANGE_NOT_SATISFIABLE = 37,

        [System.Runtime.Serialization.EnumMember(Value = @"EXPECTATION_FAILED")]
        EXPECTATION_FAILED = 38,

        [System.Runtime.Serialization.EnumMember(Value = @"IM_A_TEAPOT")]
        IM_A_TEAPOT = 39,

        [System.Runtime.Serialization.EnumMember(Value = @"MISDIRECTED_REQUEST")]
        MISDIRECTED_REQUEST = 40,

        [System.Runtime.Serialization.EnumMember(Value = @"UNPROCESSABLE_ENTITY")]
        UNPROCESSABLE_ENTITY = 41,

        [System.Runtime.Serialization.EnumMember(Value = @"LOCKED")]
        LOCKED = 42,

        [System.Runtime.Serialization.EnumMember(Value = @"FAILED_DEPENDENCY")]
        FAILED_DEPENDENCY = 43,

        [System.Runtime.Serialization.EnumMember(Value = @"UPGRADE_REQUIRED")]
        UPGRADE_REQUIRED = 44,

        [System.Runtime.Serialization.EnumMember(Value = @"PRECONDITION_REQUIRED")]
        PRECONDITION_REQUIRED = 45,

        [System.Runtime.Serialization.EnumMember(Value = @"TOO_MANY_REQUESTS")]
        TOO_MANY_REQUESTS = 46,

        [System.Runtime.Serialization.EnumMember(Value = @"REQUEST_HEADERS_FIELDS_TOO_LARGE")]
        REQUEST_HEADERS_FIELDS_TOO_LARGE = 47,

        [System.Runtime.Serialization.EnumMember(Value = @"INTERNAL_STALE_SERVICE_DISCOVERY")]
        INTERNAL_STALE_SERVICE_DISCOVERY = 48,

        [System.Runtime.Serialization.EnumMember(Value = @"UNAVAILABLE_FOR_LEGAL_REASONS")]
        UNAVAILABLE_FOR_LEGAL_REASONS = 49,

        [System.Runtime.Serialization.EnumMember(Value = @"MIGRATION_IN_PROGRESS")]
        MIGRATION_IN_PROGRESS = 50,

        [System.Runtime.Serialization.EnumMember(Value = @"INTERNAL_SERVER_ERROR")]
        INTERNAL_SERVER_ERROR = 51,

        [System.Runtime.Serialization.EnumMember(Value = @"NOT_IMPLEMENTED")]
        NOT_IMPLEMENTED = 52,

        [System.Runtime.Serialization.EnumMember(Value = @"BAD_GATEWAY")]
        BAD_GATEWAY = 53,

        [System.Runtime.Serialization.EnumMember(Value = @"SERVICE_UNAVAILABLE")]
        SERVICE_UNAVAILABLE = 54,

        [System.Runtime.Serialization.EnumMember(Value = @"GATEWAY_TIMEOUT")]
        GATEWAY_TIMEOUT = 55,

        [System.Runtime.Serialization.EnumMember(Value = @"HTTP_VERSION_NOT_SUPPORTED")]
        HTTP_VERSION_NOT_SUPPORTED = 56,

        [System.Runtime.Serialization.EnumMember(Value = @"VARIANT_ALSO_NEGOTIATES")]
        VARIANT_ALSO_NEGOTIATES = 57,

        [System.Runtime.Serialization.EnumMember(Value = @"INSUFFICIENT_STORAGE")]
        INSUFFICIENT_STORAGE = 58,

        [System.Runtime.Serialization.EnumMember(Value = @"LOOP_DETECTED")]
        LOOP_DETECTED = 59,

        [System.Runtime.Serialization.EnumMember(Value = @"NOT_EXTENDED")]
        NOT_EXTENDED = 60,

        [System.Runtime.Serialization.EnumMember(Value = @"NETWORK_AUTHENTICATION_REQUIRED")]
        NETWORK_AUTHENTICATION_REQUIRED = 61,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public enum FilterOperator
    {

        [System.Runtime.Serialization.EnumMember(Value = @"EQ")]
        EQ = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"NEQ")]
        NEQ = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"LT")]
        LT = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"LTE")]
        LTE = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"GT")]
        GT = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"GTE")]
        GTE = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"BETWEEN")]
        BETWEEN = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"IN")]
        IN = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"NOT_IN")]
        NOT_IN = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"HAS_PROPERTY")]
        HAS_PROPERTY = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"NOT_HAS_PROPERTY")]
        NOT_HAS_PROPERTY = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"CONTAINS_TOKEN")]
        CONTAINS_TOKEN = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"NOT_CONTAINS_TOKEN")]
        NOT_CONTAINS_TOKEN = 12,

    }


}

#pragma warning restore  108
#pragma warning restore  114
#pragma warning restore  472
#pragma warning restore  612
#pragma warning restore 1573
#pragma warning restore 1591
#pragma warning restore 8073
#pragma warning restore 3016
#pragma warning restore 8603
