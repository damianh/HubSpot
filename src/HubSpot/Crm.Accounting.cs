// <auto-generated>
//     This code was generated by Refitter.
// </auto-generated>

using Refit;
using System.Threading;
using System.Threading.Tasks;
using System.Collections.Generic;

namespace HubSpot.Crm.Accounting
{
    public interface IAccountingExtension
    {

        /// <summary>
        /// Call this endpoint with the response to a customer creation request.
        /// </summary>
        [Post("/crm/v3/extensions/accounting/callback/customer-create/{requestId}")]
        Task CreateCustomer(string requestId, [Body] ResultIdAccountingResponse body, CancellationToken cancellationToken = default);

        /// <summary>
        /// Call this endpoint with the response to a customer search request.
        /// </summary>
        [Post("/crm/v3/extensions/accounting/callback/customer-search/{requestId}")]
        Task DoCustomerSearch(string requestId, [Body] CustomerSearchResponseExternal body, CancellationToken cancellationToken = default);

        /// <summary>
        /// Call this endpoint with the response to an exchange rate request.
        /// </summary>
        [Post("/crm/v3/extensions/accounting/callback/exchange-rate/{requestId}")]
        Task CreateExchangeRate(string requestId, [Body] ExchangeRateResponse body, CancellationToken cancellationToken = default);

        /// <summary>
        /// Call this endpoint with the response to a invoice creation request.
        /// </summary>
        [Post("/crm/v3/extensions/accounting/callback/invoice-create/{requestId}")]
        Task CreateInvoice(string requestId, [Body] ResultIdAccountingResponse body, CancellationToken cancellationToken = default);

        /// <summary>
        /// Call this endpoint with the PDF content of a requested invoice.
        /// </summary>
        [Post("/crm/v3/extensions/accounting/callback/invoice-pdf/{requestId}")]
        Task InvoicePdf(string requestId, [Body] InvoicePdfResponse body, CancellationToken cancellationToken = default);

        /// <summary>
        /// Call this endpoint with the response to a invoice search request.
        /// </summary>
        [Post("/crm/v3/extensions/accounting/callback/invoice-search/{requestId}")]
        Task DoInvoiceSearch(string requestId, [Body] InvoiceSearchResponse body, CancellationToken cancellationToken = default);

        /// <summary>
        /// Call this endpoint with the response to a invoice get-by-id request.
        /// </summary>
        [Post("/crm/v3/extensions/accounting/callback/invoices/{requestId}")]
        Task GetById(string requestId, [Body] InvoicesResponseExternal body, CancellationToken cancellationToken = default);

        /// <summary>
        /// Call this endpoint with the response to a product search request.
        /// </summary>
        [Post("/crm/v3/extensions/accounting/callback/product-search/{requestId}")]
        Task DoProductSearch(string requestId, [Body] ProductSearchResponse body, CancellationToken cancellationToken = default);

        /// <summary>
        /// Call this endpoint with the response to a taxes search request.
        /// </summary>
        [Post("/crm/v3/extensions/accounting/callback/tax-search/{requestId}")]
        Task DoTaxSearch(string requestId, [Body] TaxSearchResponse body, CancellationToken cancellationToken = default);

        /// <summary>
        /// Call this endpoint with the response to a terms search request.
        /// </summary>
        [Post("/crm/v3/extensions/accounting/callback/terms/{requestId}")]
        Task CreateTerm(string requestId, [Body] TermsResponse body, CancellationToken cancellationToken = default);

        /// <summary>
        /// Returns invoice data for an Accounting account from the specified ID
        /// </summary>
        [Get("/crm/v3/extensions/accounting/invoice/{invoiceId}")]
        Task<InvoiceReadResponse> GetById(string invoiceId, [Query(CollectionFormat.Multi)] string accountId, CancellationToken cancellationToken = default);

        /// <summary>
        /// Updates an Invoice by the given ID.
        /// </summary>
        [Patch("/crm/v3/extensions/accounting/invoice/{invoiceId}")]
        Task<InvoiceUpdateResponse> Update(string invoiceId, [Query(CollectionFormat.Multi)] string accountId, [Body] InvoiceUpdateRequest body, CancellationToken cancellationToken = default);

        /// <summary>
        /// Records an payment against an invoice.
        /// </summary>
        [Post("/crm/v3/extensions/accounting/invoice/{invoiceId}/payment")]
        Task<InvoiceUpdateResponse> CreatePayment(string invoiceId, [Query(CollectionFormat.Multi)] string accountId, [Body] InvoiceCreatePaymentRequest body, CancellationToken cancellationToken = default);

        /// <summary>
        /// Returns the URL settings for an accounting app with the specified ID.
        /// </summary>
        [Get("/crm/v3/extensions/accounting/settings/{appId}")]
        Task<AccountingAppSettings> GetById(int appId, CancellationToken cancellationToken = default);

        /// <summary>
        /// Add/Update the URL settings for an accounting app with the specified ID.  All URLs must use the `https` protocol.
        /// </summary>
        [Put("/crm/v3/extensions/accounting/settings/{appId}")]
        Task Replace(int appId, [Body] AccountingAppSettings body, CancellationToken cancellationToken = default);

        /// <summary>
        /// Imports contacts' properties from an external accounting system to HubSpot. Import details, including property mappings, must be configured previously in HubSpot infrastructure.
        /// </summary>
        [Post("/crm/v3/extensions/accounting/sync/{appId}/contacts")]
        Task<ActionResponse> CreateContact(int appId, [Body] SyncContactsRequest body, CancellationToken cancellationToken = default);

        /// <summary>
        /// Imports products' properties from an external accounting system to HubSpot. Import details, including property mappings, must be configured previously in HubSpot infrastructure.
        /// </summary>
        [Post("/crm/v3/extensions/accounting/sync/{appId}/products")]
        Task<ActionResponse> CreateProduct(int appId, [Body] SyncProductsRequest body, CancellationToken cancellationToken = default);

        /// <summary>
        /// Creates an account which contains the information about the account in the external accounting system.  This *must* be called after a user connects their HubSpot account to the external accounting system, as there is no other way for HubSpot to obtain the external account details.
        /// </summary>
        [Put("/crm/v3/extensions/accounting/user-accounts")]
        Task Replace([Body] CreateUserAccountRequestExternal body, CancellationToken cancellationToken = default);

        /// <summary>
        /// Deletes a user account from HubSpot, meaning that HubSpot will no longer send requests to the external accounting system for this user.
        /// </summary>
        [Delete("/crm/v3/extensions/accounting/user-accounts/{accountId}")]
        Task Archive(string accountId, CancellationToken cancellationToken = default);

    }


}


//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 612 // Disable "CS0612 '...' is obsolete"
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

namespace HubSpot.Crm.Accounting
{
    using System = global::System;

    

    /// <summary>
    /// A response to a search for products.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class ProductSearchResponse
    {
        /// <summary>
        /// Designates if the response is a success ('OK') or failure ('ERR').
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("@result")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ProductSearchResponseResult Result { get; set; }

        /// <summary>
        /// The list of products that matched the search criteria.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("products")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Product> Products { get; set; } = new System.Collections.ObjectModel.Collection<Product>();

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Indicates if importing invoices from the external account system into HubSpot is supported for the integration.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class ImportInvoiceFeature
    {
        /// <summary>
        /// Indicates if importing invoices from the external account system into HubSpot.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("enabled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool Enabled { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Represents an address of a customer
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class Address
    {
        /// <summary>
        /// The country of the address.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Country { get; set; }

        /// <summary>
        /// A region of the county of the address.  May represent county, state etc.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("countrySubDivisionCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string CountrySubDivisionCode { get; set; }

        /// <summary>
        /// The city of the address.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("city")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string City { get; set; }

        /// <summary>
        /// The postcode/zipcode of the address.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("postalCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string PostalCode { get; set; }

        /// <summary>
        /// The first line of the address.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("lineOne")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string LineOne { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class ObjectSyncFeature
    {
        /// <summary>
        /// Indicates if syncing the object type from the external accounting system into HubSpot is supported.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("toHubSpot")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool ToHubSpot { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Lists the individual aspects of creating invoices that are enabled for the integration, as part of the create invoice flow in HubSpot.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class CreateInvoiceSubFeatures
    {
        /// <summary>
        /// Indicates if a new customer can be created in the external accounting system.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("createCustomer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool CreateCustomer { get; set; }

        /// <summary>
        /// Indicates if taxes can be specified by the HubSpot user for line items.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("taxes")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool Taxes { get; set; }

        /// <summary>
        /// Indicates if the external accounting system supports fetching exchange rates when create an invoice in HubSpot for a customer billed in a different currency.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("exchangeRates")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool ExchangeRates { get; set; }

        /// <summary>
        /// Indicates if the external accounting system supports fetching payment terms.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("terms")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool Terms { get; set; }

        /// <summary>
        /// Indicates if a visible comment can be added to invoices.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("invoiceComments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool InvoiceComments { get; set; }

        /// <summary>
        /// Indicates if invoice-level discounts can be added to invoices.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("invoiceDiscounts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool InvoiceDiscounts { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// A response to a search for payment terms.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class TermsResponse
    {
        /// <summary>
        /// Designates if the response is a success ('OK') or failure ('ERR').
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("@result")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public TermsResponseResult Result { get; set; }

        /// <summary>
        /// The list of payment terms that matched the search criteria.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("terms")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<AccountingExtensionTerm> Terms { get; set; } = new System.Collections.ObjectModel.Collection<AccountingExtensionTerm>();

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Outlines the features that are supported by the external accounting system.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class AccountingFeatures
    {

        [System.Text.Json.Serialization.JsonPropertyName("createInvoice")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public CreateInvoiceFeature CreateInvoice { get; set; } = new CreateInvoiceFeature();

        [System.Text.Json.Serialization.JsonPropertyName("importInvoice")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public ImportInvoiceFeature ImportInvoice { get; set; } = new ImportInvoiceFeature();

        /// <summary>
        /// Indicates if syncing objects from the external account system into HubSpot is supported for the integration.
        /// <br/>This is a map, where the key is one of `CONTACT` or `PRODUCT`, to indicate which type of object you do or don't support syncing.
        /// <br/>For example:
        /// <br/>```
        /// <br/>  "sync": {
        /// <br/>    "CONTACT": {
        /// <br/>      "toHubSpot": true
        /// <br/>    },
        /// <br/>    "PRODUCT": {
        /// <br/>      "toHubSpot": true
        /// <br/>    }
        /// <br/>  }
        /// <br/>```
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("sync")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.IDictionary<string, ObjectSyncFeature> Sync { get; set; } = new System.Collections.Generic.Dictionary<string, ObjectSyncFeature>();

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Representation of a product in the external accounting system.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class Product
    {

        [System.Text.Json.Serialization.JsonPropertyName("unitPrice")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public UnitPrice UnitPrice { get; set; } = new UnitPrice();

        /// <summary>
        /// Identifies if the product is tax exempt or not.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("taxExempt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool TaxExempt { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("salesTaxType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public TaxType SalesTaxType { get; set; }

        /// <summary>
        /// The display name of the product.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }

        /// <summary>
        /// The description of the product.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Description { get; set; }

        /// <summary>
        /// The ID of the product in the external accounting system.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The invoice data to update in HubSpot
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class InvoiceUpdateRequest
    {

        [System.Text.Json.Serialization.JsonPropertyName("externalInvoiceNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string ExternalInvoiceNumber { get; set; }

        /// <summary>
        /// The ISO 4217 currency code that represents the currency used in the invoice to bill the recipient
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("currencyCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string CurrencyCode { get; set; }

        /// <summary>
        /// The ISO-8601 due date of the invoice.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("dueDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset DueDate { get; set; }

        /// <summary>
        /// The ID of the invoice recipient. This is the recipient ID from the external accounting system.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("externalRecipientId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string ExternalRecipientId { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("receivedByRecipientDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long ReceivedByRecipientDate { get; set; }

        /// <summary>
        /// States if the invoice is voided or not.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("isVoided")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool IsVoided { get; set; }

        /// <summary>
        /// The ISO-8601 datetime of when the customer received the invoice.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("receivedByCustomerDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string ReceivedByCustomerDate { get; set; }

        /// <summary>
        /// The number / name of the invoice.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("invoiceNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string InvoiceNumber { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Representation of a tax defined in the external accounting system.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class Tax
    {
        /// <summary>
        /// The code/ID of the tax in the external accounting system.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Code { get; set; }

        /// <summary>
        /// The tax percentage.  For example, 8.05 represents a 8.05% tax rate.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("percentage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public double Percentage { get; set; }

        /// <summary>
        /// The display name of the tax.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class ErrorDetail
    {
        /// <summary>
        /// A human readable message describing the error along with remediation steps where appropriate
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("message")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Message { get; set; }

        /// <summary>
        /// The name of the field or parameter in which the error was found.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("in")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string In { get; set; }

        /// <summary>
        /// The status code associated with the error detail
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Code { get; set; }

        /// <summary>
        /// A specific category that contains more specific detail about the error
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("subCategory")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string SubCategory { get; set; }

        /// <summary>
        /// Context about the error condition
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("context")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.IDictionary<string, System.Collections.Generic.ICollection<string>> Context { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// A response to a search for customers.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class CustomerSearchResponseExternal
    {
        /// <summary>
        /// Designates if the response is a success ('OK') or failure ('ERR').
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("@result")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public CustomerSearchResponseExternalResult Result { get; set; }

        /// <summary>
        /// The list of customers that matched the search criteria.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("customers")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<AccountingExtensionCustomer> Customers { get; set; } = new System.Collections.ObjectModel.Collection<AccountingExtensionCustomer>();

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// A request to import external accounting product properties in HubSpot
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class UpdatedProduct
    {
        /// <summary>
        /// The operation to be performed.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("syncAction")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public UpdatedProductSyncAction SyncAction { get; set; }

        /// <summary>
        /// The timestamp (ISO8601 format) when the product was updated in the external accounting system.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("updatedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset UpdatedAt { get; set; }

        /// <summary>
        /// The price of the product.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("price")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public double Price { get; set; }

        /// <summary>
        /// The ISO 4217 currency code that represents the currency of the product price.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("currencyCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string CurrencyCode { get; set; }

        /// <summary>
        /// The ID of the product in the external accounting system.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        /// <summary>
        /// A map of key-value product properties to be imported.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("properties")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.IDictionary<string, string> Properties { get; set; } = new System.Collections.Generic.Dictionary<string, string>();

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// A response to the creation of an entity (eg. invoice, customer).
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class ResultIdAccountingResponse
    {
        /// <summary>
        /// Designates if the response is a success ('OK') or failure ('ERR').
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("@result")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ResultIdAccountingResponseResult Result { get; set; }

        /// <summary>
        /// The ID of created entity.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Representation of an invoice in the external accounting system.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class AccountingExtensionInvoice
    {
        /// <summary>
        /// The total amount due.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("amountDue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public double AmountDue { get; set; }

        /// <summary>
        /// The remaining outstanding balance due.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("balance")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double Balance { get; set; }

        /// <summary>
        /// The due date for payment of the invoice, in ISO-8601 date format (yyyy-MM-dd)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("dueDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset DueDate { get; set; }

        /// <summary>
        /// The invoice number
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("invoiceNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string InvoiceNumber { get; set; }

        /// <summary>
        /// The ID of the customer that this invoice is for.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("customerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string CustomerId { get; set; }

        /// <summary>
        /// The ISO 4217 currency code that represents the currency of this invoice.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Currency { get; set; }

        /// <summary>
        /// A link to the invoice in the external accounting system.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("invoiceLink")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string InvoiceLink { get; set; }

        /// <summary>
        /// The name of the customer that this invoice is for.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("customerName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string CustomerName { get; set; }

        /// <summary>
        /// The currency status of the invoice.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public AccountingExtensionInvoiceStatus Status { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Information about the account in your external account system.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class CreateUserAccountRequestExternal
    {
        /// <summary>
        /// The id of the account in your system.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("accountId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string AccountId { get; set; }

        /// <summary>
        /// The name of the account in your system. This is normally the name visible to your users.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("accountName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string AccountName { get; set; }

        /// <summary>
        /// The default currency that this account uses.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("currencyCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string CurrencyCode { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class InvoiceCreatePaymentRequest
    {
        /// <summary>
        /// The amount that this payment is for.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("amountPaid")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public double AmountPaid { get; set; }

        /// <summary>
        /// The ISO 4217 currency code that represents the currency of the payment.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("currencyCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string CurrencyCode { get; set; }

        /// <summary>
        /// The datetime that this payment was received.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("paymentDateTime")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset PaymentDateTime { get; set; }

        /// <summary>
        /// The id of this payment in the external accounting system.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("externalPaymentId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ExternalPaymentId { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// A response to a search for taxes.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class TaxSearchResponse
    {
        /// <summary>
        /// Designates if the response is a success ('OK') or failure ('ERR').
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("@result")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public TaxSearchResponseResult Result { get; set; }

        /// <summary>
        /// The list of taxes that matched the search criteria
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("taxes")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Tax> Taxes { get; set; } = new System.Collections.ObjectModel.Collection<Tax>();

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Representation of payment terms that are defined in the external accounting system. One of 'dueDays' or 'dueDate' is required.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class AccountingExtensionTerm
    {
        /// <summary>
        /// The due date for payment of the invoice, in ISO-8601 date format (yyyy-MM-dd)
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("dueDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset DueDate { get; set; }

        /// <summary>
        /// The display name of the payment terms.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }

        /// <summary>
        /// The ID of the payment terms in the external accounting system.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        /// <summary>
        /// The number of days that these payment terms represent.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("dueDays")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int DueDays { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The URL endpoints that HubSpot will send requests to an external accounting system for certain actions.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class AccountingAppUrls
    {
        /// <summary>
        /// A URL that specifies the endpoint where invoices can be retrieved.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("getInvoiceUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string GetInvoiceUrl { get; set; }

        /// <summary>
        /// A URL that specifies the endpoint where a customer search can be performed.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("searchCustomerUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string SearchCustomerUrl { get; set; }

        /// <summary>
        /// A URL that specifies the endpoint where an invoice PDF can be retrieved.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("getInvoicePdfUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string GetInvoicePdfUrl { get; set; }

        /// <summary>
        /// A template URL that indicates the endpoint where a customer can be fetched by ID. Note that ${CUSTOMER_ID} in this URL will be replaced by the actual customer ID. For example: https://myapp.com/api/customers/${CUSTOMER_ID}
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("customerUrlTemplate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string CustomerUrlTemplate { get; set; }

        /// <summary>
        /// A template URL that indicates the endpoint where a product can be fetched by ID. Note that ${PRODUCT_ID} in this URL will be replaced by the actual product ID. For example: https://myapp.com/api/products/${PRODUCT_ID}
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("productUrlTemplate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ProductUrlTemplate { get; set; }

        /// <summary>
        /// A template URL that indicates the endpoint where an invoice can be fetched by ID. Note that ${INVOICE_ID} in this URL will be replaced by the actual invoice ID. For example: https://myapp.com/api/invoices/${INVOICE_ID}
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("invoiceUrlTemplate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string InvoiceUrlTemplate { get; set; }

        /// <summary>
        /// A URL that specifies the endpoint where an invoices can be created.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("createInvoiceUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string CreateInvoiceUrl { get; set; }

        /// <summary>
        /// A URL that specifies the endpoint where an invoice search can be performed.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("searchInvoiceUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string SearchInvoiceUrl { get; set; }

        /// <summary>
        /// A URL that specifies the endpoint where a product search can be performed.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("searchProductUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string SearchProductUrl { get; set; }

        /// <summary>
        /// A URL that specifies the endpoint where payment terms can be retrieved.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("getTermsUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string GetTermsUrl { get; set; }

        /// <summary>
        /// A URL that specifies the endpoint where a new customer can be created.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("createCustomerUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string CreateCustomerUrl { get; set; }

        /// <summary>
        /// A URL that specifies the endpoint where a tax search can be performed.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("searchTaxUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string SearchTaxUrl { get; set; }

        /// <summary>
        /// A URL that specifies the endpoint where exchange rates can be queried.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("exchangeRateUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string ExchangeRateUrl { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("searchUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string SearchUrl { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("searchCountUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string SearchCountUrl { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The invoice data stored in HubSpot
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class InvoiceReadResponse
    {
        /// <summary>
        /// The invoice number. Note that this is _not_ the ID of the invoice, but the number that the billed customer will see.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("externalInvoiceNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string ExternalInvoiceNumber { get; set; }

        /// <summary>
        /// The total amount that this invoice is for.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("totalAmountBilled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public double TotalAmountBilled { get; set; }

        /// <summary>
        /// The remaining balance due for the invoice.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("balanceDue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public double BalanceDue { get; set; }

        /// <summary>
        /// The ISO 4217 currency code that represents the currency of the invoice.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("currencyCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string CurrencyCode { get; set; }

        /// <summary>
        /// The due date of the invoice
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("dueDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset DueDate { get; set; }

        /// <summary>
        /// The id of the customer in the external accounting system that the invoice was sent to.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("externalRecipientId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ExternalRecipientId { get; set; }

        /// <summary>
        /// The datetime that that invoice was sent to the customer.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("receivedByRecipientDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long ReceivedByRecipientDate { get; set; }

        /// <summary>
        /// The datetime that the invoice was created in the external accounting system.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("externalCreateDateTime")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long ExternalCreateDateTime { get; set; }

        /// <summary>
        /// Indicated is the invoice has been voided or not.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("isVoided")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool IsVoided { get; set; }

        /// <summary>
        /// The datetime that the invoice was created in HubSpot.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("createdAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset CreatedAt { get; set; }

        /// <summary>
        /// The datetime that the invoice was last updated in HubSpot.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("updatedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset UpdatedAt { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("archivedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset ArchivedAt { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("archived")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool Archived { get; set; }

        /// <summary>
        /// The id of the account in the external accounting system that this invoice is related to.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("externalAccountId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ExternalAccountId { get; set; }

        /// <summary>
        /// The status of the invoice
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("invoiceStatus")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public InvoiceReadResponseInvoiceStatus InvoiceStatus { get; set; }

        /// <summary>
        /// The id of this invoice in the external accounting system.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The URL Settings, which defines the URL endpoints that HubSpot will send requests to an external accounting application for certain actions.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class AccountingAppSettings
    {
        /// <summary>
        /// The ID of the accounting app. This is the identifier of the application created in your HubSpot developer portal.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("appId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public int AppId { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("urls")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public AccountingAppUrls Urls { get; set; } = new AccountingAppUrls();

        [System.Text.Json.Serialization.JsonPropertyName("features")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public AccountingFeatures Features { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class InvoiceUpdateResponse
    {

        [System.Text.Json.Serialization.JsonPropertyName("externalInvoiceNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string ExternalInvoiceNumber { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("totalAmountBilled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public double TotalAmountBilled { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("balanceDue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public double BalanceDue { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("currencyCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string CurrencyCode { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("dueDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset DueDate { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("externalRecipientId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ExternalRecipientId { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("receivedByRecipientDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long ReceivedByRecipientDate { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("externalCreateDateTime")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long ExternalCreateDateTime { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isVoided")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool IsVoided { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("createdAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset CreatedAt { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("updatedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset UpdatedAt { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("archivedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset ArchivedAt { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("archived")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool Archived { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("externalAccountId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ExternalAccountId { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("invoiceStatus")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public InvoiceUpdateResponseInvoiceStatus InvoiceStatus { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Representation of a customer in the external accounting system.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class AccountingExtensionCustomer
    {
        /// <summary>
        /// The customer's email address
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("emailAddress")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string EmailAddress { get; set; }

        /// <summary>
        /// The customer's full name
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }

        /// <summary>
        /// The ID of the customer in the external accounting system.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("billingAddress")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public Address BillingAddress { get; set; }

        /// <summary>
        /// The ISO 4217 currency code that represents the currency the customer should be billed in.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("currencyCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string CurrencyCode { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// A response to a request for invoices.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class InvoicesResponseExternal
    {
        /// <summary>
        /// Designates if the response is a success ('OK') or failure ('ERR').
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("@result")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public InvoicesResponseExternalResult Result { get; set; }

        /// <summary>
        /// The list of invoices that were found for the request.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("invoices")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<AccountingExtensionInvoice> Invoices { get; set; } = new System.Collections.ObjectModel.Collection<AccountingExtensionInvoice>();

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// A response to a search for invoices.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class InvoiceSearchResponse
    {
        /// <summary>
        /// Designates if the response is a success ('OK') or failure ('ERR').
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("@result")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public InvoiceSearchResponseResult Result { get; set; }

        /// <summary>
        /// The list of invoices that matched the search criteria.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("invoices")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<AccountingExtensionInvoice> Invoices { get; set; } = new System.Collections.ObjectModel.Collection<AccountingExtensionInvoice>();

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class Error
    {
        /// <summary>
        /// A human readable message describing the error along with remediation steps where appropriate
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("message")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Message { get; set; }

        /// <summary>
        /// A unique identifier for the request. Include this value with any error reports or support tickets
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("correlationId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid CorrelationId { get; set; }

        /// <summary>
        /// The error category
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("category")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Category { get; set; }

        /// <summary>
        /// A specific category that contains more specific detail about the error
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("subCategory")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string SubCategory { get; set; }

        /// <summary>
        /// further information about the error
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("errors")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<ErrorDetail> Errors { get; set; }

        /// <summary>
        /// Context about the error condition
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("context")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.IDictionary<string, System.Collections.Generic.ICollection<string>> Context { get; set; }

        /// <summary>
        /// A map of link names to associated URIs containing documentation about the error or recommended remediation steps
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("links")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.IDictionary<string, string> Links { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// A request to import external accounting contact properties in HubSpot
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class UpdatedContact
    {
        /// <summary>
        /// The operation to be performed.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("syncAction")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public UpdatedContactSyncAction SyncAction { get; set; }

        /// <summary>
        /// The timestamp (ISO8601 format) when the customer was updated in the external accounting system.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("updatedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset UpdatedAt { get; set; }

        /// <summary>
        /// The customer's email address
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("emailAddress")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string EmailAddress { get; set; }

        /// <summary>
        /// The ID of the customer in the external accounting system.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        /// <summary>
        /// Designates the type of the customer object.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("customerType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public UpdatedContactCustomerType CustomerType { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Indicates what elements of creating invoices in HubSpot is supported for the integration.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class CreateInvoiceFeature
    {
        /// <summary>
        /// Indicates if creating invoices in HubSpot is supported for the integration.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("enabled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool Enabled { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("subFeatures")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public CreateInvoiceSubFeatures SubFeatures { get; set; } = new CreateInvoiceSubFeatures();

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// A response that contains the PDF of an invoice
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class InvoicePdfResponse
    {
        /// <summary>
        /// Designates if the response is a success ('OK') or failure ('ERR').
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("@result")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public InvoicePdfResponseResult Result { get; set; }

        /// <summary>
        /// The bytes of the invoice PDF.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("invoice")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$")]
        public byte[] Invoice { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class ActionResponse
    {

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ActionResponseStatus Status { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("requestedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset RequestedAt { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("startedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset StartedAt { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("completedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset CompletedAt { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("links")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.IDictionary<string, string> Links { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// A response to the request for an exchange rate value. It represents the exchange rate from the source currency to the target currency.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class ExchangeRateResponse
    {
        /// <summary>
        /// Designates if the response is a success ('OK') or failure ('ERR').
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("@result")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ExchangeRateResponseResult Result { get; set; }

        /// <summary>
        /// The exchange rate between the 2 currencies
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("exchangeRate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public double ExchangeRate { get; set; }

        /// <summary>
        /// The ISO 4217 currency code that represents the source currency of the exchange rate.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("sourceCurrencyCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string SourceCurrencyCode { get; set; }

        /// <summary>
        /// The ISO 4217 currency code that represents the target currency of the exchange rate.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("targetCurrencyCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string TargetCurrencyCode { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// A request to import external accounting product properties in HubSpot
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class SyncProductsRequest
    {
        /// <summary>
        /// The ID of the account in the external accounting system. This is the value that will be passed as `accountId` for all outbound calls for the user from HubSpot to the external accounting system.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("accountId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string AccountId { get; set; }

        /// <summary>
        /// A list of products to be imported.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("products")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<UpdatedProduct> Products { get; set; } = new System.Collections.ObjectModel.Collection<UpdatedProduct>();

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Represents a tax in the external accounting system.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class TaxType
    {
        /// <summary>
        /// The code/ID of the tax in the external accounting system.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Code { get; set; }

        /// <summary>
        /// The display name of the tax.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Name { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Represents a unit price
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class UnitPrice
    {
        /// <summary>
        /// The actual unit price amount.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double Amount { get; set; }

        /// <summary>
        /// Indicates if the unit price amount already includes taxes.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("taxIncluded")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool TaxIncluded { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// A request to import external accounting contact properties in HubSpot
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class SyncContactsRequest
    {
        /// <summary>
        /// The ID of the account in the external accounting system. This is the value that will be passed as `accountId` for all outbound calls for the user from HubSpot to the external accounting system.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("accountId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string AccountId { get; set; }

        /// <summary>
        /// A list of contacts to be imported.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("contacts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<UpdatedContact> Contacts { get; set; } = new System.Collections.ObjectModel.Collection<UpdatedContact>();

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public enum ProductSearchResponseResult
    {

        [System.Runtime.Serialization.EnumMember(Value = @"OK")]
        OK = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"ERR")]
        ERR = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public enum TermsResponseResult
    {

        [System.Runtime.Serialization.EnumMember(Value = @"OK")]
        OK = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"ERR")]
        ERR = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public enum CustomerSearchResponseExternalResult
    {

        [System.Runtime.Serialization.EnumMember(Value = @"OK")]
        OK = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"ERR")]
        ERR = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public enum UpdatedProductSyncAction
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CREATE")]
        CREATE = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"UPDATE")]
        UPDATE = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"DELETE")]
        DELETE = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public enum ResultIdAccountingResponseResult
    {

        [System.Runtime.Serialization.EnumMember(Value = @"OK")]
        OK = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"ERR")]
        ERR = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public enum AccountingExtensionInvoiceStatus
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CREATED")]
        CREATED = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"SENT")]
        SENT = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"PAID")]
        PAID = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"CLOSED")]
        CLOSED = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"OVERDUE")]
        OVERDUE = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"VOIDED")]
        VOIDED = 5,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public enum TaxSearchResponseResult
    {

        [System.Runtime.Serialization.EnumMember(Value = @"OK")]
        OK = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"ERR")]
        ERR = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public enum InvoiceReadResponseInvoiceStatus
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CREATED")]
        CREATED = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"SENT")]
        SENT = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"PAID")]
        PAID = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"CLOSED")]
        CLOSED = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"OVERDUE")]
        OVERDUE = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"VOIDED")]
        VOIDED = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"NONE")]
        NONE = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"UNPAID")]
        UNPAID = 7,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public enum InvoiceUpdateResponseInvoiceStatus
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CREATED")]
        CREATED = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"SENT")]
        SENT = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"PAID")]
        PAID = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"CLOSED")]
        CLOSED = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"OVERDUE")]
        OVERDUE = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"VOIDED")]
        VOIDED = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"NONE")]
        NONE = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"UNPAID")]
        UNPAID = 7,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public enum InvoicesResponseExternalResult
    {

        [System.Runtime.Serialization.EnumMember(Value = @"OK")]
        OK = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"ERR")]
        ERR = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public enum InvoiceSearchResponseResult
    {

        [System.Runtime.Serialization.EnumMember(Value = @"OK")]
        OK = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"ERR")]
        ERR = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public enum UpdatedContactSyncAction
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CREATE")]
        CREATE = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"UPDATE")]
        UPDATE = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"DELETE")]
        DELETE = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public enum UpdatedContactCustomerType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CONTACT")]
        CONTACT = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"COMPANY")]
        COMPANY = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public enum InvoicePdfResponseResult
    {

        [System.Runtime.Serialization.EnumMember(Value = @"OK")]
        OK = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"ERR")]
        ERR = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public enum ActionResponseStatus
    {

        [System.Runtime.Serialization.EnumMember(Value = @"PENDING")]
        PENDING = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"PROCESSING")]
        PROCESSING = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"CANCELED")]
        CANCELED = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"COMPLETE")]
        COMPLETE = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public enum ExchangeRateResponseResult
    {

        [System.Runtime.Serialization.EnumMember(Value = @"OK")]
        OK = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"ERR")]
        ERR = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    internal class DateFormatConverter : System.Text.Json.Serialization.JsonConverter<System.DateTimeOffset>
    {
        public override System.DateTimeOffset Read(ref System.Text.Json.Utf8JsonReader reader, System.Type typeToConvert, System.Text.Json.JsonSerializerOptions options)
        {
            var dateTime = reader.GetString();
            if (dateTime == null)
            {
                throw new System.Text.Json.JsonException("Unexpected JsonTokenType.Null");
            }

            return System.DateTimeOffset.Parse(dateTime);
        }

        public override void Write(System.Text.Json.Utf8JsonWriter writer, System.DateTimeOffset value, System.Text.Json.JsonSerializerOptions options)
        {
            writer.WriteStringValue(value.ToString("yyyy-MM-dd"));
        }
    }


}

#pragma warning restore  108
#pragma warning restore  114
#pragma warning restore  472
#pragma warning restore  612
#pragma warning restore 1573
#pragma warning restore 1591
#pragma warning restore 8073
#pragma warning restore 3016
#pragma warning restore 8603
