// <auto-generated>
//     This code was generated by Refitter.
// </auto-generated>

using Refit;
using System.Threading;
using System.Threading.Tasks;
using System.Collections.Generic;

namespace HubSpot.Marketing.MarketingEventsBeta
{
    public interface IMarketingEventsExtension
    {

        /// <summary>
        /// Record a subscription state between multiple HubSpot contacts and a marketing event, using HubSpot contact ids.
        /// </summary>
        [Post("/marketing/v3/marketing-events/attendance/{externalEventId}/{subscriberState}/create")]
        Task<BatchResponseSubscriberVidResponse> Create(string externalEventId, string subscriberState, [Query(CollectionFormat.Multi)] string externalAccountId, [Body] BatchInputMarketingEventSubscriber body, CancellationToken cancellationToken = default);

        /// <summary>
        /// Record a subscription state between multiple HubSpot contacts and a marketing event, using contact email addresses. If contact is not present it will be automatically created. If you set params
        /// </summary>
        [Post("/marketing/v3/marketing-events/attendance/{externalEventId}/{subscriberState}/email-create")]
        Task<BatchResponseSubscriberEmailResponse> CreateByEmail(string externalEventId, string subscriberState, [Query(CollectionFormat.Multi)] string externalAccountId, [Body] BatchInputMarketingEventEmailSubscriber body, CancellationToken cancellationToken = default);

        [Post("/marketing/v3/marketing-events/events")]
        Task<MarketingEventDefaultResponse> Create([Body] MarketingEventCreateRequestParams body, CancellationToken cancellationToken = default);

        [Post("/marketing/v3/marketing-events/events/delete")]
        Task ArchiveBatch([Body] BatchInputMarketingEventExternalUniqueIdentifier body, CancellationToken cancellationToken = default);

        /// <summary>
        /// Search for marketing events that have an event id that starts with the query string
        /// </summary>
        [Get("/marketing/v3/marketing-events/events/search")]
        Task<CollectionResponseMarketingEventExternalUniqueIdentifierNoPaging> DoSearch([Query(CollectionFormat.Multi)] string q, CancellationToken cancellationToken = default);

        [Post("/marketing/v3/marketing-events/events/upsert")]
        Task<BatchResponseMarketingEventPublicDefaultResponse> DoUpsert([Body] BatchInputMarketingEventCreateRequestParams body, CancellationToken cancellationToken = default);

        [Get("/marketing/v3/marketing-events/events/{externalEventId}")]
        Task<MarketingEventPublicReadResponse> GetById(string externalEventId, [Query(CollectionFormat.Multi)] string externalAccountId, CancellationToken cancellationToken = default);

        [Put("/marketing/v3/marketing-events/events/{externalEventId}")]
        Task<MarketingEventPublicDefaultResponse> Replace(string externalEventId, [Body] MarketingEventCreateRequestParams body, CancellationToken cancellationToken = default);

        [Delete("/marketing/v3/marketing-events/events/{externalEventId}")]
        Task Archive(string externalEventId, [Query(CollectionFormat.Multi)] string externalAccountId, CancellationToken cancellationToken = default);

        [Patch("/marketing/v3/marketing-events/events/{externalEventId}")]
        Task<MarketingEventPublicDefaultResponse> Update(string externalEventId, [Query(CollectionFormat.Multi)] string externalAccountId, [Body] MarketingEventUpdateRequestParams body, CancellationToken cancellationToken = default);

        [Post("/marketing/v3/marketing-events/events/{externalEventId}/cancel")]
        Task<MarketingEventDefaultResponse> DoCancel(string externalEventId, [Query(CollectionFormat.Multi)] string externalAccountId, CancellationToken cancellationToken = default);

        [Post("/marketing/v3/marketing-events/events/{externalEventId}/complete")]
        Task<MarketingEventDefaultResponse> Complete(string externalEventId, [Query(CollectionFormat.Multi)] string externalAccountId, [Body] MarketingEventCompleteRequestParams body, CancellationToken cancellationToken = default);

        [Post("/marketing/v3/marketing-events/events/{externalEventId}/{subscriberState}/email-upsert")]
        Task DoEmailUpsertById(string externalEventId, string subscriberState, [Query(CollectionFormat.Multi)] string externalAccountId, [Body] BatchInputMarketingEventEmailSubscriber body, CancellationToken cancellationToken = default);

        [Post("/marketing/v3/marketing-events/events/{externalEventId}/{subscriberState}/upsert")]
        Task DoUpsertById(string externalEventId, string subscriberState, [Query(CollectionFormat.Multi)] string externalAccountId, [Body] BatchInputMarketingEventSubscriber body, CancellationToken cancellationToken = default);

        [Get("/marketing/v3/marketing-events/{appId}/settings")]
        Task<EventDetailSettings> GetAll(int appId, CancellationToken cancellationToken = default);

        [Post("/marketing/v3/marketing-events/{appId}/settings")]
        Task<EventDetailSettings> Create(int appId, [Body] EventDetailSettingsUrl body, CancellationToken cancellationToken = default);

    }


}


//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 612 // Disable "CS0612 '...' is obsolete"
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

namespace HubSpot.Marketing.MarketingEventsBeta
{
    using System = global::System;

    

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class CollectionResponseMarketingEventExternalUniqueIdentifierNoPaging
    {

        [System.Text.Json.Serialization.JsonPropertyName("results")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<MarketingEventExternalUniqueIdentifier> Results { get; set; } = new System.Collections.ObjectModel.Collection<MarketingEventExternalUniqueIdentifier>();

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class StandardError
    {

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Status { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("category")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public ErrorCategory Category { get; set; } = new ErrorCategory();

        [System.Text.Json.Serialization.JsonPropertyName("subCategory")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public object SubCategory { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("message")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Message { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("errors")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<ErrorDetail> Errors { get; set; } = new System.Collections.ObjectModel.Collection<ErrorDetail>();

        [System.Text.Json.Serialization.JsonPropertyName("context")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.IDictionary<string, System.Collections.Generic.ICollection<string>> Context { get; set; } = new System.Collections.Generic.Dictionary<string, System.Collections.Generic.ICollection<string>>();

        [System.Text.Json.Serialization.JsonPropertyName("links")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.IDictionary<string, string> Links { get; set; } = new System.Collections.Generic.Dictionary<string, string>();

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class MarketingEventCreateRequestParams
    {
        /// <summary>
        /// The name of the marketing event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("eventName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string EventName { get; set; }

        /// <summary>
        /// Describes what type of event this is.  For example: `WEBINAR`, `CONFERENCE`, `WORKSHOP`
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("eventType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string EventType { get; set; }

        /// <summary>
        /// The start date and time of the marketing event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("startDateTime")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset StartDateTime { get; set; }

        /// <summary>
        /// The end date and time of the marketing event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("endDateTime")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset EndDateTime { get; set; }

        /// <summary>
        /// The name of the organizer of the marketing event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("eventOrganizer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string EventOrganizer { get; set; }

        /// <summary>
        /// The description of the marketing event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("eventDescription")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string EventDescription { get; set; }

        /// <summary>
        /// A URL in the external event application where the marketing event can be managed.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("eventUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string EventUrl { get; set; }

        /// <summary>
        /// Indicates if the marketing event has been cancelled.  Defaults to `false`
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("eventCancelled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool EventCancelled { get; set; }

        /// <summary>
        /// A list of PropertyValues. These can be whatever kind of property names and values you want. However, they must already exist on the HubSpot account's definition of the MarketingEvent Object. If they don't they will be filtered out and not set.
        /// <br/>In order to do this you'll need to create a new PropertyGroup on the HubSpot account's MarketingEvent object for your specific app and create the Custom Property you want to track on that HubSpot account. Do not create any new default properties on the MarketingEvent object as that will apply to all HubSpot accounts.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("customProperties")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<PropertyValue> CustomProperties { get; set; }

        /// <summary>
        /// The accountId that is associated with this marketing event in the external event application.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("externalAccountId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ExternalAccountId { get; set; }

        /// <summary>
        /// The id of the marketing event in the external event application.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("externalEventId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ExternalEventId { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class MarketingEventCompleteRequestParams
    {

        [System.Text.Json.Serialization.JsonPropertyName("startDateTime")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset StartDateTime { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("endDateTime")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset EndDateTime { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class SubscriberEmailResponse
    {

        [System.Text.Json.Serialization.JsonPropertyName("vid")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public int Vid { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("email")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Email { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class EventDetailSettings
    {
        /// <summary>
        /// The id of the application the settings are for
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("appId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public int AppId { get; set; }

        /// <summary>
        /// The url that will be used to fetch marketing event details by id
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("eventDetailsUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string EventDetailsUrl { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class MarketingEventPublicReadResponse
    {
        /// <summary>
        /// The name of the marketing event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("eventName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string EventName { get; set; }

        /// <summary>
        /// The type of the marketing event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("eventType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string EventType { get; set; }

        /// <summary>
        /// The start date and time of the marketing event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("startDateTime")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset StartDateTime { get; set; }

        /// <summary>
        /// The end date and time of the marketing event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("endDateTime")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset EndDateTime { get; set; }

        /// <summary>
        /// The name of the organizer of the marketing event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("eventOrganizer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string EventOrganizer { get; set; }

        /// <summary>
        /// The description of the marketing event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("eventDescription")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string EventDescription { get; set; }

        /// <summary>
        /// A URL in the external event application where the marketing event can be managed.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("eventUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string EventUrl { get; set; }

        /// <summary>
        /// Indicates if the marketing event has been cancelled.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("eventCancelled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool EventCancelled { get; set; }

        /// <summary>
        /// A list of PropertyValues. These can be whatever kind of property names and values you want. However, they must already exist on the HubSpot account's definition of the MarketingEvent Object. If they don't they will be filtered out and not set.
        /// <br/>In order to do this you'll need to create a new PropertyGroup on the HubSpot account's MarketingEvent object for your specific app and create the Custom Property you want to track on that HubSpot account. Do not create any new default properties on the MarketingEvent object as that will apply to all HubSpot accounts.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("customProperties")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<PropertyValue> CustomProperties { get; set; }

        /// <summary>
        /// The id of the marketing event in the external event application.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("externalEventId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ExternalEventId { get; set; }

        /// <summary>
        /// The number of HubSpot contacts that registered for this marketing event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("registrants")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public int Registrants { get; set; }

        /// <summary>
        /// The number of HubSpot contacts that attended this marketing event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("attendees")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public int Attendees { get; set; }

        /// <summary>
        /// The number of HubSpot contacts that registered for this marketing event, but later cancelled their registration.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("cancellations")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public int Cancellations { get; set; }

        /// <summary>
        /// The number of HubSpot contacts that registered for this marketing event, but did not attend. This field only had a value when the event is over.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("noShows")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public int NoShows { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("createdAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset CreatedAt { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("updatedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset UpdatedAt { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class MarketingEventSubscriber
    {
        /// <summary>
        /// The date and time at which the contact subscribed to the event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("interactionDateTime")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public long InteractionDateTime { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("properties")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.IDictionary<string, string> Properties { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("vid")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int Vid { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class ErrorDetail
    {
        /// <summary>
        /// A human readable message describing the error along with remediation steps where appropriate
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("message")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Message { get; set; }

        /// <summary>
        /// The name of the field or parameter in which the error was found.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("in")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string In { get; set; }

        /// <summary>
        /// The status code associated with the error detail
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string Code { get; set; }

        /// <summary>
        /// A specific category that contains more specific detail about the error
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("subCategory")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string SubCategory { get; set; }

        /// <summary>
        /// Context about the error condition
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("context")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.IDictionary<string, System.Collections.Generic.ICollection<string>> Context { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class MarketingEventEmailSubscriber
    {
        /// <summary>
        /// The date and time at which the contact subscribed to the event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("interactionDateTime")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public long InteractionDateTime { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("properties")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.IDictionary<string, string> Properties { get; set; }

        /// <summary>
        /// The email address of the contact in HubSpot to associate with the event. Note that the contact must already exist in HubSpot; a contact will not be created.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("email")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Email { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("contactProperties")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.IDictionary<string, string> ContactProperties { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class EventDetailSettingsUrl
    {
        /// <summary>
        /// The url that will be used to fetch marketing event details by id. Must contain a `%s` character sequence that will be substituted with the event id. For example: `https://my.event.app/events/%s`
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("eventDetailsUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string EventDetailsUrl { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// List of marketing event details to create or update
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class BatchInputMarketingEventEmailSubscriber
    {
        /// <summary>
        /// List of marketing event details to create or update
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("inputs")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<MarketingEventEmailSubscriber> Inputs { get; set; } = new System.Collections.ObjectModel.Collection<MarketingEventEmailSubscriber>();

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class MarketingEventExternalUniqueIdentifier
    {
        /// <summary>
        /// The id of the application that created the marketing event in HubSpot.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("appId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public int AppId { get; set; }

        /// <summary>
        /// The accountId that is associated with this marketing event in the external event application.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("externalAccountId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ExternalAccountId { get; set; }

        /// <summary>
        /// The id of the marketing event in the external event application.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("externalEventId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ExternalEventId { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class SubscriberVidResponse
    {

        [System.Text.Json.Serialization.JsonPropertyName("vid")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public int Vid { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class BatchInputMarketingEventCreateRequestParams
    {

        [System.Text.Json.Serialization.JsonPropertyName("inputs")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<MarketingEventCreateRequestParams> Inputs { get; set; } = new System.Collections.ObjectModel.Collection<MarketingEventCreateRequestParams>();

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class Error
    {
        /// <summary>
        /// A human readable message describing the error along with remediation steps where appropriate
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("message")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Message { get; set; }

        /// <summary>
        /// A unique identifier for the request. Include this value with any error reports or support tickets
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("correlationId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid CorrelationId { get; set; }

        /// <summary>
        /// The error category
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("category")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Category { get; set; }

        /// <summary>
        /// A specific category that contains more specific detail about the error
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("subCategory")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string SubCategory { get; set; }

        /// <summary>
        /// further information about the error
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("errors")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<ErrorDetail> Errors { get; set; }

        /// <summary>
        /// Context about the error condition
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("context")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.IDictionary<string, System.Collections.Generic.ICollection<string>> Context { get; set; }

        /// <summary>
        /// A map of link names to associated URIs containing documentation about the error or recommended remediation steps
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("links")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.IDictionary<string, string> Links { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class PropertyValue
    {

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Value { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("timestamp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public long Timestamp { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("sourceId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string SourceId { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("sourceLabel")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string SourceLabel { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("source")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public PropertyValueSource Source { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("selectedByUser")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public bool SelectedByUser { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("selectedByUserTimestamp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public long SelectedByUserTimestamp { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("sourceVid")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<long> SourceVid { get; set; } = new System.Collections.ObjectModel.Collection<long>();

        /// <summary>
        /// Source metadata encoded as a base64 string. For example: `ZXhhbXBsZSBzdHJpbmc=`
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("sourceMetadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string SourceMetadata { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("requestId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string RequestId { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("updatedByUserId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int UpdatedByUserId { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("persistenceTimestamp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public long PersistenceTimestamp { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("useTimestampAsPersistenceTimestamp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool UseTimestampAsPersistenceTimestamp { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class BatchInputMarketingEventExternalUniqueIdentifier
    {

        [System.Text.Json.Serialization.JsonPropertyName("inputs")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<MarketingEventExternalUniqueIdentifier> Inputs { get; set; } = new System.Collections.ObjectModel.Collection<MarketingEventExternalUniqueIdentifier>();

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class MarketingEventUpdateRequestParams
    {
        /// <summary>
        /// The name of the marketing event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("eventName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string EventName { get; set; }

        /// <summary>
        /// Describes what type of event this is.  For example: `WEBINAR`, `CONFERENCE`, `WORKSHOP`
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("eventType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string EventType { get; set; }

        /// <summary>
        /// The start date and time of the marketing event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("startDateTime")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset StartDateTime { get; set; }

        /// <summary>
        /// The end date and time of the marketing event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("endDateTime")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset EndDateTime { get; set; }

        /// <summary>
        /// The name of the organizer of the marketing event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("eventOrganizer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string EventOrganizer { get; set; }

        /// <summary>
        /// The description of the marketing event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("eventDescription")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string EventDescription { get; set; }

        /// <summary>
        /// A URL in the external event application where the marketing event can be managed.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("eventUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string EventUrl { get; set; }

        /// <summary>
        /// Indicates if the marketing event has been cancelled. Defaults to `false`
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("eventCancelled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool EventCancelled { get; set; }

        /// <summary>
        /// A list of PropertyValues. These can be whatever kind of property names and values you want. However, they must already exist on the HubSpot account's definition of the MarketingEvent Object. If they don't they will be filtered out and not set.
        /// <br/>In order to do this you'll need to create a new PropertyGroup on the HubSpot account's MarketingEvent object for your specific app and create the Custom Property you want to track on that HubSpot account. Do not create any new default properties on the MarketingEvent object as that will apply to all HubSpot accounts.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("customProperties")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<PropertyValue> CustomProperties { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class BatchResponseSubscriberEmailResponse
    {

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public BatchResponseSubscriberEmailResponseStatus Status { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("results")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<SubscriberEmailResponse> Results { get; set; } = new System.Collections.ObjectModel.Collection<SubscriberEmailResponse>();

        [System.Text.Json.Serialization.JsonPropertyName("numErrors")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int NumErrors { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("errors")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<StandardError> Errors { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("requestedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset RequestedAt { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("startedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset StartedAt { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("completedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset CompletedAt { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("links")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.IDictionary<string, string> Links { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class ErrorCategory
    {

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("httpStatus")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ErrorCategoryHttpStatus HttpStatus { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class MarketingEventPublicDefaultResponse
    {
        /// <summary>
        /// The name of the marketing event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("eventName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string EventName { get; set; }

        /// <summary>
        /// The type of the marketing event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("eventType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string EventType { get; set; }

        /// <summary>
        /// The start date and time of the marketing event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("startDateTime")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset StartDateTime { get; set; }

        /// <summary>
        /// The end date and time of the marketing event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("endDateTime")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset EndDateTime { get; set; }

        /// <summary>
        /// The name of the organizer of the marketing event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("eventOrganizer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string EventOrganizer { get; set; }

        /// <summary>
        /// The description of the marketing event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("eventDescription")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string EventDescription { get; set; }

        /// <summary>
        /// A URL in the external event application where the marketing event can be managed.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("eventUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string EventUrl { get; set; }

        /// <summary>
        /// Indicates if the marketing event has been cancelled.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("eventCancelled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool EventCancelled { get; set; }

        /// <summary>
        /// A list of PropertyValues. These can be whatever kind of property names and values you want. However, they must already exist on the HubSpot account's definition of the MarketingEvent Object. If they don't they will be filtered out and not set.
        /// <br/>In order to do this you'll need to create a new PropertyGroup on the HubSpot account's MarketingEvent object for your specific app and create the Custom Property you want to track on that HubSpot account. Do not create any new default properties on the MarketingEvent object as that will apply to all HubSpot accounts.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("customProperties")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<PropertyValue> CustomProperties { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("createdAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset CreatedAt { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("updatedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset UpdatedAt { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class BatchResponseSubscriberVidResponse
    {

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public BatchResponseSubscriberVidResponseStatus Status { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("results")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<SubscriberVidResponse> Results { get; set; } = new System.Collections.ObjectModel.Collection<SubscriberVidResponse>();

        [System.Text.Json.Serialization.JsonPropertyName("numErrors")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int NumErrors { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("errors")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<StandardError> Errors { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("requestedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset RequestedAt { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("startedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset StartedAt { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("completedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset CompletedAt { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("links")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.IDictionary<string, string> Links { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class MarketingEventDefaultResponse
    {
        /// <summary>
        /// The name of the marketing event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("eventName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string EventName { get; set; }

        /// <summary>
        /// The type of the marketing event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("eventType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string EventType { get; set; }

        /// <summary>
        /// The start date and time of the marketing event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("startDateTime")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset StartDateTime { get; set; }

        /// <summary>
        /// The end date and time of the marketing event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("endDateTime")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset EndDateTime { get; set; }

        /// <summary>
        /// The name of the organizer of the marketing event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("eventOrganizer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string EventOrganizer { get; set; }

        /// <summary>
        /// The description of the marketing event.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("eventDescription")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string EventDescription { get; set; }

        /// <summary>
        /// The URL in the external event application where the marketing event can be managed.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("eventUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string EventUrl { get; set; }

        /// <summary>
        /// Indicates if the marketing event has been cancelled.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("eventCancelled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool EventCancelled { get; set; }

        /// <summary>
        /// A list of PropertyValues. These can be whatever kind of property names and values you want. However, they must already exist on the HubSpot account's definition of the MarketingEvent Object. If they don't they will be filtered out and not set.
        /// <br/>In order to do this you'll need to create a new PropertyGroup on the HubSpot account's MarketingEvent object for your specific app and create the Custom Property you want to track on that HubSpot account. Do not create any new default properties on the MarketingEvent object as that will apply to all HubSpot accounts.
        /// <br/>
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("customProperties")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<PropertyValue> CustomProperties { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// List of HubSpot contacts to subscribe to the marketing event
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class BatchInputMarketingEventSubscriber
    {
        /// <summary>
        /// List of HubSpot contacts to subscribe to the marketing event
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("inputs")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<MarketingEventSubscriber> Inputs { get; set; } = new System.Collections.ObjectModel.Collection<MarketingEventSubscriber>();

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class BatchResponseMarketingEventPublicDefaultResponse
    {

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public BatchResponseMarketingEventPublicDefaultResponseStatus Status { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("results")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<MarketingEventPublicDefaultResponse> Results { get; set; } = new System.Collections.ObjectModel.Collection<MarketingEventPublicDefaultResponse>();

        [System.Text.Json.Serialization.JsonPropertyName("numErrors")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int NumErrors { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("errors")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<StandardError> Errors { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("requestedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset RequestedAt { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("startedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset StartedAt { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("completedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset CompletedAt { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("links")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.IDictionary<string, string> Links { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public enum PropertyValueSource
    {

        [System.Runtime.Serialization.EnumMember(Value = @"IMPORT")]
        IMPORT = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"API")]
        API = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"FORM")]
        FORM = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"ANALYTICS")]
        ANALYTICS = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"MIGRATION")]
        MIGRATION = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"SALESFORCE")]
        SALESFORCE = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"INTEGRATION")]
        INTEGRATION = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"CONTACTS_WEB")]
        CONTACTS_WEB = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"WAL_INCREMENTAL")]
        WAL_INCREMENTAL = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"TASK")]
        TASK = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"EMAIL")]
        EMAIL = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"WORKFLOWS")]
        WORKFLOWS = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"CALCULATED")]
        CALCULATED = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"SOCIAL")]
        SOCIAL = 13,

        [System.Runtime.Serialization.EnumMember(Value = @"BATCH_UPDATE")]
        BATCH_UPDATE = 14,

        [System.Runtime.Serialization.EnumMember(Value = @"SIGNALS")]
        SIGNALS = 15,

        [System.Runtime.Serialization.EnumMember(Value = @"BIDEN")]
        BIDEN = 16,

        [System.Runtime.Serialization.EnumMember(Value = @"DEFAULT")]
        DEFAULT = 17,

        [System.Runtime.Serialization.EnumMember(Value = @"COMPANIES")]
        COMPANIES = 18,

        [System.Runtime.Serialization.EnumMember(Value = @"DEALS")]
        DEALS = 19,

        [System.Runtime.Serialization.EnumMember(Value = @"ASSISTS")]
        ASSISTS = 20,

        [System.Runtime.Serialization.EnumMember(Value = @"PRESENTATIONS")]
        PRESENTATIONS = 21,

        [System.Runtime.Serialization.EnumMember(Value = @"TALLY")]
        TALLY = 22,

        [System.Runtime.Serialization.EnumMember(Value = @"SIDEKICK")]
        SIDEKICK = 23,

        [System.Runtime.Serialization.EnumMember(Value = @"CRM_UI")]
        CRM_UI = 24,

        [System.Runtime.Serialization.EnumMember(Value = @"MERGE_CONTACTS")]
        MERGE_CONTACTS = 25,

        [System.Runtime.Serialization.EnumMember(Value = @"PORTAL_USER_ASSOCIATOR")]
        PORTAL_USER_ASSOCIATOR = 26,

        [System.Runtime.Serialization.EnumMember(Value = @"INTEGRATIONS_PLATFORM")]
        INTEGRATIONS_PLATFORM = 27,

        [System.Runtime.Serialization.EnumMember(Value = @"BCC_TO_CRM")]
        BCC_TO_CRM = 28,

        [System.Runtime.Serialization.EnumMember(Value = @"FORWARD_TO_CRM")]
        FORWARD_TO_CRM = 29,

        [System.Runtime.Serialization.EnumMember(Value = @"ENGAGEMENTS")]
        ENGAGEMENTS = 30,

        [System.Runtime.Serialization.EnumMember(Value = @"SALES")]
        SALES = 31,

        [System.Runtime.Serialization.EnumMember(Value = @"HEISENBERG")]
        HEISENBERG = 32,

        [System.Runtime.Serialization.EnumMember(Value = @"LEADIN")]
        LEADIN = 33,

        [System.Runtime.Serialization.EnumMember(Value = @"GMAIL_INTEGRATION")]
        GMAIL_INTEGRATION = 34,

        [System.Runtime.Serialization.EnumMember(Value = @"ACADEMY")]
        ACADEMY = 35,

        [System.Runtime.Serialization.EnumMember(Value = @"SALES_MESSAGES")]
        SALES_MESSAGES = 36,

        [System.Runtime.Serialization.EnumMember(Value = @"AVATARS_SERVICE")]
        AVATARS_SERVICE = 37,

        [System.Runtime.Serialization.EnumMember(Value = @"MERGE_COMPANIES")]
        MERGE_COMPANIES = 38,

        [System.Runtime.Serialization.EnumMember(Value = @"SEQUENCES")]
        SEQUENCES = 39,

        [System.Runtime.Serialization.EnumMember(Value = @"COMPANY_FAMILIES")]
        COMPANY_FAMILIES = 40,

        [System.Runtime.Serialization.EnumMember(Value = @"MOBILE_IOS")]
        MOBILE_IOS = 41,

        [System.Runtime.Serialization.EnumMember(Value = @"MOBILE_ANDROID")]
        MOBILE_ANDROID = 42,

        [System.Runtime.Serialization.EnumMember(Value = @"CONTACTS")]
        CONTACTS = 43,

        [System.Runtime.Serialization.EnumMember(Value = @"ASSOCIATIONS")]
        ASSOCIATIONS = 44,

        [System.Runtime.Serialization.EnumMember(Value = @"EXTENSION")]
        EXTENSION = 45,

        [System.Runtime.Serialization.EnumMember(Value = @"SUCCESS")]
        SUCCESS = 46,

        [System.Runtime.Serialization.EnumMember(Value = @"BOT")]
        BOT = 47,

        [System.Runtime.Serialization.EnumMember(Value = @"INTEGRATIONS_SYNC")]
        INTEGRATIONS_SYNC = 48,

        [System.Runtime.Serialization.EnumMember(Value = @"AUTOMATION_PLATFORM")]
        AUTOMATION_PLATFORM = 49,

        [System.Runtime.Serialization.EnumMember(Value = @"CONVERSATIONS")]
        CONVERSATIONS = 50,

        [System.Runtime.Serialization.EnumMember(Value = @"EMAIL_INTEGRATION")]
        EMAIL_INTEGRATION = 51,

        [System.Runtime.Serialization.EnumMember(Value = @"CONTENT_MEMBERSHIP")]
        CONTENT_MEMBERSHIP = 52,

        [System.Runtime.Serialization.EnumMember(Value = @"QUOTES")]
        QUOTES = 53,

        [System.Runtime.Serialization.EnumMember(Value = @"BET_ASSIGNMENT")]
        BET_ASSIGNMENT = 54,

        [System.Runtime.Serialization.EnumMember(Value = @"QUOTAS")]
        QUOTAS = 55,

        [System.Runtime.Serialization.EnumMember(Value = @"BET_CRM_CONNECTOR")]
        BET_CRM_CONNECTOR = 56,

        [System.Runtime.Serialization.EnumMember(Value = @"MEETINGS")]
        MEETINGS = 57,

        [System.Runtime.Serialization.EnumMember(Value = @"MERGE_OBJECTS")]
        MERGE_OBJECTS = 58,

        [System.Runtime.Serialization.EnumMember(Value = @"RECYCLING_BIN")]
        RECYCLING_BIN = 59,

        [System.Runtime.Serialization.EnumMember(Value = @"ADS")]
        ADS = 60,

        [System.Runtime.Serialization.EnumMember(Value = @"AI_GROUP")]
        AI_GROUP = 61,

        [System.Runtime.Serialization.EnumMember(Value = @"COMMUNICATOR")]
        COMMUNICATOR = 62,

        [System.Runtime.Serialization.EnumMember(Value = @"SETTINGS")]
        SETTINGS = 63,

        [System.Runtime.Serialization.EnumMember(Value = @"PROPERTY_SETTINGS")]
        PROPERTY_SETTINGS = 64,

        [System.Runtime.Serialization.EnumMember(Value = @"PIPELINE_SETTINGS")]
        PIPELINE_SETTINGS = 65,

        [System.Runtime.Serialization.EnumMember(Value = @"COMPANY_INSIGHTS")]
        COMPANY_INSIGHTS = 66,

        [System.Runtime.Serialization.EnumMember(Value = @"BEHAVIORAL_EVENTS")]
        BEHAVIORAL_EVENTS = 67,

        [System.Runtime.Serialization.EnumMember(Value = @"PAYMENTS")]
        PAYMENTS = 68,

        [System.Runtime.Serialization.EnumMember(Value = @"GOALS")]
        GOALS = 69,

        [System.Runtime.Serialization.EnumMember(Value = @"PORTAL_OBJECT_SYNC")]
        PORTAL_OBJECT_SYNC = 70,

        [System.Runtime.Serialization.EnumMember(Value = @"APPROVALS")]
        APPROVALS = 71,

        [System.Runtime.Serialization.EnumMember(Value = @"FILE_MANAGER")]
        FILE_MANAGER = 72,

        [System.Runtime.Serialization.EnumMember(Value = @"MARKETPLACE")]
        MARKETPLACE = 73,

        [System.Runtime.Serialization.EnumMember(Value = @"INTERNAL_PROCESSING")]
        INTERNAL_PROCESSING = 74,

        [System.Runtime.Serialization.EnumMember(Value = @"FORECASTING")]
        FORECASTING = 75,

        [System.Runtime.Serialization.EnumMember(Value = @"SLACK_INTEGRATION")]
        SLACK_INTEGRATION = 76,

        [System.Runtime.Serialization.EnumMember(Value = @"CRM_UI_BULK_ACTION")]
        CRM_UI_BULK_ACTION = 77,

        [System.Runtime.Serialization.EnumMember(Value = @"WORKFLOW_CONTACT_DELETE_ACTION")]
        WORKFLOW_CONTACT_DELETE_ACTION = 78,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public enum BatchResponseSubscriberEmailResponseStatus
    {

        [System.Runtime.Serialization.EnumMember(Value = @"PENDING")]
        PENDING = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"PROCESSING")]
        PROCESSING = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"CANCELED")]
        CANCELED = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"COMPLETE")]
        COMPLETE = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public enum ErrorCategoryHttpStatus
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CONTINUE")]
        CONTINUE = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"SWITCHING_PROTOCOLS")]
        SWITCHING_PROTOCOLS = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"PROCESSING")]
        PROCESSING = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"OK")]
        OK = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"CREATED")]
        CREATED = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"ACCEPTED")]
        ACCEPTED = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"NON_AUTHORITATIVE_INFORMATION")]
        NON_AUTHORITATIVE_INFORMATION = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"NO_CONTENT")]
        NO_CONTENT = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"RESET_CONTENT")]
        RESET_CONTENT = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"PARTIAL_CONTENT")]
        PARTIAL_CONTENT = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"MULTI_STATUS")]
        MULTI_STATUS = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"ALREADY_REPORTED")]
        ALREADY_REPORTED = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"IM_USED")]
        IM_USED = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"MULTIPLE_CHOICES")]
        MULTIPLE_CHOICES = 13,

        [System.Runtime.Serialization.EnumMember(Value = @"MOVED_PERMANENTLY")]
        MOVED_PERMANENTLY = 14,

        [System.Runtime.Serialization.EnumMember(Value = @"FOUND")]
        FOUND = 15,

        [System.Runtime.Serialization.EnumMember(Value = @"SEE_OTHER")]
        SEE_OTHER = 16,

        [System.Runtime.Serialization.EnumMember(Value = @"NOT_MODIFIED")]
        NOT_MODIFIED = 17,

        [System.Runtime.Serialization.EnumMember(Value = @"USE_PROXY")]
        USE_PROXY = 18,

        [System.Runtime.Serialization.EnumMember(Value = @"TEMPORARY_REDIRECT")]
        TEMPORARY_REDIRECT = 19,

        [System.Runtime.Serialization.EnumMember(Value = @"PERMANENT_REDIRECT")]
        PERMANENT_REDIRECT = 20,

        [System.Runtime.Serialization.EnumMember(Value = @"BAD_REQUEST")]
        BAD_REQUEST = 21,

        [System.Runtime.Serialization.EnumMember(Value = @"UNAUTHORIZED")]
        UNAUTHORIZED = 22,

        [System.Runtime.Serialization.EnumMember(Value = @"PAYMENT_REQUIRED")]
        PAYMENT_REQUIRED = 23,

        [System.Runtime.Serialization.EnumMember(Value = @"FORBIDDEN")]
        FORBIDDEN = 24,

        [System.Runtime.Serialization.EnumMember(Value = @"NOT_FOUND")]
        NOT_FOUND = 25,

        [System.Runtime.Serialization.EnumMember(Value = @"METHOD_NOT_ALLOWED")]
        METHOD_NOT_ALLOWED = 26,

        [System.Runtime.Serialization.EnumMember(Value = @"NOT_ACCEPTABLE")]
        NOT_ACCEPTABLE = 27,

        [System.Runtime.Serialization.EnumMember(Value = @"PROXY_AUTHENTICATION_REQUIRED")]
        PROXY_AUTHENTICATION_REQUIRED = 28,

        [System.Runtime.Serialization.EnumMember(Value = @"REQUEST_TIMEOUT")]
        REQUEST_TIMEOUT = 29,

        [System.Runtime.Serialization.EnumMember(Value = @"CONFLICT")]
        CONFLICT = 30,

        [System.Runtime.Serialization.EnumMember(Value = @"GONE")]
        GONE = 31,

        [System.Runtime.Serialization.EnumMember(Value = @"LENGTH_REQUIRED")]
        LENGTH_REQUIRED = 32,

        [System.Runtime.Serialization.EnumMember(Value = @"PRECONDITION_FAILED")]
        PRECONDITION_FAILED = 33,

        [System.Runtime.Serialization.EnumMember(Value = @"REQUEST_ENTITY_TOO_LARGE")]
        REQUEST_ENTITY_TOO_LARGE = 34,

        [System.Runtime.Serialization.EnumMember(Value = @"REQUEST_URI_TOO_LONG")]
        REQUEST_URI_TOO_LONG = 35,

        [System.Runtime.Serialization.EnumMember(Value = @"UNSUPPORTED_MEDIA_TYPE")]
        UNSUPPORTED_MEDIA_TYPE = 36,

        [System.Runtime.Serialization.EnumMember(Value = @"REQUESTED_RANGE_NOT_SATISFIABLE")]
        REQUESTED_RANGE_NOT_SATISFIABLE = 37,

        [System.Runtime.Serialization.EnumMember(Value = @"EXPECTATION_FAILED")]
        EXPECTATION_FAILED = 38,

        [System.Runtime.Serialization.EnumMember(Value = @"IM_A_TEAPOT")]
        IM_A_TEAPOT = 39,

        [System.Runtime.Serialization.EnumMember(Value = @"MISDIRECTED_REQUEST")]
        MISDIRECTED_REQUEST = 40,

        [System.Runtime.Serialization.EnumMember(Value = @"UNPROCESSABLE_ENTITY")]
        UNPROCESSABLE_ENTITY = 41,

        [System.Runtime.Serialization.EnumMember(Value = @"LOCKED")]
        LOCKED = 42,

        [System.Runtime.Serialization.EnumMember(Value = @"FAILED_DEPENDENCY")]
        FAILED_DEPENDENCY = 43,

        [System.Runtime.Serialization.EnumMember(Value = @"UPGRADE_REQUIRED")]
        UPGRADE_REQUIRED = 44,

        [System.Runtime.Serialization.EnumMember(Value = @"PRECONDITION_REQUIRED")]
        PRECONDITION_REQUIRED = 45,

        [System.Runtime.Serialization.EnumMember(Value = @"TOO_MANY_REQUESTS")]
        TOO_MANY_REQUESTS = 46,

        [System.Runtime.Serialization.EnumMember(Value = @"REQUEST_HEADERS_FIELDS_TOO_LARGE")]
        REQUEST_HEADERS_FIELDS_TOO_LARGE = 47,

        [System.Runtime.Serialization.EnumMember(Value = @"INTERNAL_STALE_SERVICE_DISCOVERY")]
        INTERNAL_STALE_SERVICE_DISCOVERY = 48,

        [System.Runtime.Serialization.EnumMember(Value = @"UNAVAILABLE_FOR_LEGAL_REASONS")]
        UNAVAILABLE_FOR_LEGAL_REASONS = 49,

        [System.Runtime.Serialization.EnumMember(Value = @"MIGRATION_IN_PROGRESS")]
        MIGRATION_IN_PROGRESS = 50,

        [System.Runtime.Serialization.EnumMember(Value = @"INTERNAL_SERVER_ERROR")]
        INTERNAL_SERVER_ERROR = 51,

        [System.Runtime.Serialization.EnumMember(Value = @"NOT_IMPLEMENTED")]
        NOT_IMPLEMENTED = 52,

        [System.Runtime.Serialization.EnumMember(Value = @"BAD_GATEWAY")]
        BAD_GATEWAY = 53,

        [System.Runtime.Serialization.EnumMember(Value = @"SERVICE_UNAVAILABLE")]
        SERVICE_UNAVAILABLE = 54,

        [System.Runtime.Serialization.EnumMember(Value = @"GATEWAY_TIMEOUT")]
        GATEWAY_TIMEOUT = 55,

        [System.Runtime.Serialization.EnumMember(Value = @"HTTP_VERSION_NOT_SUPPORTED")]
        HTTP_VERSION_NOT_SUPPORTED = 56,

        [System.Runtime.Serialization.EnumMember(Value = @"VARIANT_ALSO_NEGOTIATES")]
        VARIANT_ALSO_NEGOTIATES = 57,

        [System.Runtime.Serialization.EnumMember(Value = @"INSUFFICIENT_STORAGE")]
        INSUFFICIENT_STORAGE = 58,

        [System.Runtime.Serialization.EnumMember(Value = @"LOOP_DETECTED")]
        LOOP_DETECTED = 59,

        [System.Runtime.Serialization.EnumMember(Value = @"NOT_EXTENDED")]
        NOT_EXTENDED = 60,

        [System.Runtime.Serialization.EnumMember(Value = @"NETWORK_AUTHENTICATION_REQUIRED")]
        NETWORK_AUTHENTICATION_REQUIRED = 61,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public enum BatchResponseSubscriberVidResponseStatus
    {

        [System.Runtime.Serialization.EnumMember(Value = @"PENDING")]
        PENDING = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"PROCESSING")]
        PROCESSING = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"CANCELED")]
        CANCELED = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"COMPLETE")]
        COMPLETE = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public enum BatchResponseMarketingEventPublicDefaultResponseStatus
    {

        [System.Runtime.Serialization.EnumMember(Value = @"PENDING")]
        PENDING = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"PROCESSING")]
        PROCESSING = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"CANCELED")]
        CANCELED = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"COMPLETE")]
        COMPLETE = 3,

    }


}

#pragma warning restore  108
#pragma warning restore  114
#pragma warning restore  472
#pragma warning restore  612
#pragma warning restore 1573
#pragma warning restore 1591
#pragma warning restore 8073
#pragma warning restore 3016
#pragma warning restore 8603
