/*
 * HubDB endpoints
 *
 * HubDB is a relational data store that presents data as rows, columns, and cells in a table, much like a spreadsheet. HubDB tables can be added or modified [in the HubSpot CMS](https://knowledge.hubspot.com/cos-general/how-to-edit-hubdb-tables), but you can also use the API endpoints documented here. For more information on HubDB tables and using their data on a HubSpot site, see the [CMS developers site](https://designers.hubspot.com/docs/tools/hubdb). You can also see the [documentation for dynamic pages](https://designers.hubspot.com/docs/tutorials/how-to-build-dynamic-pages-with-hubdb) for more details about the `useForPages` field.  HubDB tables support `draft` and `published` versions. This allows you to update data in the table, either for testing or to allow for a manual approval process, without affecting any live pages using the existing data. Draft data can be reviewed, and published by a user working in HubSpot or published via the API. Draft data can also be discarded, allowing users to go back to the published version of the data without disrupting it. If a table is set to be `allowed for public access`, you can access the published version of the table and rows without any authentication by specifying the portal id via the query parameter `portalId`.
 *
 * The version of the OpenAPI document: v3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using HubSpot.Cms.Hubdb.Client;
using HubSpot.Cms.Hubdb.Api;
// uncomment below to import models
//using HubSpot.Cms.Hubdb.Model;

namespace HubSpot.Cms.Hubdb.Test.Api
{
    /// <summary>
    ///  Class for testing RowsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class RowsApiTests : IDisposable
    {
        private RowsApi instance;

        public RowsApiTests()
        {
            instance = new RowsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of RowsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' RowsApi
            //Assert.IsType<RowsApi>(instance);
        }

        /// <summary>
        /// Test DeleteCmsV3HubdbTablesTableIdOrNameRowsRowIdDraftPurgeDraftTableRow
        /// </summary>
        [Fact]
        public void DeleteCmsV3HubdbTablesTableIdOrNameRowsRowIdDraftPurgeDraftTableRowTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tableIdOrName = null;
            //string rowId = null;
            //instance.DeleteCmsV3HubdbTablesTableIdOrNameRowsRowIdDraftPurgeDraftTableRow(tableIdOrName, rowId);
        }

        /// <summary>
        /// Test GetCmsV3HubdbTablesTableIdOrNameRowsDraftReadDraftTableRows
        /// </summary>
        [Fact]
        public void GetCmsV3HubdbTablesTableIdOrNameRowsDraftReadDraftTableRowsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tableIdOrName = null;
            //List<string> sort = null;
            //string after = null;
            //int? limit = null;
            //List<string> properties = null;
            //var response = instance.GetCmsV3HubdbTablesTableIdOrNameRowsDraftReadDraftTableRows(tableIdOrName, sort, after, limit, properties);
            //Assert.IsType<CollectionResponseWithTotalHubDbTableRowV3ForwardPaging>(response);
        }

        /// <summary>
        /// Test GetCmsV3HubdbTablesTableIdOrNameRowsGetTableRows
        /// </summary>
        [Fact]
        public void GetCmsV3HubdbTablesTableIdOrNameRowsGetTableRowsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tableIdOrName = null;
            //List<string> sort = null;
            //string after = null;
            //int? limit = null;
            //List<string> properties = null;
            //var response = instance.GetCmsV3HubdbTablesTableIdOrNameRowsGetTableRows(tableIdOrName, sort, after, limit, properties);
            //Assert.IsType<CollectionResponseWithTotalHubDbTableRowV3ForwardPaging>(response);
        }

        /// <summary>
        /// Test GetCmsV3HubdbTablesTableIdOrNameRowsRowIdDraftGetDraftTableRowById
        /// </summary>
        [Fact]
        public void GetCmsV3HubdbTablesTableIdOrNameRowsRowIdDraftGetDraftTableRowByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tableIdOrName = null;
            //string rowId = null;
            //var response = instance.GetCmsV3HubdbTablesTableIdOrNameRowsRowIdDraftGetDraftTableRowById(tableIdOrName, rowId);
            //Assert.IsType<HubDbTableRowV3>(response);
        }

        /// <summary>
        /// Test GetCmsV3HubdbTablesTableIdOrNameRowsRowIdGetTableRow
        /// </summary>
        [Fact]
        public void GetCmsV3HubdbTablesTableIdOrNameRowsRowIdGetTableRowTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tableIdOrName = null;
            //string rowId = null;
            //var response = instance.GetCmsV3HubdbTablesTableIdOrNameRowsRowIdGetTableRow(tableIdOrName, rowId);
            //Assert.IsType<HubDbTableRowV3>(response);
        }

        /// <summary>
        /// Test PatchCmsV3HubdbTablesTableIdOrNameRowsRowIdDraftUpdateDraftTableRow
        /// </summary>
        [Fact]
        public void PatchCmsV3HubdbTablesTableIdOrNameRowsRowIdDraftUpdateDraftTableRowTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tableIdOrName = null;
            //string rowId = null;
            //HubDbTableRowV3Request hubDbTableRowV3Request = null;
            //var response = instance.PatchCmsV3HubdbTablesTableIdOrNameRowsRowIdDraftUpdateDraftTableRow(tableIdOrName, rowId, hubDbTableRowV3Request);
            //Assert.IsType<HubDbTableRowV3>(response);
        }

        /// <summary>
        /// Test PostCmsV3HubdbTablesTableIdOrNameRowsCreateTableRow
        /// </summary>
        [Fact]
        public void PostCmsV3HubdbTablesTableIdOrNameRowsCreateTableRowTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tableIdOrName = null;
            //HubDbTableRowV3Request hubDbTableRowV3Request = null;
            //var response = instance.PostCmsV3HubdbTablesTableIdOrNameRowsCreateTableRow(tableIdOrName, hubDbTableRowV3Request);
            //Assert.IsType<HubDbTableRowV3>(response);
        }

        /// <summary>
        /// Test PostCmsV3HubdbTablesTableIdOrNameRowsRowIdDraftCloneCloneDraftTableRow
        /// </summary>
        [Fact]
        public void PostCmsV3HubdbTablesTableIdOrNameRowsRowIdDraftCloneCloneDraftTableRowTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tableIdOrName = null;
            //string rowId = null;
            //var response = instance.PostCmsV3HubdbTablesTableIdOrNameRowsRowIdDraftCloneCloneDraftTableRow(tableIdOrName, rowId);
            //Assert.IsType<HubDbTableRowV3>(response);
        }

        /// <summary>
        /// Test PutCmsV3HubdbTablesTableIdOrNameRowsRowIdDraftReplaceDraftTableRow
        /// </summary>
        [Fact]
        public void PutCmsV3HubdbTablesTableIdOrNameRowsRowIdDraftReplaceDraftTableRowTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tableIdOrName = null;
            //string rowId = null;
            //HubDbTableRowV3Request hubDbTableRowV3Request = null;
            //var response = instance.PutCmsV3HubdbTablesTableIdOrNameRowsRowIdDraftReplaceDraftTableRow(tableIdOrName, rowId, hubDbTableRowV3Request);
            //Assert.IsType<HubDbTableRowV3>(response);
        }
    }
}
