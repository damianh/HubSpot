/*
 * Products
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using HubSpot.Crm.Products.Client;
using HubSpot.Crm.Products.Client.Auth;
using HubSpot.Crm.Products.Model;

namespace HubSpot.Crm.Products.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IBasicApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Archive
        /// </summary>
        /// <remarks>
        /// Move an Object identified by &#x60;{productId}&#x60; to the recycling bin.
        /// </remarks>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        void DeleteCrmV3ObjectsProductsProductIdArchive(string productId, int operationIndex = 0);

        /// <summary>
        /// Archive
        /// </summary>
        /// <remarks>
        /// Move an Object identified by &#x60;{productId}&#x60; to the recycling bin.
        /// </remarks>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> DeleteCrmV3ObjectsProductsProductIdArchiveWithHttpInfo(string productId, int operationIndex = 0);
        /// <summary>
        /// List
        /// </summary>
        /// <remarks>
        /// Read a page of products. Control what is returned via the &#x60;properties&#x60; query param.
        /// </remarks>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">The maximum number of results to display per page. (optional, default to 10)</param>
        /// <param name="after">The paging cursor token of the last successfully read resource will be returned as the &#x60;paging.next.after&#x60; JSON property of a paged response containing more results. (optional)</param>
        /// <param name="properties">A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored. (optional)</param>
        /// <param name="propertiesWithHistory">A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request. (optional)</param>
        /// <param name="associations">A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. (optional)</param>
        /// <param name="archived">Whether to return only results that have been archived. (optional, default to false)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>CollectionResponseSimplePublicObjectWithAssociationsForwardPaging</returns>
        CollectionResponseSimplePublicObjectWithAssociationsForwardPaging GetCrmV3ObjectsProductsGetPage(int? limit = default(int?), string after = default(string), List<string> properties = default(List<string>), List<string> propertiesWithHistory = default(List<string>), List<string> associations = default(List<string>), bool? archived = default(bool?), int operationIndex = 0);

        /// <summary>
        /// List
        /// </summary>
        /// <remarks>
        /// Read a page of products. Control what is returned via the &#x60;properties&#x60; query param.
        /// </remarks>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">The maximum number of results to display per page. (optional, default to 10)</param>
        /// <param name="after">The paging cursor token of the last successfully read resource will be returned as the &#x60;paging.next.after&#x60; JSON property of a paged response containing more results. (optional)</param>
        /// <param name="properties">A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored. (optional)</param>
        /// <param name="propertiesWithHistory">A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request. (optional)</param>
        /// <param name="associations">A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. (optional)</param>
        /// <param name="archived">Whether to return only results that have been archived. (optional, default to false)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of CollectionResponseSimplePublicObjectWithAssociationsForwardPaging</returns>
        ApiResponse<CollectionResponseSimplePublicObjectWithAssociationsForwardPaging> GetCrmV3ObjectsProductsGetPageWithHttpInfo(int? limit = default(int?), string after = default(string), List<string> properties = default(List<string>), List<string> propertiesWithHistory = default(List<string>), List<string> associations = default(List<string>), bool? archived = default(bool?), int operationIndex = 0);
        /// <summary>
        /// Read
        /// </summary>
        /// <remarks>
        /// Read an Object identified by &#x60;{productId}&#x60;. &#x60;{productId}&#x60; refers to the internal object ID by default, or optionally any unique property value as specified by the &#x60;idProperty&#x60; query param.  Control what is returned via the &#x60;properties&#x60; query param.
        /// </remarks>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productId"></param>
        /// <param name="properties">A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored. (optional)</param>
        /// <param name="propertiesWithHistory">A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. (optional)</param>
        /// <param name="associations">A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. (optional)</param>
        /// <param name="archived">Whether to return only results that have been archived. (optional, default to false)</param>
        /// <param name="idProperty">The name of a property whose values are unique for this object type (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SimplePublicObjectWithAssociations</returns>
        SimplePublicObjectWithAssociations GetCrmV3ObjectsProductsProductIdGetById(string productId, List<string> properties = default(List<string>), List<string> propertiesWithHistory = default(List<string>), List<string> associations = default(List<string>), bool? archived = default(bool?), string idProperty = default(string), int operationIndex = 0);

        /// <summary>
        /// Read
        /// </summary>
        /// <remarks>
        /// Read an Object identified by &#x60;{productId}&#x60;. &#x60;{productId}&#x60; refers to the internal object ID by default, or optionally any unique property value as specified by the &#x60;idProperty&#x60; query param.  Control what is returned via the &#x60;properties&#x60; query param.
        /// </remarks>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productId"></param>
        /// <param name="properties">A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored. (optional)</param>
        /// <param name="propertiesWithHistory">A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. (optional)</param>
        /// <param name="associations">A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. (optional)</param>
        /// <param name="archived">Whether to return only results that have been archived. (optional, default to false)</param>
        /// <param name="idProperty">The name of a property whose values are unique for this object type (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SimplePublicObjectWithAssociations</returns>
        ApiResponse<SimplePublicObjectWithAssociations> GetCrmV3ObjectsProductsProductIdGetByIdWithHttpInfo(string productId, List<string> properties = default(List<string>), List<string> propertiesWithHistory = default(List<string>), List<string> associations = default(List<string>), bool? archived = default(bool?), string idProperty = default(string), int operationIndex = 0);
        /// <summary>
        /// Update
        /// </summary>
        /// <remarks>
        /// Perform a partial update of an Object identified by &#x60;{productId}&#x60;. &#x60;{productId}&#x60; refers to the internal object ID by default, or optionally any unique property value as specified by the &#x60;idProperty&#x60; query param. Provided property values will be overwritten. Read-only and non-existent properties will be ignored. Properties values can be cleared by passing an empty string.
        /// </remarks>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productId"></param>
        /// <param name="simplePublicObjectInput"></param>
        /// <param name="idProperty">The name of a property whose values are unique for this object type (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SimplePublicObject</returns>
        SimplePublicObject PatchCrmV3ObjectsProductsProductIdUpdate(string productId, SimplePublicObjectInput simplePublicObjectInput, string idProperty = default(string), int operationIndex = 0);

        /// <summary>
        /// Update
        /// </summary>
        /// <remarks>
        /// Perform a partial update of an Object identified by &#x60;{productId}&#x60;. &#x60;{productId}&#x60; refers to the internal object ID by default, or optionally any unique property value as specified by the &#x60;idProperty&#x60; query param. Provided property values will be overwritten. Read-only and non-existent properties will be ignored. Properties values can be cleared by passing an empty string.
        /// </remarks>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productId"></param>
        /// <param name="simplePublicObjectInput"></param>
        /// <param name="idProperty">The name of a property whose values are unique for this object type (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SimplePublicObject</returns>
        ApiResponse<SimplePublicObject> PatchCrmV3ObjectsProductsProductIdUpdateWithHttpInfo(string productId, SimplePublicObjectInput simplePublicObjectInput, string idProperty = default(string), int operationIndex = 0);
        /// <summary>
        /// Create
        /// </summary>
        /// <remarks>
        /// Create a product with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard products is provided.
        /// </remarks>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="simplePublicObjectInputForCreate"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SimplePublicObject</returns>
        SimplePublicObject PostCrmV3ObjectsProductsCreate(SimplePublicObjectInputForCreate simplePublicObjectInputForCreate, int operationIndex = 0);

        /// <summary>
        /// Create
        /// </summary>
        /// <remarks>
        /// Create a product with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard products is provided.
        /// </remarks>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="simplePublicObjectInputForCreate"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SimplePublicObject</returns>
        ApiResponse<SimplePublicObject> PostCrmV3ObjectsProductsCreateWithHttpInfo(SimplePublicObjectInputForCreate simplePublicObjectInputForCreate, int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IBasicApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Archive
        /// </summary>
        /// <remarks>
        /// Move an Object identified by &#x60;{productId}&#x60; to the recycling bin.
        /// </remarks>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task DeleteCrmV3ObjectsProductsProductIdArchiveAsync(string productId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Archive
        /// </summary>
        /// <remarks>
        /// Move an Object identified by &#x60;{productId}&#x60; to the recycling bin.
        /// </remarks>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> DeleteCrmV3ObjectsProductsProductIdArchiveWithHttpInfoAsync(string productId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// List
        /// </summary>
        /// <remarks>
        /// Read a page of products. Control what is returned via the &#x60;properties&#x60; query param.
        /// </remarks>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">The maximum number of results to display per page. (optional, default to 10)</param>
        /// <param name="after">The paging cursor token of the last successfully read resource will be returned as the &#x60;paging.next.after&#x60; JSON property of a paged response containing more results. (optional)</param>
        /// <param name="properties">A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored. (optional)</param>
        /// <param name="propertiesWithHistory">A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request. (optional)</param>
        /// <param name="associations">A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. (optional)</param>
        /// <param name="archived">Whether to return only results that have been archived. (optional, default to false)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of CollectionResponseSimplePublicObjectWithAssociationsForwardPaging</returns>
        System.Threading.Tasks.Task<CollectionResponseSimplePublicObjectWithAssociationsForwardPaging> GetCrmV3ObjectsProductsGetPageAsync(int? limit = default(int?), string after = default(string), List<string> properties = default(List<string>), List<string> propertiesWithHistory = default(List<string>), List<string> associations = default(List<string>), bool? archived = default(bool?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// List
        /// </summary>
        /// <remarks>
        /// Read a page of products. Control what is returned via the &#x60;properties&#x60; query param.
        /// </remarks>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">The maximum number of results to display per page. (optional, default to 10)</param>
        /// <param name="after">The paging cursor token of the last successfully read resource will be returned as the &#x60;paging.next.after&#x60; JSON property of a paged response containing more results. (optional)</param>
        /// <param name="properties">A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored. (optional)</param>
        /// <param name="propertiesWithHistory">A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request. (optional)</param>
        /// <param name="associations">A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. (optional)</param>
        /// <param name="archived">Whether to return only results that have been archived. (optional, default to false)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (CollectionResponseSimplePublicObjectWithAssociationsForwardPaging)</returns>
        System.Threading.Tasks.Task<ApiResponse<CollectionResponseSimplePublicObjectWithAssociationsForwardPaging>> GetCrmV3ObjectsProductsGetPageWithHttpInfoAsync(int? limit = default(int?), string after = default(string), List<string> properties = default(List<string>), List<string> propertiesWithHistory = default(List<string>), List<string> associations = default(List<string>), bool? archived = default(bool?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Read
        /// </summary>
        /// <remarks>
        /// Read an Object identified by &#x60;{productId}&#x60;. &#x60;{productId}&#x60; refers to the internal object ID by default, or optionally any unique property value as specified by the &#x60;idProperty&#x60; query param.  Control what is returned via the &#x60;properties&#x60; query param.
        /// </remarks>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productId"></param>
        /// <param name="properties">A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored. (optional)</param>
        /// <param name="propertiesWithHistory">A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. (optional)</param>
        /// <param name="associations">A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. (optional)</param>
        /// <param name="archived">Whether to return only results that have been archived. (optional, default to false)</param>
        /// <param name="idProperty">The name of a property whose values are unique for this object type (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SimplePublicObjectWithAssociations</returns>
        System.Threading.Tasks.Task<SimplePublicObjectWithAssociations> GetCrmV3ObjectsProductsProductIdGetByIdAsync(string productId, List<string> properties = default(List<string>), List<string> propertiesWithHistory = default(List<string>), List<string> associations = default(List<string>), bool? archived = default(bool?), string idProperty = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Read
        /// </summary>
        /// <remarks>
        /// Read an Object identified by &#x60;{productId}&#x60;. &#x60;{productId}&#x60; refers to the internal object ID by default, or optionally any unique property value as specified by the &#x60;idProperty&#x60; query param.  Control what is returned via the &#x60;properties&#x60; query param.
        /// </remarks>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productId"></param>
        /// <param name="properties">A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored. (optional)</param>
        /// <param name="propertiesWithHistory">A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. (optional)</param>
        /// <param name="associations">A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. (optional)</param>
        /// <param name="archived">Whether to return only results that have been archived. (optional, default to false)</param>
        /// <param name="idProperty">The name of a property whose values are unique for this object type (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SimplePublicObjectWithAssociations)</returns>
        System.Threading.Tasks.Task<ApiResponse<SimplePublicObjectWithAssociations>> GetCrmV3ObjectsProductsProductIdGetByIdWithHttpInfoAsync(string productId, List<string> properties = default(List<string>), List<string> propertiesWithHistory = default(List<string>), List<string> associations = default(List<string>), bool? archived = default(bool?), string idProperty = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update
        /// </summary>
        /// <remarks>
        /// Perform a partial update of an Object identified by &#x60;{productId}&#x60;. &#x60;{productId}&#x60; refers to the internal object ID by default, or optionally any unique property value as specified by the &#x60;idProperty&#x60; query param. Provided property values will be overwritten. Read-only and non-existent properties will be ignored. Properties values can be cleared by passing an empty string.
        /// </remarks>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productId"></param>
        /// <param name="simplePublicObjectInput"></param>
        /// <param name="idProperty">The name of a property whose values are unique for this object type (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SimplePublicObject</returns>
        System.Threading.Tasks.Task<SimplePublicObject> PatchCrmV3ObjectsProductsProductIdUpdateAsync(string productId, SimplePublicObjectInput simplePublicObjectInput, string idProperty = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Update
        /// </summary>
        /// <remarks>
        /// Perform a partial update of an Object identified by &#x60;{productId}&#x60;. &#x60;{productId}&#x60; refers to the internal object ID by default, or optionally any unique property value as specified by the &#x60;idProperty&#x60; query param. Provided property values will be overwritten. Read-only and non-existent properties will be ignored. Properties values can be cleared by passing an empty string.
        /// </remarks>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productId"></param>
        /// <param name="simplePublicObjectInput"></param>
        /// <param name="idProperty">The name of a property whose values are unique for this object type (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SimplePublicObject)</returns>
        System.Threading.Tasks.Task<ApiResponse<SimplePublicObject>> PatchCrmV3ObjectsProductsProductIdUpdateWithHttpInfoAsync(string productId, SimplePublicObjectInput simplePublicObjectInput, string idProperty = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Create
        /// </summary>
        /// <remarks>
        /// Create a product with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard products is provided.
        /// </remarks>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="simplePublicObjectInputForCreate"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SimplePublicObject</returns>
        System.Threading.Tasks.Task<SimplePublicObject> PostCrmV3ObjectsProductsCreateAsync(SimplePublicObjectInputForCreate simplePublicObjectInputForCreate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Create
        /// </summary>
        /// <remarks>
        /// Create a product with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard products is provided.
        /// </remarks>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="simplePublicObjectInputForCreate"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SimplePublicObject)</returns>
        System.Threading.Tasks.Task<ApiResponse<SimplePublicObject>> PostCrmV3ObjectsProductsCreateWithHttpInfoAsync(SimplePublicObjectInputForCreate simplePublicObjectInputForCreate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IBasicApi : IBasicApiSync, IBasicApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class BasicApi : IBasicApi
    {
        private HubSpot.Crm.Products.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="BasicApi"/> class.
        /// </summary>
        /// <returns></returns>
        public BasicApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="BasicApi"/> class.
        /// </summary>
        /// <returns></returns>
        public BasicApi(string basePath)
        {
            this.Configuration = HubSpot.Crm.Products.Client.Configuration.MergeConfigurations(
                HubSpot.Crm.Products.Client.GlobalConfiguration.Instance,
                new HubSpot.Crm.Products.Client.Configuration { BasePath = basePath }
            );
            this.Client = new HubSpot.Crm.Products.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new HubSpot.Crm.Products.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = HubSpot.Crm.Products.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="BasicApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public BasicApi(HubSpot.Crm.Products.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = HubSpot.Crm.Products.Client.Configuration.MergeConfigurations(
                HubSpot.Crm.Products.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new HubSpot.Crm.Products.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new HubSpot.Crm.Products.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = HubSpot.Crm.Products.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="BasicApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public BasicApi(HubSpot.Crm.Products.Client.ISynchronousClient client, HubSpot.Crm.Products.Client.IAsynchronousClient asyncClient, HubSpot.Crm.Products.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = HubSpot.Crm.Products.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public HubSpot.Crm.Products.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public HubSpot.Crm.Products.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public HubSpot.Crm.Products.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public HubSpot.Crm.Products.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Archive Move an Object identified by &#x60;{productId}&#x60; to the recycling bin.
        /// </summary>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        public void DeleteCrmV3ObjectsProductsProductIdArchive(string productId, int operationIndex = 0)
        {
            DeleteCrmV3ObjectsProductsProductIdArchiveWithHttpInfo(productId);
        }

        /// <summary>
        /// Archive Move an Object identified by &#x60;{productId}&#x60; to the recycling bin.
        /// </summary>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public HubSpot.Crm.Products.Client.ApiResponse<Object> DeleteCrmV3ObjectsProductsProductIdArchiveWithHttpInfo(string productId, int operationIndex = 0)
        {
            // verify the required parameter 'productId' is set
            if (productId == null)
            {
                throw new HubSpot.Crm.Products.Client.ApiException(400, "Missing required parameter 'productId' when calling BasicApi->DeleteCrmV3ObjectsProductsProductIdArchive");
            }

            HubSpot.Crm.Products.Client.RequestOptions localVarRequestOptions = new HubSpot.Crm.Products.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "*/*"
            };

            var localVarContentType = HubSpot.Crm.Products.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = HubSpot.Crm.Products.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("productId", HubSpot.Crm.Products.Client.ClientUtils.ParameterToString(productId)); // path parameter

            localVarRequestOptions.Operation = "BasicApi.DeleteCrmV3ObjectsProductsProductIdArchive";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (oauth2_legacy) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }
            // authentication (hapikey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("hapikey")))
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.Crm.Products.Client.ClientUtils.ParameterToMultiMap("", "hapikey", this.Configuration.GetApiKeyWithPrefix("hapikey")));
            }
            // authentication (private_apps_legacy) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("private-app-legacy")))
            {
                localVarRequestOptions.HeaderParameters.Add("private-app-legacy", this.Configuration.GetApiKeyWithPrefix("private-app-legacy"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Delete<Object>("/crm/v3/objects/products/{productId}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DeleteCrmV3ObjectsProductsProductIdArchive", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Archive Move an Object identified by &#x60;{productId}&#x60; to the recycling bin.
        /// </summary>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task DeleteCrmV3ObjectsProductsProductIdArchiveAsync(string productId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            await DeleteCrmV3ObjectsProductsProductIdArchiveWithHttpInfoAsync(productId, operationIndex, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Archive Move an Object identified by &#x60;{productId}&#x60; to the recycling bin.
        /// </summary>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<HubSpot.Crm.Products.Client.ApiResponse<Object>> DeleteCrmV3ObjectsProductsProductIdArchiveWithHttpInfoAsync(string productId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'productId' is set
            if (productId == null)
            {
                throw new HubSpot.Crm.Products.Client.ApiException(400, "Missing required parameter 'productId' when calling BasicApi->DeleteCrmV3ObjectsProductsProductIdArchive");
            }


            HubSpot.Crm.Products.Client.RequestOptions localVarRequestOptions = new HubSpot.Crm.Products.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "*/*"
            };

            var localVarContentType = HubSpot.Crm.Products.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = HubSpot.Crm.Products.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("productId", HubSpot.Crm.Products.Client.ClientUtils.ParameterToString(productId)); // path parameter

            localVarRequestOptions.Operation = "BasicApi.DeleteCrmV3ObjectsProductsProductIdArchive";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (oauth2_legacy) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }
            // authentication (hapikey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("hapikey")))
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.Crm.Products.Client.ClientUtils.ParameterToMultiMap("", "hapikey", this.Configuration.GetApiKeyWithPrefix("hapikey")));
            }
            // authentication (private_apps_legacy) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("private-app-legacy")))
            {
                localVarRequestOptions.HeaderParameters.Add("private-app-legacy", this.Configuration.GetApiKeyWithPrefix("private-app-legacy"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.DeleteAsync<Object>("/crm/v3/objects/products/{productId}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DeleteCrmV3ObjectsProductsProductIdArchive", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// List Read a page of products. Control what is returned via the &#x60;properties&#x60; query param.
        /// </summary>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">The maximum number of results to display per page. (optional, default to 10)</param>
        /// <param name="after">The paging cursor token of the last successfully read resource will be returned as the &#x60;paging.next.after&#x60; JSON property of a paged response containing more results. (optional)</param>
        /// <param name="properties">A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored. (optional)</param>
        /// <param name="propertiesWithHistory">A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request. (optional)</param>
        /// <param name="associations">A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. (optional)</param>
        /// <param name="archived">Whether to return only results that have been archived. (optional, default to false)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>CollectionResponseSimplePublicObjectWithAssociationsForwardPaging</returns>
        public CollectionResponseSimplePublicObjectWithAssociationsForwardPaging GetCrmV3ObjectsProductsGetPage(int? limit = default(int?), string after = default(string), List<string> properties = default(List<string>), List<string> propertiesWithHistory = default(List<string>), List<string> associations = default(List<string>), bool? archived = default(bool?), int operationIndex = 0)
        {
            HubSpot.Crm.Products.Client.ApiResponse<CollectionResponseSimplePublicObjectWithAssociationsForwardPaging> localVarResponse = GetCrmV3ObjectsProductsGetPageWithHttpInfo(limit, after, properties, propertiesWithHistory, associations, archived);
            return localVarResponse.Data;
        }

        /// <summary>
        /// List Read a page of products. Control what is returned via the &#x60;properties&#x60; query param.
        /// </summary>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">The maximum number of results to display per page. (optional, default to 10)</param>
        /// <param name="after">The paging cursor token of the last successfully read resource will be returned as the &#x60;paging.next.after&#x60; JSON property of a paged response containing more results. (optional)</param>
        /// <param name="properties">A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored. (optional)</param>
        /// <param name="propertiesWithHistory">A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request. (optional)</param>
        /// <param name="associations">A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. (optional)</param>
        /// <param name="archived">Whether to return only results that have been archived. (optional, default to false)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of CollectionResponseSimplePublicObjectWithAssociationsForwardPaging</returns>
        public HubSpot.Crm.Products.Client.ApiResponse<CollectionResponseSimplePublicObjectWithAssociationsForwardPaging> GetCrmV3ObjectsProductsGetPageWithHttpInfo(int? limit = default(int?), string after = default(string), List<string> properties = default(List<string>), List<string> propertiesWithHistory = default(List<string>), List<string> associations = default(List<string>), bool? archived = default(bool?), int operationIndex = 0)
        {
            HubSpot.Crm.Products.Client.RequestOptions localVarRequestOptions = new HubSpot.Crm.Products.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "*/*"
            };

            var localVarContentType = HubSpot.Crm.Products.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = HubSpot.Crm.Products.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (limit != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.Crm.Products.Client.ClientUtils.ParameterToMultiMap("", "limit", limit));
            }
            if (after != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.Crm.Products.Client.ClientUtils.ParameterToMultiMap("", "after", after));
            }
            if (properties != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.Crm.Products.Client.ClientUtils.ParameterToMultiMap("multi", "properties", properties));
            }
            if (propertiesWithHistory != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.Crm.Products.Client.ClientUtils.ParameterToMultiMap("multi", "propertiesWithHistory", propertiesWithHistory));
            }
            if (associations != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.Crm.Products.Client.ClientUtils.ParameterToMultiMap("multi", "associations", associations));
            }
            if (archived != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.Crm.Products.Client.ClientUtils.ParameterToMultiMap("", "archived", archived));
            }

            localVarRequestOptions.Operation = "BasicApi.GetCrmV3ObjectsProductsGetPage";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (oauth2_legacy) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }
            // authentication (hapikey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("hapikey")))
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.Crm.Products.Client.ClientUtils.ParameterToMultiMap("", "hapikey", this.Configuration.GetApiKeyWithPrefix("hapikey")));
            }
            // authentication (private_apps_legacy) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("private-app-legacy")))
            {
                localVarRequestOptions.HeaderParameters.Add("private-app-legacy", this.Configuration.GetApiKeyWithPrefix("private-app-legacy"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<CollectionResponseSimplePublicObjectWithAssociationsForwardPaging>("/crm/v3/objects/products", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetCrmV3ObjectsProductsGetPage", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// List Read a page of products. Control what is returned via the &#x60;properties&#x60; query param.
        /// </summary>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">The maximum number of results to display per page. (optional, default to 10)</param>
        /// <param name="after">The paging cursor token of the last successfully read resource will be returned as the &#x60;paging.next.after&#x60; JSON property of a paged response containing more results. (optional)</param>
        /// <param name="properties">A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored. (optional)</param>
        /// <param name="propertiesWithHistory">A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request. (optional)</param>
        /// <param name="associations">A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. (optional)</param>
        /// <param name="archived">Whether to return only results that have been archived. (optional, default to false)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of CollectionResponseSimplePublicObjectWithAssociationsForwardPaging</returns>
        public async System.Threading.Tasks.Task<CollectionResponseSimplePublicObjectWithAssociationsForwardPaging> GetCrmV3ObjectsProductsGetPageAsync(int? limit = default(int?), string after = default(string), List<string> properties = default(List<string>), List<string> propertiesWithHistory = default(List<string>), List<string> associations = default(List<string>), bool? archived = default(bool?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            HubSpot.Crm.Products.Client.ApiResponse<CollectionResponseSimplePublicObjectWithAssociationsForwardPaging> localVarResponse = await GetCrmV3ObjectsProductsGetPageWithHttpInfoAsync(limit, after, properties, propertiesWithHistory, associations, archived, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// List Read a page of products. Control what is returned via the &#x60;properties&#x60; query param.
        /// </summary>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">The maximum number of results to display per page. (optional, default to 10)</param>
        /// <param name="after">The paging cursor token of the last successfully read resource will be returned as the &#x60;paging.next.after&#x60; JSON property of a paged response containing more results. (optional)</param>
        /// <param name="properties">A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored. (optional)</param>
        /// <param name="propertiesWithHistory">A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request. (optional)</param>
        /// <param name="associations">A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. (optional)</param>
        /// <param name="archived">Whether to return only results that have been archived. (optional, default to false)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (CollectionResponseSimplePublicObjectWithAssociationsForwardPaging)</returns>
        public async System.Threading.Tasks.Task<HubSpot.Crm.Products.Client.ApiResponse<CollectionResponseSimplePublicObjectWithAssociationsForwardPaging>> GetCrmV3ObjectsProductsGetPageWithHttpInfoAsync(int? limit = default(int?), string after = default(string), List<string> properties = default(List<string>), List<string> propertiesWithHistory = default(List<string>), List<string> associations = default(List<string>), bool? archived = default(bool?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            HubSpot.Crm.Products.Client.RequestOptions localVarRequestOptions = new HubSpot.Crm.Products.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "*/*"
            };

            var localVarContentType = HubSpot.Crm.Products.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = HubSpot.Crm.Products.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (limit != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.Crm.Products.Client.ClientUtils.ParameterToMultiMap("", "limit", limit));
            }
            if (after != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.Crm.Products.Client.ClientUtils.ParameterToMultiMap("", "after", after));
            }
            if (properties != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.Crm.Products.Client.ClientUtils.ParameterToMultiMap("multi", "properties", properties));
            }
            if (propertiesWithHistory != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.Crm.Products.Client.ClientUtils.ParameterToMultiMap("multi", "propertiesWithHistory", propertiesWithHistory));
            }
            if (associations != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.Crm.Products.Client.ClientUtils.ParameterToMultiMap("multi", "associations", associations));
            }
            if (archived != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.Crm.Products.Client.ClientUtils.ParameterToMultiMap("", "archived", archived));
            }

            localVarRequestOptions.Operation = "BasicApi.GetCrmV3ObjectsProductsGetPage";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (oauth2_legacy) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }
            // authentication (hapikey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("hapikey")))
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.Crm.Products.Client.ClientUtils.ParameterToMultiMap("", "hapikey", this.Configuration.GetApiKeyWithPrefix("hapikey")));
            }
            // authentication (private_apps_legacy) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("private-app-legacy")))
            {
                localVarRequestOptions.HeaderParameters.Add("private-app-legacy", this.Configuration.GetApiKeyWithPrefix("private-app-legacy"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<CollectionResponseSimplePublicObjectWithAssociationsForwardPaging>("/crm/v3/objects/products", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetCrmV3ObjectsProductsGetPage", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Read Read an Object identified by &#x60;{productId}&#x60;. &#x60;{productId}&#x60; refers to the internal object ID by default, or optionally any unique property value as specified by the &#x60;idProperty&#x60; query param.  Control what is returned via the &#x60;properties&#x60; query param.
        /// </summary>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productId"></param>
        /// <param name="properties">A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored. (optional)</param>
        /// <param name="propertiesWithHistory">A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. (optional)</param>
        /// <param name="associations">A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. (optional)</param>
        /// <param name="archived">Whether to return only results that have been archived. (optional, default to false)</param>
        /// <param name="idProperty">The name of a property whose values are unique for this object type (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SimplePublicObjectWithAssociations</returns>
        public SimplePublicObjectWithAssociations GetCrmV3ObjectsProductsProductIdGetById(string productId, List<string> properties = default(List<string>), List<string> propertiesWithHistory = default(List<string>), List<string> associations = default(List<string>), bool? archived = default(bool?), string idProperty = default(string), int operationIndex = 0)
        {
            HubSpot.Crm.Products.Client.ApiResponse<SimplePublicObjectWithAssociations> localVarResponse = GetCrmV3ObjectsProductsProductIdGetByIdWithHttpInfo(productId, properties, propertiesWithHistory, associations, archived, idProperty);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Read Read an Object identified by &#x60;{productId}&#x60;. &#x60;{productId}&#x60; refers to the internal object ID by default, or optionally any unique property value as specified by the &#x60;idProperty&#x60; query param.  Control what is returned via the &#x60;properties&#x60; query param.
        /// </summary>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productId"></param>
        /// <param name="properties">A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored. (optional)</param>
        /// <param name="propertiesWithHistory">A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. (optional)</param>
        /// <param name="associations">A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. (optional)</param>
        /// <param name="archived">Whether to return only results that have been archived. (optional, default to false)</param>
        /// <param name="idProperty">The name of a property whose values are unique for this object type (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SimplePublicObjectWithAssociations</returns>
        public HubSpot.Crm.Products.Client.ApiResponse<SimplePublicObjectWithAssociations> GetCrmV3ObjectsProductsProductIdGetByIdWithHttpInfo(string productId, List<string> properties = default(List<string>), List<string> propertiesWithHistory = default(List<string>), List<string> associations = default(List<string>), bool? archived = default(bool?), string idProperty = default(string), int operationIndex = 0)
        {
            // verify the required parameter 'productId' is set
            if (productId == null)
            {
                throw new HubSpot.Crm.Products.Client.ApiException(400, "Missing required parameter 'productId' when calling BasicApi->GetCrmV3ObjectsProductsProductIdGetById");
            }

            HubSpot.Crm.Products.Client.RequestOptions localVarRequestOptions = new HubSpot.Crm.Products.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "*/*"
            };

            var localVarContentType = HubSpot.Crm.Products.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = HubSpot.Crm.Products.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("productId", HubSpot.Crm.Products.Client.ClientUtils.ParameterToString(productId)); // path parameter
            if (properties != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.Crm.Products.Client.ClientUtils.ParameterToMultiMap("multi", "properties", properties));
            }
            if (propertiesWithHistory != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.Crm.Products.Client.ClientUtils.ParameterToMultiMap("multi", "propertiesWithHistory", propertiesWithHistory));
            }
            if (associations != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.Crm.Products.Client.ClientUtils.ParameterToMultiMap("multi", "associations", associations));
            }
            if (archived != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.Crm.Products.Client.ClientUtils.ParameterToMultiMap("", "archived", archived));
            }
            if (idProperty != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.Crm.Products.Client.ClientUtils.ParameterToMultiMap("", "idProperty", idProperty));
            }

            localVarRequestOptions.Operation = "BasicApi.GetCrmV3ObjectsProductsProductIdGetById";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (oauth2_legacy) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }
            // authentication (hapikey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("hapikey")))
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.Crm.Products.Client.ClientUtils.ParameterToMultiMap("", "hapikey", this.Configuration.GetApiKeyWithPrefix("hapikey")));
            }
            // authentication (private_apps_legacy) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("private-app-legacy")))
            {
                localVarRequestOptions.HeaderParameters.Add("private-app-legacy", this.Configuration.GetApiKeyWithPrefix("private-app-legacy"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<SimplePublicObjectWithAssociations>("/crm/v3/objects/products/{productId}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetCrmV3ObjectsProductsProductIdGetById", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Read Read an Object identified by &#x60;{productId}&#x60;. &#x60;{productId}&#x60; refers to the internal object ID by default, or optionally any unique property value as specified by the &#x60;idProperty&#x60; query param.  Control what is returned via the &#x60;properties&#x60; query param.
        /// </summary>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productId"></param>
        /// <param name="properties">A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored. (optional)</param>
        /// <param name="propertiesWithHistory">A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. (optional)</param>
        /// <param name="associations">A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. (optional)</param>
        /// <param name="archived">Whether to return only results that have been archived. (optional, default to false)</param>
        /// <param name="idProperty">The name of a property whose values are unique for this object type (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SimplePublicObjectWithAssociations</returns>
        public async System.Threading.Tasks.Task<SimplePublicObjectWithAssociations> GetCrmV3ObjectsProductsProductIdGetByIdAsync(string productId, List<string> properties = default(List<string>), List<string> propertiesWithHistory = default(List<string>), List<string> associations = default(List<string>), bool? archived = default(bool?), string idProperty = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            HubSpot.Crm.Products.Client.ApiResponse<SimplePublicObjectWithAssociations> localVarResponse = await GetCrmV3ObjectsProductsProductIdGetByIdWithHttpInfoAsync(productId, properties, propertiesWithHistory, associations, archived, idProperty, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Read Read an Object identified by &#x60;{productId}&#x60;. &#x60;{productId}&#x60; refers to the internal object ID by default, or optionally any unique property value as specified by the &#x60;idProperty&#x60; query param.  Control what is returned via the &#x60;properties&#x60; query param.
        /// </summary>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productId"></param>
        /// <param name="properties">A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored. (optional)</param>
        /// <param name="propertiesWithHistory">A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. (optional)</param>
        /// <param name="associations">A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. (optional)</param>
        /// <param name="archived">Whether to return only results that have been archived. (optional, default to false)</param>
        /// <param name="idProperty">The name of a property whose values are unique for this object type (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SimplePublicObjectWithAssociations)</returns>
        public async System.Threading.Tasks.Task<HubSpot.Crm.Products.Client.ApiResponse<SimplePublicObjectWithAssociations>> GetCrmV3ObjectsProductsProductIdGetByIdWithHttpInfoAsync(string productId, List<string> properties = default(List<string>), List<string> propertiesWithHistory = default(List<string>), List<string> associations = default(List<string>), bool? archived = default(bool?), string idProperty = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'productId' is set
            if (productId == null)
            {
                throw new HubSpot.Crm.Products.Client.ApiException(400, "Missing required parameter 'productId' when calling BasicApi->GetCrmV3ObjectsProductsProductIdGetById");
            }


            HubSpot.Crm.Products.Client.RequestOptions localVarRequestOptions = new HubSpot.Crm.Products.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "*/*"
            };

            var localVarContentType = HubSpot.Crm.Products.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = HubSpot.Crm.Products.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("productId", HubSpot.Crm.Products.Client.ClientUtils.ParameterToString(productId)); // path parameter
            if (properties != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.Crm.Products.Client.ClientUtils.ParameterToMultiMap("multi", "properties", properties));
            }
            if (propertiesWithHistory != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.Crm.Products.Client.ClientUtils.ParameterToMultiMap("multi", "propertiesWithHistory", propertiesWithHistory));
            }
            if (associations != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.Crm.Products.Client.ClientUtils.ParameterToMultiMap("multi", "associations", associations));
            }
            if (archived != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.Crm.Products.Client.ClientUtils.ParameterToMultiMap("", "archived", archived));
            }
            if (idProperty != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.Crm.Products.Client.ClientUtils.ParameterToMultiMap("", "idProperty", idProperty));
            }

            localVarRequestOptions.Operation = "BasicApi.GetCrmV3ObjectsProductsProductIdGetById";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (oauth2_legacy) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }
            // authentication (hapikey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("hapikey")))
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.Crm.Products.Client.ClientUtils.ParameterToMultiMap("", "hapikey", this.Configuration.GetApiKeyWithPrefix("hapikey")));
            }
            // authentication (private_apps_legacy) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("private-app-legacy")))
            {
                localVarRequestOptions.HeaderParameters.Add("private-app-legacy", this.Configuration.GetApiKeyWithPrefix("private-app-legacy"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<SimplePublicObjectWithAssociations>("/crm/v3/objects/products/{productId}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetCrmV3ObjectsProductsProductIdGetById", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Update Perform a partial update of an Object identified by &#x60;{productId}&#x60;. &#x60;{productId}&#x60; refers to the internal object ID by default, or optionally any unique property value as specified by the &#x60;idProperty&#x60; query param. Provided property values will be overwritten. Read-only and non-existent properties will be ignored. Properties values can be cleared by passing an empty string.
        /// </summary>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productId"></param>
        /// <param name="simplePublicObjectInput"></param>
        /// <param name="idProperty">The name of a property whose values are unique for this object type (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SimplePublicObject</returns>
        public SimplePublicObject PatchCrmV3ObjectsProductsProductIdUpdate(string productId, SimplePublicObjectInput simplePublicObjectInput, string idProperty = default(string), int operationIndex = 0)
        {
            HubSpot.Crm.Products.Client.ApiResponse<SimplePublicObject> localVarResponse = PatchCrmV3ObjectsProductsProductIdUpdateWithHttpInfo(productId, simplePublicObjectInput, idProperty);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Update Perform a partial update of an Object identified by &#x60;{productId}&#x60;. &#x60;{productId}&#x60; refers to the internal object ID by default, or optionally any unique property value as specified by the &#x60;idProperty&#x60; query param. Provided property values will be overwritten. Read-only and non-existent properties will be ignored. Properties values can be cleared by passing an empty string.
        /// </summary>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productId"></param>
        /// <param name="simplePublicObjectInput"></param>
        /// <param name="idProperty">The name of a property whose values are unique for this object type (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SimplePublicObject</returns>
        public HubSpot.Crm.Products.Client.ApiResponse<SimplePublicObject> PatchCrmV3ObjectsProductsProductIdUpdateWithHttpInfo(string productId, SimplePublicObjectInput simplePublicObjectInput, string idProperty = default(string), int operationIndex = 0)
        {
            // verify the required parameter 'productId' is set
            if (productId == null)
            {
                throw new HubSpot.Crm.Products.Client.ApiException(400, "Missing required parameter 'productId' when calling BasicApi->PatchCrmV3ObjectsProductsProductIdUpdate");
            }

            // verify the required parameter 'simplePublicObjectInput' is set
            if (simplePublicObjectInput == null)
            {
                throw new HubSpot.Crm.Products.Client.ApiException(400, "Missing required parameter 'simplePublicObjectInput' when calling BasicApi->PatchCrmV3ObjectsProductsProductIdUpdate");
            }

            HubSpot.Crm.Products.Client.RequestOptions localVarRequestOptions = new HubSpot.Crm.Products.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "*/*"
            };

            var localVarContentType = HubSpot.Crm.Products.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = HubSpot.Crm.Products.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("productId", HubSpot.Crm.Products.Client.ClientUtils.ParameterToString(productId)); // path parameter
            if (idProperty != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.Crm.Products.Client.ClientUtils.ParameterToMultiMap("", "idProperty", idProperty));
            }
            localVarRequestOptions.Data = simplePublicObjectInput;

            localVarRequestOptions.Operation = "BasicApi.PatchCrmV3ObjectsProductsProductIdUpdate";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (oauth2_legacy) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }
            // authentication (hapikey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("hapikey")))
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.Crm.Products.Client.ClientUtils.ParameterToMultiMap("", "hapikey", this.Configuration.GetApiKeyWithPrefix("hapikey")));
            }
            // authentication (private_apps_legacy) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("private-app-legacy")))
            {
                localVarRequestOptions.HeaderParameters.Add("private-app-legacy", this.Configuration.GetApiKeyWithPrefix("private-app-legacy"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Patch<SimplePublicObject>("/crm/v3/objects/products/{productId}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PatchCrmV3ObjectsProductsProductIdUpdate", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Update Perform a partial update of an Object identified by &#x60;{productId}&#x60;. &#x60;{productId}&#x60; refers to the internal object ID by default, or optionally any unique property value as specified by the &#x60;idProperty&#x60; query param. Provided property values will be overwritten. Read-only and non-existent properties will be ignored. Properties values can be cleared by passing an empty string.
        /// </summary>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productId"></param>
        /// <param name="simplePublicObjectInput"></param>
        /// <param name="idProperty">The name of a property whose values are unique for this object type (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SimplePublicObject</returns>
        public async System.Threading.Tasks.Task<SimplePublicObject> PatchCrmV3ObjectsProductsProductIdUpdateAsync(string productId, SimplePublicObjectInput simplePublicObjectInput, string idProperty = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            HubSpot.Crm.Products.Client.ApiResponse<SimplePublicObject> localVarResponse = await PatchCrmV3ObjectsProductsProductIdUpdateWithHttpInfoAsync(productId, simplePublicObjectInput, idProperty, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Update Perform a partial update of an Object identified by &#x60;{productId}&#x60;. &#x60;{productId}&#x60; refers to the internal object ID by default, or optionally any unique property value as specified by the &#x60;idProperty&#x60; query param. Provided property values will be overwritten. Read-only and non-existent properties will be ignored. Properties values can be cleared by passing an empty string.
        /// </summary>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productId"></param>
        /// <param name="simplePublicObjectInput"></param>
        /// <param name="idProperty">The name of a property whose values are unique for this object type (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SimplePublicObject)</returns>
        public async System.Threading.Tasks.Task<HubSpot.Crm.Products.Client.ApiResponse<SimplePublicObject>> PatchCrmV3ObjectsProductsProductIdUpdateWithHttpInfoAsync(string productId, SimplePublicObjectInput simplePublicObjectInput, string idProperty = default(string), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'productId' is set
            if (productId == null)
            {
                throw new HubSpot.Crm.Products.Client.ApiException(400, "Missing required parameter 'productId' when calling BasicApi->PatchCrmV3ObjectsProductsProductIdUpdate");
            }

            // verify the required parameter 'simplePublicObjectInput' is set
            if (simplePublicObjectInput == null)
            {
                throw new HubSpot.Crm.Products.Client.ApiException(400, "Missing required parameter 'simplePublicObjectInput' when calling BasicApi->PatchCrmV3ObjectsProductsProductIdUpdate");
            }


            HubSpot.Crm.Products.Client.RequestOptions localVarRequestOptions = new HubSpot.Crm.Products.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "*/*"
            };

            var localVarContentType = HubSpot.Crm.Products.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = HubSpot.Crm.Products.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("productId", HubSpot.Crm.Products.Client.ClientUtils.ParameterToString(productId)); // path parameter
            if (idProperty != null)
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.Crm.Products.Client.ClientUtils.ParameterToMultiMap("", "idProperty", idProperty));
            }
            localVarRequestOptions.Data = simplePublicObjectInput;

            localVarRequestOptions.Operation = "BasicApi.PatchCrmV3ObjectsProductsProductIdUpdate";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (oauth2_legacy) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }
            // authentication (hapikey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("hapikey")))
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.Crm.Products.Client.ClientUtils.ParameterToMultiMap("", "hapikey", this.Configuration.GetApiKeyWithPrefix("hapikey")));
            }
            // authentication (private_apps_legacy) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("private-app-legacy")))
            {
                localVarRequestOptions.HeaderParameters.Add("private-app-legacy", this.Configuration.GetApiKeyWithPrefix("private-app-legacy"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PatchAsync<SimplePublicObject>("/crm/v3/objects/products/{productId}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PatchCrmV3ObjectsProductsProductIdUpdate", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Create Create a product with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard products is provided.
        /// </summary>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="simplePublicObjectInputForCreate"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SimplePublicObject</returns>
        public SimplePublicObject PostCrmV3ObjectsProductsCreate(SimplePublicObjectInputForCreate simplePublicObjectInputForCreate, int operationIndex = 0)
        {
            HubSpot.Crm.Products.Client.ApiResponse<SimplePublicObject> localVarResponse = PostCrmV3ObjectsProductsCreateWithHttpInfo(simplePublicObjectInputForCreate);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Create Create a product with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard products is provided.
        /// </summary>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="simplePublicObjectInputForCreate"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SimplePublicObject</returns>
        public HubSpot.Crm.Products.Client.ApiResponse<SimplePublicObject> PostCrmV3ObjectsProductsCreateWithHttpInfo(SimplePublicObjectInputForCreate simplePublicObjectInputForCreate, int operationIndex = 0)
        {
            // verify the required parameter 'simplePublicObjectInputForCreate' is set
            if (simplePublicObjectInputForCreate == null)
            {
                throw new HubSpot.Crm.Products.Client.ApiException(400, "Missing required parameter 'simplePublicObjectInputForCreate' when calling BasicApi->PostCrmV3ObjectsProductsCreate");
            }

            HubSpot.Crm.Products.Client.RequestOptions localVarRequestOptions = new HubSpot.Crm.Products.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "*/*"
            };

            var localVarContentType = HubSpot.Crm.Products.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = HubSpot.Crm.Products.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = simplePublicObjectInputForCreate;

            localVarRequestOptions.Operation = "BasicApi.PostCrmV3ObjectsProductsCreate";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (oauth2_legacy) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }
            // authentication (hapikey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("hapikey")))
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.Crm.Products.Client.ClientUtils.ParameterToMultiMap("", "hapikey", this.Configuration.GetApiKeyWithPrefix("hapikey")));
            }
            // authentication (private_apps_legacy) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("private-app-legacy")))
            {
                localVarRequestOptions.HeaderParameters.Add("private-app-legacy", this.Configuration.GetApiKeyWithPrefix("private-app-legacy"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<SimplePublicObject>("/crm/v3/objects/products", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PostCrmV3ObjectsProductsCreate", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Create Create a product with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard products is provided.
        /// </summary>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="simplePublicObjectInputForCreate"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SimplePublicObject</returns>
        public async System.Threading.Tasks.Task<SimplePublicObject> PostCrmV3ObjectsProductsCreateAsync(SimplePublicObjectInputForCreate simplePublicObjectInputForCreate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            HubSpot.Crm.Products.Client.ApiResponse<SimplePublicObject> localVarResponse = await PostCrmV3ObjectsProductsCreateWithHttpInfoAsync(simplePublicObjectInputForCreate, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Create Create a product with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard products is provided.
        /// </summary>
        /// <exception cref="HubSpot.Crm.Products.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="simplePublicObjectInputForCreate"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SimplePublicObject)</returns>
        public async System.Threading.Tasks.Task<HubSpot.Crm.Products.Client.ApiResponse<SimplePublicObject>> PostCrmV3ObjectsProductsCreateWithHttpInfoAsync(SimplePublicObjectInputForCreate simplePublicObjectInputForCreate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'simplePublicObjectInputForCreate' is set
            if (simplePublicObjectInputForCreate == null)
            {
                throw new HubSpot.Crm.Products.Client.ApiException(400, "Missing required parameter 'simplePublicObjectInputForCreate' when calling BasicApi->PostCrmV3ObjectsProductsCreate");
            }


            HubSpot.Crm.Products.Client.RequestOptions localVarRequestOptions = new HubSpot.Crm.Products.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "*/*"
            };

            var localVarContentType = HubSpot.Crm.Products.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = HubSpot.Crm.Products.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = simplePublicObjectInputForCreate;

            localVarRequestOptions.Operation = "BasicApi.PostCrmV3ObjectsProductsCreate";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (oauth2_legacy) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }
            // authentication (hapikey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("hapikey")))
            {
                localVarRequestOptions.QueryParameters.Add(HubSpot.Crm.Products.Client.ClientUtils.ParameterToMultiMap("", "hapikey", this.Configuration.GetApiKeyWithPrefix("hapikey")));
            }
            // authentication (private_apps_legacy) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("private-app-legacy")))
            {
                localVarRequestOptions.HeaderParameters.Add("private-app-legacy", this.Configuration.GetApiKeyWithPrefix("private-app-legacy"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<SimplePublicObject>("/crm/v3/objects/products", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PostCrmV3ObjectsProductsCreate", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
