/*
 * CrmPublicAssociationsServiceV4
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using HubSpot.Crm.CrmAssociations.Client;
using HubSpot.Crm.CrmAssociations.Api;
// uncomment below to import models
//using HubSpot.Crm.CrmAssociations.Model;

namespace HubSpot.Crm.CrmAssociations.Test.Api
{
    /// <summary>
    ///  Class for testing BatchApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class BatchApiTests : IDisposable
    {
        private BatchApi instance;

        public BatchApiTests()
        {
            instance = new BatchApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of BatchApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' BatchApi
            //Assert.IsType<BatchApi>(instance);
        }

        /// <summary>
        /// Test PostCrmV4AssociationsFromObjectTypeToObjectTypeBatchArchiveArchive
        /// </summary>
        [Fact]
        public void PostCrmV4AssociationsFromObjectTypeToObjectTypeBatchArchiveArchiveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string fromObjectType = null;
            //string toObjectType = null;
            //BatchInputPublicAssociationMultiArchive batchInputPublicAssociationMultiArchive = null;
            //instance.PostCrmV4AssociationsFromObjectTypeToObjectTypeBatchArchiveArchive(fromObjectType, toObjectType, batchInputPublicAssociationMultiArchive);
        }

        /// <summary>
        /// Test PostCrmV4AssociationsFromObjectTypeToObjectTypeBatchAssociateDefaultCreateDefault
        /// </summary>
        [Fact]
        public void PostCrmV4AssociationsFromObjectTypeToObjectTypeBatchAssociateDefaultCreateDefaultTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string fromObjectType = null;
            //string toObjectType = null;
            //BatchInputPublicDefaultAssociationMultiPost batchInputPublicDefaultAssociationMultiPost = null;
            //var response = instance.PostCrmV4AssociationsFromObjectTypeToObjectTypeBatchAssociateDefaultCreateDefault(fromObjectType, toObjectType, batchInputPublicDefaultAssociationMultiPost);
            //Assert.IsType<BatchResponsePublicDefaultAssociation>(response);
        }

        /// <summary>
        /// Test PostCrmV4AssociationsFromObjectTypeToObjectTypeBatchCreateCreate
        /// </summary>
        [Fact]
        public void PostCrmV4AssociationsFromObjectTypeToObjectTypeBatchCreateCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string fromObjectType = null;
            //string toObjectType = null;
            //BatchInputPublicAssociationMultiPost batchInputPublicAssociationMultiPost = null;
            //var response = instance.PostCrmV4AssociationsFromObjectTypeToObjectTypeBatchCreateCreate(fromObjectType, toObjectType, batchInputPublicAssociationMultiPost);
            //Assert.IsType<BatchResponseLabelsBetweenObjectPair>(response);
        }

        /// <summary>
        /// Test PostCrmV4AssociationsFromObjectTypeToObjectTypeBatchLabelsArchiveArchiveLabels
        /// </summary>
        [Fact]
        public void PostCrmV4AssociationsFromObjectTypeToObjectTypeBatchLabelsArchiveArchiveLabelsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string fromObjectType = null;
            //string toObjectType = null;
            //BatchInputPublicAssociationMultiPost batchInputPublicAssociationMultiPost = null;
            //instance.PostCrmV4AssociationsFromObjectTypeToObjectTypeBatchLabelsArchiveArchiveLabels(fromObjectType, toObjectType, batchInputPublicAssociationMultiPost);
        }

        /// <summary>
        /// Test PostCrmV4AssociationsFromObjectTypeToObjectTypeBatchReadGetPage
        /// </summary>
        [Fact]
        public void PostCrmV4AssociationsFromObjectTypeToObjectTypeBatchReadGetPageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string fromObjectType = null;
            //string toObjectType = null;
            //BatchInputPublicFetchAssociationsBatchRequest batchInputPublicFetchAssociationsBatchRequest = null;
            //var response = instance.PostCrmV4AssociationsFromObjectTypeToObjectTypeBatchReadGetPage(fromObjectType, toObjectType, batchInputPublicFetchAssociationsBatchRequest);
            //Assert.IsType<BatchResponsePublicAssociationMultiWithLabel>(response);
        }
    }
}
