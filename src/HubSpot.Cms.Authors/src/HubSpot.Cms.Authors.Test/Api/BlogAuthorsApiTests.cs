/*
 * Blog Post endpoints
 *
 * Use these endpoints for interacting with Blog Posts, Blog Authors, and Blog Tags
 *
 * The version of the OpenAPI document: v3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using HubSpot.Cms.Authors.Client;
using HubSpot.Cms.Authors.Api;
// uncomment below to import models
//using HubSpot.Cms.Authors.Model;

namespace HubSpot.Cms.Authors.Test.Api
{
    /// <summary>
    ///  Class for testing BlogAuthorsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class BlogAuthorsApiTests : IDisposable
    {
        private BlogAuthorsApi instance;

        public BlogAuthorsApiTests()
        {
            instance = new BlogAuthorsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of BlogAuthorsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' BlogAuthorsApi
            //Assert.IsType<BlogAuthorsApi>(instance);
        }

        /// <summary>
        /// Test DeleteCmsV3BlogsAuthorsObjectIdArchive
        /// </summary>
        [Fact]
        public void DeleteCmsV3BlogsAuthorsObjectIdArchiveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string objectId = null;
            //bool? archived = null;
            //instance.DeleteCmsV3BlogsAuthorsObjectIdArchive(objectId, archived);
        }

        /// <summary>
        /// Test GetCmsV3BlogsAuthorsGetPage
        /// </summary>
        [Fact]
        public void GetCmsV3BlogsAuthorsGetPageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? createdAt = null;
            //DateTime? createdAfter = null;
            //DateTime? createdBefore = null;
            //DateTime? updatedAt = null;
            //DateTime? updatedAfter = null;
            //DateTime? updatedBefore = null;
            //List<string> sort = null;
            //string after = null;
            //int? limit = null;
            //bool? archived = null;
            //var response = instance.GetCmsV3BlogsAuthorsGetPage(createdAt, createdAfter, createdBefore, updatedAt, updatedAfter, updatedBefore, sort, after, limit, archived);
            //Assert.IsType<CollectionResponseWithTotalBlogAuthorForwardPaging>(response);
        }

        /// <summary>
        /// Test GetCmsV3BlogsAuthorsObjectIdGetById
        /// </summary>
        [Fact]
        public void GetCmsV3BlogsAuthorsObjectIdGetByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string objectId = null;
            //bool? archived = null;
            //var response = instance.GetCmsV3BlogsAuthorsObjectIdGetById(objectId, archived);
            //Assert.IsType<BlogAuthor>(response);
        }

        /// <summary>
        /// Test PatchCmsV3BlogsAuthorsObjectIdUpdate
        /// </summary>
        [Fact]
        public void PatchCmsV3BlogsAuthorsObjectIdUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string objectId = null;
            //BlogAuthor blogAuthor = null;
            //bool? archived = null;
            //var response = instance.PatchCmsV3BlogsAuthorsObjectIdUpdate(objectId, blogAuthor, archived);
            //Assert.IsType<BlogAuthor>(response);
        }

        /// <summary>
        /// Test PostCmsV3BlogsAuthorsBatchArchiveArchiveBatch
        /// </summary>
        [Fact]
        public void PostCmsV3BlogsAuthorsBatchArchiveArchiveBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BatchInputString batchInputString = null;
            //instance.PostCmsV3BlogsAuthorsBatchArchiveArchiveBatch(batchInputString);
        }

        /// <summary>
        /// Test PostCmsV3BlogsAuthorsBatchCreateCreateBatch
        /// </summary>
        [Fact]
        public void PostCmsV3BlogsAuthorsBatchCreateCreateBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BatchInputBlogAuthor batchInputBlogAuthor = null;
            //var response = instance.PostCmsV3BlogsAuthorsBatchCreateCreateBatch(batchInputBlogAuthor);
            //Assert.IsType<BatchResponseBlogAuthor>(response);
        }

        /// <summary>
        /// Test PostCmsV3BlogsAuthorsBatchReadReadBatch
        /// </summary>
        [Fact]
        public void PostCmsV3BlogsAuthorsBatchReadReadBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BatchInputString batchInputString = null;
            //bool? archived = null;
            //var response = instance.PostCmsV3BlogsAuthorsBatchReadReadBatch(batchInputString, archived);
            //Assert.IsType<BatchResponseBlogAuthor>(response);
        }

        /// <summary>
        /// Test PostCmsV3BlogsAuthorsBatchUpdateUpdateBatch
        /// </summary>
        [Fact]
        public void PostCmsV3BlogsAuthorsBatchUpdateUpdateBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BatchInputJsonNode batchInputJsonNode = null;
            //bool? archived = null;
            //var response = instance.PostCmsV3BlogsAuthorsBatchUpdateUpdateBatch(batchInputJsonNode, archived);
            //Assert.IsType<BatchResponseBlogAuthor>(response);
        }

        /// <summary>
        /// Test PostCmsV3BlogsAuthorsCreate
        /// </summary>
        [Fact]
        public void PostCmsV3BlogsAuthorsCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BlogAuthor blogAuthor = null;
            //var response = instance.PostCmsV3BlogsAuthorsCreate(blogAuthor);
            //Assert.IsType<BlogAuthor>(response);
        }

        /// <summary>
        /// Test PostCmsV3BlogsAuthorsMultiLanguageAttachToLangGroupAttachToLangGroup
        /// </summary>
        [Fact]
        public void PostCmsV3BlogsAuthorsMultiLanguageAttachToLangGroupAttachToLangGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AttachToLangPrimaryRequestVNext attachToLangPrimaryRequestVNext = null;
            //var response = instance.PostCmsV3BlogsAuthorsMultiLanguageAttachToLangGroupAttachToLangGroup(attachToLangPrimaryRequestVNext);
            //Assert.IsType<Error>(response);
        }

        /// <summary>
        /// Test PostCmsV3BlogsAuthorsMultiLanguageCreateLanguageVariationCreateLangVariation
        /// </summary>
        [Fact]
        public void PostCmsV3BlogsAuthorsMultiLanguageCreateLanguageVariationCreateLangVariationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BlogAuthorCloneRequestVNext blogAuthorCloneRequestVNext = null;
            //var response = instance.PostCmsV3BlogsAuthorsMultiLanguageCreateLanguageVariationCreateLangVariation(blogAuthorCloneRequestVNext);
            //Assert.IsType<BlogAuthor>(response);
        }

        /// <summary>
        /// Test PostCmsV3BlogsAuthorsMultiLanguageDetachFromLangGroupDetachFromLangGroup
        /// </summary>
        [Fact]
        public void PostCmsV3BlogsAuthorsMultiLanguageDetachFromLangGroupDetachFromLangGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DetachFromLangGroupRequestVNext detachFromLangGroupRequestVNext = null;
            //var response = instance.PostCmsV3BlogsAuthorsMultiLanguageDetachFromLangGroupDetachFromLangGroup(detachFromLangGroupRequestVNext);
            //Assert.IsType<Error>(response);
        }

        /// <summary>
        /// Test PostCmsV3BlogsAuthorsMultiLanguageUpdateLanguagesUpdateLangs
        /// </summary>
        [Fact]
        public void PostCmsV3BlogsAuthorsMultiLanguageUpdateLanguagesUpdateLangsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateLanguagesRequestVNext updateLanguagesRequestVNext = null;
            //var response = instance.PostCmsV3BlogsAuthorsMultiLanguageUpdateLanguagesUpdateLangs(updateLanguagesRequestVNext);
            //Assert.IsType<Error>(response);
        }

        /// <summary>
        /// Test PutCmsV3BlogsAuthorsMultiLanguageSetNewLangPrimarySetLangPrimary
        /// </summary>
        [Fact]
        public void PutCmsV3BlogsAuthorsMultiLanguageSetNewLangPrimarySetLangPrimaryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SetNewLanguagePrimaryRequestVNext setNewLanguagePrimaryRequestVNext = null;
            //instance.PutCmsV3BlogsAuthorsMultiLanguageSetNewLangPrimarySetLangPrimary(setNewLanguagePrimaryRequestVNext);
        }
    }
}
