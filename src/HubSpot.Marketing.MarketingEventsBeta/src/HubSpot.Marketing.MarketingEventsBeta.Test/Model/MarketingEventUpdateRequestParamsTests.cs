/*
 * Marketing Events Extension
 *
 * These APIs allow you to interact with HubSpot's Marketing Events Extension. It allows you to: * Create, Read or update Marketing Event information in HubSpot * Specify whether a HubSpot contact has registered, attended or cancelled a registration to a Marketing Event. * Specify a URL that can be called to get the details of a Marketing Event. 
 *
 * The version of the OpenAPI document: v3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using HubSpot.Marketing.MarketingEventsBeta.Model;
using HubSpot.Marketing.MarketingEventsBeta.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace HubSpot.Marketing.MarketingEventsBeta.Test.Model
{
    /// <summary>
    ///  Class for testing MarketingEventUpdateRequestParams
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class MarketingEventUpdateRequestParamsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for MarketingEventUpdateRequestParams
        //private MarketingEventUpdateRequestParams instance;

        public MarketingEventUpdateRequestParamsTests()
        {
            // TODO uncomment below to create an instance of MarketingEventUpdateRequestParams
            //instance = new MarketingEventUpdateRequestParams();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MarketingEventUpdateRequestParams
        /// </summary>
        [Fact]
        public void MarketingEventUpdateRequestParamsInstanceTest()
        {
            // TODO uncomment below to test "IsType" MarketingEventUpdateRequestParams
            //Assert.IsType<MarketingEventUpdateRequestParams>(instance);
        }


        /// <summary>
        /// Test the property 'EventName'
        /// </summary>
        [Fact]
        public void EventNameTest()
        {
            // TODO unit test for the property 'EventName'
        }
        /// <summary>
        /// Test the property 'EventType'
        /// </summary>
        [Fact]
        public void EventTypeTest()
        {
            // TODO unit test for the property 'EventType'
        }
        /// <summary>
        /// Test the property 'StartDateTime'
        /// </summary>
        [Fact]
        public void StartDateTimeTest()
        {
            // TODO unit test for the property 'StartDateTime'
        }
        /// <summary>
        /// Test the property 'EndDateTime'
        /// </summary>
        [Fact]
        public void EndDateTimeTest()
        {
            // TODO unit test for the property 'EndDateTime'
        }
        /// <summary>
        /// Test the property 'EventOrganizer'
        /// </summary>
        [Fact]
        public void EventOrganizerTest()
        {
            // TODO unit test for the property 'EventOrganizer'
        }
        /// <summary>
        /// Test the property 'EventDescription'
        /// </summary>
        [Fact]
        public void EventDescriptionTest()
        {
            // TODO unit test for the property 'EventDescription'
        }
        /// <summary>
        /// Test the property 'EventUrl'
        /// </summary>
        [Fact]
        public void EventUrlTest()
        {
            // TODO unit test for the property 'EventUrl'
        }
        /// <summary>
        /// Test the property 'EventCancelled'
        /// </summary>
        [Fact]
        public void EventCancelledTest()
        {
            // TODO unit test for the property 'EventCancelled'
        }
        /// <summary>
        /// Test the property 'CustomProperties'
        /// </summary>
        [Fact]
        public void CustomPropertiesTest()
        {
            // TODO unit test for the property 'CustomProperties'
        }

    }

}
