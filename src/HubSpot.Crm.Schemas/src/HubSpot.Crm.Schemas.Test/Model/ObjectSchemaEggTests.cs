/*
 * Schemas
 *
 * The CRM uses schemas to define how custom objects should store and represent information in the HubSpot CRM. Schemas define details about an object's type, properties, and associations. The schema can be uniquely identified by its **object type ID**.
 *
 * The version of the OpenAPI document: v3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using HubSpot.Crm.Schemas.Model;
using HubSpot.Crm.Schemas.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace HubSpot.Crm.Schemas.Test.Model
{
    /// <summary>
    ///  Class for testing ObjectSchemaEgg
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ObjectSchemaEggTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ObjectSchemaEgg
        //private ObjectSchemaEgg instance;

        public ObjectSchemaEggTests()
        {
            // TODO uncomment below to create an instance of ObjectSchemaEgg
            //instance = new ObjectSchemaEgg();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ObjectSchemaEgg
        /// </summary>
        [Fact]
        public void ObjectSchemaEggInstanceTest()
        {
            // TODO uncomment below to test "IsType" ObjectSchemaEgg
            //Assert.IsType<ObjectSchemaEgg>(instance);
        }


        /// <summary>
        /// Test the property 'Labels'
        /// </summary>
        [Fact]
        public void LabelsTest()
        {
            // TODO unit test for the property 'Labels'
        }
        /// <summary>
        /// Test the property 'RequiredProperties'
        /// </summary>
        [Fact]
        public void RequiredPropertiesTest()
        {
            // TODO unit test for the property 'RequiredProperties'
        }
        /// <summary>
        /// Test the property 'SearchableProperties'
        /// </summary>
        [Fact]
        public void SearchablePropertiesTest()
        {
            // TODO unit test for the property 'SearchableProperties'
        }
        /// <summary>
        /// Test the property 'PrimaryDisplayProperty'
        /// </summary>
        [Fact]
        public void PrimaryDisplayPropertyTest()
        {
            // TODO unit test for the property 'PrimaryDisplayProperty'
        }
        /// <summary>
        /// Test the property 'SecondaryDisplayProperties'
        /// </summary>
        [Fact]
        public void SecondaryDisplayPropertiesTest()
        {
            // TODO unit test for the property 'SecondaryDisplayProperties'
        }
        /// <summary>
        /// Test the property 'Properties'
        /// </summary>
        [Fact]
        public void PropertiesTest()
        {
            // TODO unit test for the property 'Properties'
        }
        /// <summary>
        /// Test the property 'AssociatedObjects'
        /// </summary>
        [Fact]
        public void AssociatedObjectsTest()
        {
            // TODO unit test for the property 'AssociatedObjects'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

    }

}
