/*
 * Schemas
 *
 * The CRM uses schemas to define how custom objects should store and represent information in the HubSpot CRM. Schemas define details about an object's type, properties, and associations. The schema can be uniquely identified by its **object type ID**.
 *
 * The version of the OpenAPI document: v3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using HubSpot.Crm.Schemas.Model;
using HubSpot.Crm.Schemas.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace HubSpot.Crm.Schemas.Test.Model
{
    /// <summary>
    ///  Class for testing CollectionResponseObjectSchemaNoPaging
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CollectionResponseObjectSchemaNoPagingTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for CollectionResponseObjectSchemaNoPaging
        //private CollectionResponseObjectSchemaNoPaging instance;

        public CollectionResponseObjectSchemaNoPagingTests()
        {
            // TODO uncomment below to create an instance of CollectionResponseObjectSchemaNoPaging
            //instance = new CollectionResponseObjectSchemaNoPaging();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CollectionResponseObjectSchemaNoPaging
        /// </summary>
        [Fact]
        public void CollectionResponseObjectSchemaNoPagingInstanceTest()
        {
            // TODO uncomment below to test "IsType" CollectionResponseObjectSchemaNoPaging
            //Assert.IsType<CollectionResponseObjectSchemaNoPaging>(instance);
        }


        /// <summary>
        /// Test the property 'Results'
        /// </summary>
        [Fact]
        public void ResultsTest()
        {
            // TODO unit test for the property 'Results'
        }

    }

}
