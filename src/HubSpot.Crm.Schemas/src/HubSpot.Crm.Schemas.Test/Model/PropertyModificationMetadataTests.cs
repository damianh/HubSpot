/*
 * Schemas
 *
 * The CRM uses schemas to define how custom objects should store and represent information in the HubSpot CRM. Schemas define details about an object's type, properties, and associations. The schema can be uniquely identified by its **object type ID**.
 *
 * The version of the OpenAPI document: v3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using HubSpot.Crm.Schemas.Model;
using HubSpot.Crm.Schemas.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace HubSpot.Crm.Schemas.Test.Model
{
    /// <summary>
    ///  Class for testing PropertyModificationMetadata
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PropertyModificationMetadataTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for PropertyModificationMetadata
        //private PropertyModificationMetadata instance;

        public PropertyModificationMetadataTests()
        {
            // TODO uncomment below to create an instance of PropertyModificationMetadata
            //instance = new PropertyModificationMetadata();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PropertyModificationMetadata
        /// </summary>
        [Fact]
        public void PropertyModificationMetadataInstanceTest()
        {
            // TODO uncomment below to test "IsType" PropertyModificationMetadata
            //Assert.IsType<PropertyModificationMetadata>(instance);
        }


        /// <summary>
        /// Test the property 'Archivable'
        /// </summary>
        [Fact]
        public void ArchivableTest()
        {
            // TODO unit test for the property 'Archivable'
        }
        /// <summary>
        /// Test the property 'ReadOnlyDefinition'
        /// </summary>
        [Fact]
        public void ReadOnlyDefinitionTest()
        {
            // TODO unit test for the property 'ReadOnlyDefinition'
        }
        /// <summary>
        /// Test the property 'ReadOnlyOptions'
        /// </summary>
        [Fact]
        public void ReadOnlyOptionsTest()
        {
            // TODO unit test for the property 'ReadOnlyOptions'
        }
        /// <summary>
        /// Test the property 'ReadOnlyValue'
        /// </summary>
        [Fact]
        public void ReadOnlyValueTest()
        {
            // TODO unit test for the property 'ReadOnlyValue'
        }

    }

}
