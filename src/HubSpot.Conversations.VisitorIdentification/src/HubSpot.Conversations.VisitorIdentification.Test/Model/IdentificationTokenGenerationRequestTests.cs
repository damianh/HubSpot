/*
 * Visitor Identification
 *
 * The Visitor Identification API allows you to pass identification information to the HubSpot chat widget for otherwise unknown visitors that were verified by your own authentication system.
 *
 * The version of the OpenAPI document: v3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using HubSpot.Conversations.VisitorIdentification.Model;
using HubSpot.Conversations.VisitorIdentification.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace HubSpot.Conversations.VisitorIdentification.Test.Model
{
    /// <summary>
    ///  Class for testing IdentificationTokenGenerationRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class IdentificationTokenGenerationRequestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for IdentificationTokenGenerationRequest
        //private IdentificationTokenGenerationRequest instance;

        public IdentificationTokenGenerationRequestTests()
        {
            // TODO uncomment below to create an instance of IdentificationTokenGenerationRequest
            //instance = new IdentificationTokenGenerationRequest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of IdentificationTokenGenerationRequest
        /// </summary>
        [Fact]
        public void IdentificationTokenGenerationRequestInstanceTest()
        {
            // TODO uncomment below to test "IsType" IdentificationTokenGenerationRequest
            //Assert.IsType<IdentificationTokenGenerationRequest>(instance);
        }


        /// <summary>
        /// Test the property 'Email'
        /// </summary>
        [Fact]
        public void EmailTest()
        {
            // TODO unit test for the property 'Email'
        }
        /// <summary>
        /// Test the property 'FirstName'
        /// </summary>
        [Fact]
        public void FirstNameTest()
        {
            // TODO unit test for the property 'FirstName'
        }
        /// <summary>
        /// Test the property 'LastName'
        /// </summary>
        [Fact]
        public void LastNameTest()
        {
            // TODO unit test for the property 'LastName'
        }

    }

}
