/*
 * Timeline events
 *
 * This feature allows an app to create and configure custom events that can show up in the timelines of certain CRM objects like contacts, companies, tickets, or deals. You'll find multiple use cases for this API in the sections below.
 *
 * The version of the OpenAPI document: v3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using HubSpot.Crm.Timeline.Client;
using HubSpot.Crm.Timeline.Api;
// uncomment below to import models
//using HubSpot.Crm.Timeline.Model;

namespace HubSpot.Crm.Timeline.Test.Api
{
    /// <summary>
    ///  Class for testing EventsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class EventsApiTests : IDisposable
    {
        private EventsApi instance;

        public EventsApiTests()
        {
            instance = new EventsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of EventsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' EventsApi
            //Assert.IsType<EventsApi>(instance);
        }

        /// <summary>
        /// Test GetIntegratorsTimelineV3EventsEventTemplateIdEventIdDetailGetDetailById
        /// </summary>
        [Fact]
        public void GetIntegratorsTimelineV3EventsEventTemplateIdEventIdDetailGetDetailByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string eventTemplateId = null;
            //string eventId = null;
            //var response = instance.GetIntegratorsTimelineV3EventsEventTemplateIdEventIdDetailGetDetailById(eventTemplateId, eventId);
            //Assert.IsType<EventDetail>(response);
        }

        /// <summary>
        /// Test GetIntegratorsTimelineV3EventsEventTemplateIdEventIdGetById
        /// </summary>
        [Fact]
        public void GetIntegratorsTimelineV3EventsEventTemplateIdEventIdGetByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string eventTemplateId = null;
            //string eventId = null;
            //var response = instance.GetIntegratorsTimelineV3EventsEventTemplateIdEventIdGetById(eventTemplateId, eventId);
            //Assert.IsType<TimelineEventResponse>(response);
        }

        /// <summary>
        /// Test GetIntegratorsTimelineV3EventsEventTemplateIdEventIdRenderGetRenderById
        /// </summary>
        [Fact]
        public void GetIntegratorsTimelineV3EventsEventTemplateIdEventIdRenderGetRenderByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string eventTemplateId = null;
            //string eventId = null;
            //bool? detail = null;
            //var response = instance.GetIntegratorsTimelineV3EventsEventTemplateIdEventIdRenderGetRenderById(eventTemplateId, eventId, detail);
            //Assert.IsType<string>(response);
        }

        /// <summary>
        /// Test PostIntegratorsTimelineV3EventsBatchCreateCreateBatch
        /// </summary>
        [Fact]
        public void PostIntegratorsTimelineV3EventsBatchCreateCreateBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BatchInputTimelineEvent batchInputTimelineEvent = null;
            //var response = instance.PostIntegratorsTimelineV3EventsBatchCreateCreateBatch(batchInputTimelineEvent);
            //Assert.IsType<BatchResponseTimelineEventResponse>(response);
        }

        /// <summary>
        /// Test PostIntegratorsTimelineV3EventsCreate
        /// </summary>
        [Fact]
        public void PostIntegratorsTimelineV3EventsCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TimelineEvent timelineEvent = null;
            //var response = instance.PostIntegratorsTimelineV3EventsCreate(timelineEvent);
            //Assert.IsType<TimelineEventResponse>(response);
        }
    }
}
