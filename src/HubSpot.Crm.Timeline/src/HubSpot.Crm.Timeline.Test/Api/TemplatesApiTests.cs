/*
 * Timeline events
 *
 * This feature allows an app to create and configure custom events that can show up in the timelines of certain CRM objects like contacts, companies, tickets, or deals. You'll find multiple use cases for this API in the sections below.
 *
 * The version of the OpenAPI document: v3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using HubSpot.Crm.Timeline.Client;
using HubSpot.Crm.Timeline.Api;
// uncomment below to import models
//using HubSpot.Crm.Timeline.Model;

namespace HubSpot.Crm.Timeline.Test.Api
{
    /// <summary>
    ///  Class for testing TemplatesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TemplatesApiTests : IDisposable
    {
        private TemplatesApi instance;

        public TemplatesApiTests()
        {
            instance = new TemplatesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TemplatesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' TemplatesApi
            //Assert.IsType<TemplatesApi>(instance);
        }

        /// <summary>
        /// Test DeleteIntegratorsTimelineV3AppIdEventTemplatesEventTemplateIdArchive
        /// </summary>
        [Fact]
        public void DeleteIntegratorsTimelineV3AppIdEventTemplatesEventTemplateIdArchiveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string eventTemplateId = null;
            //int appId = null;
            //instance.DeleteIntegratorsTimelineV3AppIdEventTemplatesEventTemplateIdArchive(eventTemplateId, appId);
        }

        /// <summary>
        /// Test GetIntegratorsTimelineV3AppIdEventTemplatesEventTemplateIdGetById
        /// </summary>
        [Fact]
        public void GetIntegratorsTimelineV3AppIdEventTemplatesEventTemplateIdGetByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string eventTemplateId = null;
            //int appId = null;
            //var response = instance.GetIntegratorsTimelineV3AppIdEventTemplatesEventTemplateIdGetById(eventTemplateId, appId);
            //Assert.IsType<TimelineEventTemplate>(response);
        }

        /// <summary>
        /// Test GetIntegratorsTimelineV3AppIdEventTemplatesGetAll
        /// </summary>
        [Fact]
        public void GetIntegratorsTimelineV3AppIdEventTemplatesGetAllTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int appId = null;
            //var response = instance.GetIntegratorsTimelineV3AppIdEventTemplatesGetAll(appId);
            //Assert.IsType<CollectionResponseTimelineEventTemplateNoPaging>(response);
        }

        /// <summary>
        /// Test PostIntegratorsTimelineV3AppIdEventTemplatesCreate
        /// </summary>
        [Fact]
        public void PostIntegratorsTimelineV3AppIdEventTemplatesCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int appId = null;
            //TimelineEventTemplateCreateRequest timelineEventTemplateCreateRequest = null;
            //var response = instance.PostIntegratorsTimelineV3AppIdEventTemplatesCreate(appId, timelineEventTemplateCreateRequest);
            //Assert.IsType<TimelineEventTemplate>(response);
        }

        /// <summary>
        /// Test PutIntegratorsTimelineV3AppIdEventTemplatesEventTemplateIdUpdate
        /// </summary>
        [Fact]
        public void PutIntegratorsTimelineV3AppIdEventTemplatesEventTemplateIdUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string eventTemplateId = null;
            //int appId = null;
            //TimelineEventTemplateUpdateRequest timelineEventTemplateUpdateRequest = null;
            //var response = instance.PutIntegratorsTimelineV3AppIdEventTemplatesEventTemplateIdUpdate(eventTemplateId, appId, timelineEventTemplateUpdateRequest);
            //Assert.IsType<TimelineEventTemplate>(response);
        }
    }
}
