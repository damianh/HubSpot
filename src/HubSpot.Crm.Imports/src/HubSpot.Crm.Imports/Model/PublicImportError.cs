/*
 * CRM Imports
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = HubSpot.Crm.Imports.Client.OpenAPIDateConverter;

namespace HubSpot.Crm.Imports.Model
{
    /// <summary>
    /// PublicImportError
    /// </summary>
    [DataContract(Name = "PublicImportError")]
    public partial class PublicImportError : IEquatable<PublicImportError>, IValidatableObject
    {
        /// <summary>
        /// Defines ErrorType
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ErrorTypeEnum
        {
            /// <summary>
            /// Enum INCORRECTNUMBEROFCOLUMNS for value: INCORRECT_NUMBER_OF_COLUMNS
            /// </summary>
            [EnumMember(Value = "INCORRECT_NUMBER_OF_COLUMNS")]
            INCORRECTNUMBEROFCOLUMNS = 1,

            /// <summary>
            /// Enum INVALIDOBJECTID for value: INVALID_OBJECT_ID
            /// </summary>
            [EnumMember(Value = "INVALID_OBJECT_ID")]
            INVALIDOBJECTID = 2,

            /// <summary>
            /// Enum INVALIDASSOCIATIONIDENTIFIER for value: INVALID_ASSOCIATION_IDENTIFIER
            /// </summary>
            [EnumMember(Value = "INVALID_ASSOCIATION_IDENTIFIER")]
            INVALIDASSOCIATIONIDENTIFIER = 3,

            /// <summary>
            /// Enum NOOBJECTIDFROMASSOCIATIONIDENTIFIER for value: NO_OBJECT_ID_FROM_ASSOCIATION_IDENTIFIER
            /// </summary>
            [EnumMember(Value = "NO_OBJECT_ID_FROM_ASSOCIATION_IDENTIFIER")]
            NOOBJECTIDFROMASSOCIATIONIDENTIFIER = 4,

            /// <summary>
            /// Enum MULTIPLECOMPANIESWITHTHISDOMAIN for value: MULTIPLE_COMPANIES_WITH_THIS_DOMAIN
            /// </summary>
            [EnumMember(Value = "MULTIPLE_COMPANIES_WITH_THIS_DOMAIN")]
            MULTIPLECOMPANIESWITHTHISDOMAIN = 5,

            /// <summary>
            /// Enum PROPERTYDEFINITIONNOTFOUND for value: PROPERTY_DEFINITION_NOT_FOUND
            /// </summary>
            [EnumMember(Value = "PROPERTY_DEFINITION_NOT_FOUND")]
            PROPERTYDEFINITIONNOTFOUND = 6,

            /// <summary>
            /// Enum PROPERTYVALUENOTFOUND for value: PROPERTY_VALUE_NOT_FOUND
            /// </summary>
            [EnumMember(Value = "PROPERTY_VALUE_NOT_FOUND")]
            PROPERTYVALUENOTFOUND = 7,

            /// <summary>
            /// Enum COULDNOTFINDOWNER for value: COULD_NOT_FIND_OWNER
            /// </summary>
            [EnumMember(Value = "COULD_NOT_FIND_OWNER")]
            COULDNOTFINDOWNER = 8,

            /// <summary>
            /// Enum MULTIPLEOWNERSFOUND for value: MULTIPLE_OWNERS_FOUND
            /// </summary>
            [EnumMember(Value = "MULTIPLE_OWNERS_FOUND")]
            MULTIPLEOWNERSFOUND = 9,

            /// <summary>
            /// Enum COULDNOTFINDBUSINESSUNIT for value: COULD_NOT_FIND_BUSINESS_UNIT
            /// </summary>
            [EnumMember(Value = "COULD_NOT_FIND_BUSINESS_UNIT")]
            COULDNOTFINDBUSINESSUNIT = 10,

            /// <summary>
            /// Enum COULDNOTPARSENUMBER for value: COULD_NOT_PARSE_NUMBER
            /// </summary>
            [EnumMember(Value = "COULD_NOT_PARSE_NUMBER")]
            COULDNOTPARSENUMBER = 11,

            /// <summary>
            /// Enum COULDNOTPARSEDATE for value: COULD_NOT_PARSE_DATE
            /// </summary>
            [EnumMember(Value = "COULD_NOT_PARSE_DATE")]
            COULDNOTPARSEDATE = 12,

            /// <summary>
            /// Enum COULDNOTPARSETERM for value: COULD_NOT_PARSE_TERM
            /// </summary>
            [EnumMember(Value = "COULD_NOT_PARSE_TERM")]
            COULDNOTPARSETERM = 13,

            /// <summary>
            /// Enum OUTSIDEVALIDTIMERANGE for value: OUTSIDE_VALID_TIME_RANGE
            /// </summary>
            [EnumMember(Value = "OUTSIDE_VALID_TIME_RANGE")]
            OUTSIDEVALIDTIMERANGE = 14,

            /// <summary>
            /// Enum OUTSIDEVALIDTERMRANGE for value: OUTSIDE_VALID_TERM_RANGE
            /// </summary>
            [EnumMember(Value = "OUTSIDE_VALID_TERM_RANGE")]
            OUTSIDEVALIDTERMRANGE = 15,

            /// <summary>
            /// Enum COULDNOTPARSEROW for value: COULD_NOT_PARSE_ROW
            /// </summary>
            [EnumMember(Value = "COULD_NOT_PARSE_ROW")]
            COULDNOTPARSEROW = 16,

            /// <summary>
            /// Enum INVALIDENUMERATIONOPTION for value: INVALID_ENUMERATION_OPTION
            /// </summary>
            [EnumMember(Value = "INVALID_ENUMERATION_OPTION")]
            INVALIDENUMERATIONOPTION = 17,

            /// <summary>
            /// Enum AMBIGUOUSENUMERATIONOPTION for value: AMBIGUOUS_ENUMERATION_OPTION
            /// </summary>
            [EnumMember(Value = "AMBIGUOUS_ENUMERATION_OPTION")]
            AMBIGUOUSENUMERATIONOPTION = 18,

            /// <summary>
            /// Enum FAILEDVALIDATION for value: FAILED_VALIDATION
            /// </summary>
            [EnumMember(Value = "FAILED_VALIDATION")]
            FAILEDVALIDATION = 19,

            /// <summary>
            /// Enum FAILEDTOCREATEASSOCIATION for value: FAILED_TO_CREATE_ASSOCIATION
            /// </summary>
            [EnumMember(Value = "FAILED_TO_CREATE_ASSOCIATION")]
            FAILEDTOCREATEASSOCIATION = 20,

            /// <summary>
            /// Enum FILENOTFOUND for value: FILE_NOT_FOUND
            /// </summary>
            [EnumMember(Value = "FILE_NOT_FOUND")]
            FILENOTFOUND = 21,

            /// <summary>
            /// Enum INVALIDCOLUMNCONFIGURATION for value: INVALID_COLUMN_CONFIGURATION
            /// </summary>
            [EnumMember(Value = "INVALID_COLUMN_CONFIGURATION")]
            INVALIDCOLUMNCONFIGURATION = 22,

            /// <summary>
            /// Enum INVALIDFILETYPE for value: INVALID_FILE_TYPE
            /// </summary>
            [EnumMember(Value = "INVALID_FILE_TYPE")]
            INVALIDFILETYPE = 23,

            /// <summary>
            /// Enum INVALIDSPREADSHEET for value: INVALID_SPREADSHEET
            /// </summary>
            [EnumMember(Value = "INVALID_SPREADSHEET")]
            INVALIDSPREADSHEET = 24,

            /// <summary>
            /// Enum INVALIDSHEETCOUNT for value: INVALID_SHEET_COUNT
            /// </summary>
            [EnumMember(Value = "INVALID_SHEET_COUNT")]
            INVALIDSHEETCOUNT = 25,

            /// <summary>
            /// Enum FAILEDTOPROCESSOBJECTWITHEMPTYPROPERTYVALUES for value: FAILED_TO_PROCESS_OBJECT_WITH_EMPTY_PROPERTY_VALUES
            /// </summary>
            [EnumMember(Value = "FAILED_TO_PROCESS_OBJECT_WITH_EMPTY_PROPERTY_VALUES")]
            FAILEDTOPROCESSOBJECTWITHEMPTYPROPERTYVALUES = 26,

            /// <summary>
            /// Enum UNKNOWNBADREQUEST for value: UNKNOWN_BAD_REQUEST
            /// </summary>
            [EnumMember(Value = "UNKNOWN_BAD_REQUEST")]
            UNKNOWNBADREQUEST = 27,

            /// <summary>
            /// Enum GDPRBLACKLISTEDEMAIL for value: GDPR_BLACKLISTED_EMAIL
            /// </summary>
            [EnumMember(Value = "GDPR_BLACKLISTED_EMAIL")]
            GDPRBLACKLISTEDEMAIL = 28,

            /// <summary>
            /// Enum DUPLICATEASSOCIATIONID for value: DUPLICATE_ASSOCIATION_ID
            /// </summary>
            [EnumMember(Value = "DUPLICATE_ASSOCIATION_ID")]
            DUPLICATEASSOCIATIONID = 29,

            /// <summary>
            /// Enum LIMITEXCEEDED for value: LIMIT_EXCEEDED
            /// </summary>
            [EnumMember(Value = "LIMIT_EXCEEDED")]
            LIMITEXCEEDED = 30,

            /// <summary>
            /// Enum INVALIDALTERNATEID for value: INVALID_ALTERNATE_ID
            /// </summary>
            [EnumMember(Value = "INVALID_ALTERNATE_ID")]
            INVALIDALTERNATEID = 31,

            /// <summary>
            /// Enum INVALIDEMAIL for value: INVALID_EMAIL
            /// </summary>
            [EnumMember(Value = "INVALID_EMAIL")]
            INVALIDEMAIL = 32,

            /// <summary>
            /// Enum INVALIDDOMAIN for value: INVALID_DOMAIN
            /// </summary>
            [EnumMember(Value = "INVALID_DOMAIN")]
            INVALIDDOMAIN = 33,

            /// <summary>
            /// Enum DUPLICATEROWCONTENT for value: DUPLICATE_ROW_CONTENT
            /// </summary>
            [EnumMember(Value = "DUPLICATE_ROW_CONTENT")]
            DUPLICATEROWCONTENT = 34,

            /// <summary>
            /// Enum INVALIDNUMBERSIZE for value: INVALID_NUMBER_SIZE
            /// </summary>
            [EnumMember(Value = "INVALID_NUMBER_SIZE")]
            INVALIDNUMBERSIZE = 35,

            /// <summary>
            /// Enum UNKNOWNERROR for value: UNKNOWN_ERROR
            /// </summary>
            [EnumMember(Value = "UNKNOWN_ERROR")]
            UNKNOWNERROR = 36,

            /// <summary>
            /// Enum FAILEDTOOPTOUTCONTACT for value: FAILED_TO_OPT_OUT_CONTACT
            /// </summary>
            [EnumMember(Value = "FAILED_TO_OPT_OUT_CONTACT")]
            FAILEDTOOPTOUTCONTACT = 37,

            /// <summary>
            /// Enum INVALIDREQUIREDPROPERTY for value: INVALID_REQUIRED_PROPERTY
            /// </summary>
            [EnumMember(Value = "INVALID_REQUIRED_PROPERTY")]
            INVALIDREQUIREDPROPERTY = 38,

            /// <summary>
            /// Enum MISSINGREQUIREDPROPERTY for value: MISSING_REQUIRED_PROPERTY
            /// </summary>
            [EnumMember(Value = "MISSING_REQUIRED_PROPERTY")]
            MISSINGREQUIREDPROPERTY = 39,

            /// <summary>
            /// Enum DUPLICATEALTERNATEID for value: DUPLICATE_ALTERNATE_ID
            /// </summary>
            [EnumMember(Value = "DUPLICATE_ALTERNATE_ID")]
            DUPLICATEALTERNATEID = 40,

            /// <summary>
            /// Enum DUPLICATEOBJECTID for value: DUPLICATE_OBJECT_ID
            /// </summary>
            [EnumMember(Value = "DUPLICATE_OBJECT_ID")]
            DUPLICATEOBJECTID = 41,

            /// <summary>
            /// Enum DUPLICATEUNIQUEPROPERTYVALUE for value: DUPLICATE_UNIQUE_PROPERTY_VALUE
            /// </summary>
            [EnumMember(Value = "DUPLICATE_UNIQUE_PROPERTY_VALUE")]
            DUPLICATEUNIQUEPROPERTYVALUE = 42,

            /// <summary>
            /// Enum BLANKVALUEPROVIDED for value: BLANK_VALUE_PROVIDED
            /// </summary>
            [EnumMember(Value = "BLANK_VALUE_PROVIDED")]
            BLANKVALUEPROVIDED = 43,

            /// <summary>
            /// Enum UNKNOWNASSOCIATIONRECORDID for value: UNKNOWN_ASSOCIATION_RECORD_ID
            /// </summary>
            [EnumMember(Value = "UNKNOWN_ASSOCIATION_RECORD_ID")]
            UNKNOWNASSOCIATIONRECORDID = 44,

            /// <summary>
            /// Enum INVALIDRECORDID for value: INVALID_RECORD_ID
            /// </summary>
            [EnumMember(Value = "INVALID_RECORD_ID")]
            INVALIDRECORDID = 45,

            /// <summary>
            /// Enum DUPLICATERECORDID for value: DUPLICATE_RECORD_ID
            /// </summary>
            [EnumMember(Value = "DUPLICATE_RECORD_ID")]
            DUPLICATERECORDID = 46,

            /// <summary>
            /// Enum INVALIDCUSTOMPROPERTYVALIDATION for value: INVALID_CUSTOM_PROPERTY_VALIDATION
            /// </summary>
            [EnumMember(Value = "INVALID_CUSTOM_PROPERTY_VALIDATION")]
            INVALIDCUSTOMPROPERTYVALIDATION = 47,

            /// <summary>
            /// Enum CREATEONLYIMPORT for value: CREATE_ONLY_IMPORT
            /// </summary>
            [EnumMember(Value = "CREATE_ONLY_IMPORT")]
            CREATEONLYIMPORT = 48,

            /// <summary>
            /// Enum UPDATEONLYIMPORT for value: UPDATE_ONLY_IMPORT
            /// </summary>
            [EnumMember(Value = "UPDATE_ONLY_IMPORT")]
            UPDATEONLYIMPORT = 49,

            /// <summary>
            /// Enum COLUMNTOOLARGE for value: COLUMN_TOO_LARGE
            /// </summary>
            [EnumMember(Value = "COLUMN_TOO_LARGE")]
            COLUMNTOOLARGE = 50
        }


        /// <summary>
        /// Gets or Sets ErrorType
        /// </summary>
        [DataMember(Name = "errorType", IsRequired = true, EmitDefaultValue = true)]
        public ErrorTypeEnum ErrorType { get; set; }
        /// <summary>
        /// Defines ObjectType
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ObjectTypeEnum
        {
            /// <summary>
            /// Enum CONTACT for value: CONTACT
            /// </summary>
            [EnumMember(Value = "CONTACT")]
            CONTACT = 1,

            /// <summary>
            /// Enum COMPANY for value: COMPANY
            /// </summary>
            [EnumMember(Value = "COMPANY")]
            COMPANY = 2,

            /// <summary>
            /// Enum DEAL for value: DEAL
            /// </summary>
            [EnumMember(Value = "DEAL")]
            DEAL = 3,

            /// <summary>
            /// Enum ENGAGEMENT for value: ENGAGEMENT
            /// </summary>
            [EnumMember(Value = "ENGAGEMENT")]
            ENGAGEMENT = 4,

            /// <summary>
            /// Enum TICKET for value: TICKET
            /// </summary>
            [EnumMember(Value = "TICKET")]
            TICKET = 5,

            /// <summary>
            /// Enum OWNER for value: OWNER
            /// </summary>
            [EnumMember(Value = "OWNER")]
            OWNER = 6,

            /// <summary>
            /// Enum PRODUCT for value: PRODUCT
            /// </summary>
            [EnumMember(Value = "PRODUCT")]
            PRODUCT = 7,

            /// <summary>
            /// Enum LINEITEM for value: LINE_ITEM
            /// </summary>
            [EnumMember(Value = "LINE_ITEM")]
            LINEITEM = 8,

            /// <summary>
            /// Enum BETDELIVERABLESERVICE for value: BET_DELIVERABLE_SERVICE
            /// </summary>
            [EnumMember(Value = "BET_DELIVERABLE_SERVICE")]
            BETDELIVERABLESERVICE = 9,

            /// <summary>
            /// Enum CONTENT for value: CONTENT
            /// </summary>
            [EnumMember(Value = "CONTENT")]
            CONTENT = 10,

            /// <summary>
            /// Enum CONVERSATION for value: CONVERSATION
            /// </summary>
            [EnumMember(Value = "CONVERSATION")]
            CONVERSATION = 11,

            /// <summary>
            /// Enum BETALERT for value: BET_ALERT
            /// </summary>
            [EnumMember(Value = "BET_ALERT")]
            BETALERT = 12,

            /// <summary>
            /// Enum PORTAL for value: PORTAL
            /// </summary>
            [EnumMember(Value = "PORTAL")]
            PORTAL = 13,

            /// <summary>
            /// Enum QUOTE for value: QUOTE
            /// </summary>
            [EnumMember(Value = "QUOTE")]
            QUOTE = 14,

            /// <summary>
            /// Enum FORMSUBMISSIONINBOUNDDB for value: FORM_SUBMISSION_INBOUNDDB
            /// </summary>
            [EnumMember(Value = "FORM_SUBMISSION_INBOUNDDB")]
            FORMSUBMISSIONINBOUNDDB = 15,

            /// <summary>
            /// Enum QUOTA for value: QUOTA
            /// </summary>
            [EnumMember(Value = "QUOTA")]
            QUOTA = 16,

            /// <summary>
            /// Enum UNSUBSCRIBE for value: UNSUBSCRIBE
            /// </summary>
            [EnumMember(Value = "UNSUBSCRIBE")]
            UNSUBSCRIBE = 17,

            /// <summary>
            /// Enum COMMUNICATION for value: COMMUNICATION
            /// </summary>
            [EnumMember(Value = "COMMUNICATION")]
            COMMUNICATION = 18,

            /// <summary>
            /// Enum FEEDBACKSUBMISSION for value: FEEDBACK_SUBMISSION
            /// </summary>
            [EnumMember(Value = "FEEDBACK_SUBMISSION")]
            FEEDBACKSUBMISSION = 19,

            /// <summary>
            /// Enum ATTRIBUTION for value: ATTRIBUTION
            /// </summary>
            [EnumMember(Value = "ATTRIBUTION")]
            ATTRIBUTION = 20,

            /// <summary>
            /// Enum SALESFORCESYNCERROR for value: SALESFORCE_SYNC_ERROR
            /// </summary>
            [EnumMember(Value = "SALESFORCE_SYNC_ERROR")]
            SALESFORCESYNCERROR = 21,

            /// <summary>
            /// Enum RESTORABLECRMOBJECT for value: RESTORABLE_CRM_OBJECT
            /// </summary>
            [EnumMember(Value = "RESTORABLE_CRM_OBJECT")]
            RESTORABLECRMOBJECT = 22,

            /// <summary>
            /// Enum HUB for value: HUB
            /// </summary>
            [EnumMember(Value = "HUB")]
            HUB = 23,

            /// <summary>
            /// Enum LANDINGPAGE for value: LANDING_PAGE
            /// </summary>
            [EnumMember(Value = "LANDING_PAGE")]
            LANDINGPAGE = 24,

            /// <summary>
            /// Enum PRODUCTORFOLDER for value: PRODUCT_OR_FOLDER
            /// </summary>
            [EnumMember(Value = "PRODUCT_OR_FOLDER")]
            PRODUCTORFOLDER = 25,

            /// <summary>
            /// Enum TASK for value: TASK
            /// </summary>
            [EnumMember(Value = "TASK")]
            TASK = 26,

            /// <summary>
            /// Enum FORM for value: FORM
            /// </summary>
            [EnumMember(Value = "FORM")]
            FORM = 27,

            /// <summary>
            /// Enum MARKETINGEMAIL for value: MARKETING_EMAIL
            /// </summary>
            [EnumMember(Value = "MARKETING_EMAIL")]
            MARKETINGEMAIL = 28,

            /// <summary>
            /// Enum ADACCOUNT for value: AD_ACCOUNT
            /// </summary>
            [EnumMember(Value = "AD_ACCOUNT")]
            ADACCOUNT = 29,

            /// <summary>
            /// Enum ADCAMPAIGN for value: AD_CAMPAIGN
            /// </summary>
            [EnumMember(Value = "AD_CAMPAIGN")]
            ADCAMPAIGN = 30,

            /// <summary>
            /// Enum ADGROUP for value: AD_GROUP
            /// </summary>
            [EnumMember(Value = "AD_GROUP")]
            ADGROUP = 31,

            /// <summary>
            /// Enum AD for value: AD
            /// </summary>
            [EnumMember(Value = "AD")]
            AD = 32,

            /// <summary>
            /// Enum KEYWORD for value: KEYWORD
            /// </summary>
            [EnumMember(Value = "KEYWORD")]
            KEYWORD = 33,

            /// <summary>
            /// Enum CAMPAIGN for value: CAMPAIGN
            /// </summary>
            [EnumMember(Value = "CAMPAIGN")]
            CAMPAIGN = 34,

            /// <summary>
            /// Enum SOCIALCHANNEL for value: SOCIAL_CHANNEL
            /// </summary>
            [EnumMember(Value = "SOCIAL_CHANNEL")]
            SOCIALCHANNEL = 35,

            /// <summary>
            /// Enum SOCIALPOST for value: SOCIAL_POST
            /// </summary>
            [EnumMember(Value = "SOCIAL_POST")]
            SOCIALPOST = 36,

            /// <summary>
            /// Enum SITEPAGE for value: SITE_PAGE
            /// </summary>
            [EnumMember(Value = "SITE_PAGE")]
            SITEPAGE = 37,

            /// <summary>
            /// Enum BLOGPOST for value: BLOG_POST
            /// </summary>
            [EnumMember(Value = "BLOG_POST")]
            BLOGPOST = 38,

            /// <summary>
            /// Enum IMPORT for value: IMPORT
            /// </summary>
            [EnumMember(Value = "IMPORT")]
            IMPORT = 39,

            /// <summary>
            /// Enum EXPORT for value: EXPORT
            /// </summary>
            [EnumMember(Value = "EXPORT")]
            EXPORT = 40,

            /// <summary>
            /// Enum CTA for value: CTA
            /// </summary>
            [EnumMember(Value = "CTA")]
            CTA = 41,

            /// <summary>
            /// Enum TASKTEMPLATE for value: TASK_TEMPLATE
            /// </summary>
            [EnumMember(Value = "TASK_TEMPLATE")]
            TASKTEMPLATE = 42,

            /// <summary>
            /// Enum AUTOMATIONPLATFORMFLOW for value: AUTOMATION_PLATFORM_FLOW
            /// </summary>
            [EnumMember(Value = "AUTOMATION_PLATFORM_FLOW")]
            AUTOMATIONPLATFORMFLOW = 43,

            /// <summary>
            /// Enum OBJECTLIST for value: OBJECT_LIST
            /// </summary>
            [EnumMember(Value = "OBJECT_LIST")]
            OBJECTLIST = 44,

            /// <summary>
            /// Enum NOTE for value: NOTE
            /// </summary>
            [EnumMember(Value = "NOTE")]
            NOTE = 45,

            /// <summary>
            /// Enum MEETINGEVENT for value: MEETING_EVENT
            /// </summary>
            [EnumMember(Value = "MEETING_EVENT")]
            MEETINGEVENT = 46,

            /// <summary>
            /// Enum CALL for value: CALL
            /// </summary>
            [EnumMember(Value = "CALL")]
            CALL = 47,

            /// <summary>
            /// Enum EMAIL for value: EMAIL
            /// </summary>
            [EnumMember(Value = "EMAIL")]
            EMAIL = 48,

            /// <summary>
            /// Enum PUBLISHINGTASK for value: PUBLISHING_TASK
            /// </summary>
            [EnumMember(Value = "PUBLISHING_TASK")]
            PUBLISHINGTASK = 49,

            /// <summary>
            /// Enum CONVERSATIONSESSION for value: CONVERSATION_SESSION
            /// </summary>
            [EnumMember(Value = "CONVERSATION_SESSION")]
            CONVERSATIONSESSION = 50,

            /// <summary>
            /// Enum CONTACTCREATEATTRIBUTION for value: CONTACT_CREATE_ATTRIBUTION
            /// </summary>
            [EnumMember(Value = "CONTACT_CREATE_ATTRIBUTION")]
            CONTACTCREATEATTRIBUTION = 51,

            /// <summary>
            /// Enum INVOICE for value: INVOICE
            /// </summary>
            [EnumMember(Value = "INVOICE")]
            INVOICE = 52,

            /// <summary>
            /// Enum MARKETINGEVENT for value: MARKETING_EVENT
            /// </summary>
            [EnumMember(Value = "MARKETING_EVENT")]
            MARKETINGEVENT = 53,

            /// <summary>
            /// Enum CONVERSATIONINBOX for value: CONVERSATION_INBOX
            /// </summary>
            [EnumMember(Value = "CONVERSATION_INBOX")]
            CONVERSATIONINBOX = 54,

            /// <summary>
            /// Enum CHATFLOW for value: CHATFLOW
            /// </summary>
            [EnumMember(Value = "CHATFLOW")]
            CHATFLOW = 55,

            /// <summary>
            /// Enum MEDIABRIDGE for value: MEDIA_BRIDGE
            /// </summary>
            [EnumMember(Value = "MEDIA_BRIDGE")]
            MEDIABRIDGE = 56,

            /// <summary>
            /// Enum SEQUENCE for value: SEQUENCE
            /// </summary>
            [EnumMember(Value = "SEQUENCE")]
            SEQUENCE = 57,

            /// <summary>
            /// Enum SEQUENCESTEP for value: SEQUENCE_STEP
            /// </summary>
            [EnumMember(Value = "SEQUENCE_STEP")]
            SEQUENCESTEP = 58,

            /// <summary>
            /// Enum FORECAST for value: FORECAST
            /// </summary>
            [EnumMember(Value = "FORECAST")]
            FORECAST = 59,

            /// <summary>
            /// Enum SNIPPET for value: SNIPPET
            /// </summary>
            [EnumMember(Value = "SNIPPET")]
            SNIPPET = 60,

            /// <summary>
            /// Enum TEMPLATE for value: TEMPLATE
            /// </summary>
            [EnumMember(Value = "TEMPLATE")]
            TEMPLATE = 61,

            /// <summary>
            /// Enum DEALCREATEATTRIBUTION for value: DEAL_CREATE_ATTRIBUTION
            /// </summary>
            [EnumMember(Value = "DEAL_CREATE_ATTRIBUTION")]
            DEALCREATEATTRIBUTION = 62,

            /// <summary>
            /// Enum QUOTETEMPLATE for value: QUOTE_TEMPLATE
            /// </summary>
            [EnumMember(Value = "QUOTE_TEMPLATE")]
            QUOTETEMPLATE = 63,

            /// <summary>
            /// Enum QUOTEMODULE for value: QUOTE_MODULE
            /// </summary>
            [EnumMember(Value = "QUOTE_MODULE")]
            QUOTEMODULE = 64,

            /// <summary>
            /// Enum QUOTEMODULEFIELD for value: QUOTE_MODULE_FIELD
            /// </summary>
            [EnumMember(Value = "QUOTE_MODULE_FIELD")]
            QUOTEMODULEFIELD = 65,

            /// <summary>
            /// Enum QUOTEFIELD for value: QUOTE_FIELD
            /// </summary>
            [EnumMember(Value = "QUOTE_FIELD")]
            QUOTEFIELD = 66,

            /// <summary>
            /// Enum SEQUENCEENROLLMENT for value: SEQUENCE_ENROLLMENT
            /// </summary>
            [EnumMember(Value = "SEQUENCE_ENROLLMENT")]
            SEQUENCEENROLLMENT = 67,

            /// <summary>
            /// Enum SUBSCRIPTION for value: SUBSCRIPTION
            /// </summary>
            [EnumMember(Value = "SUBSCRIPTION")]
            SUBSCRIPTION = 68,

            /// <summary>
            /// Enum ACCEPTANCETEST for value: ACCEPTANCE_TEST
            /// </summary>
            [EnumMember(Value = "ACCEPTANCE_TEST")]
            ACCEPTANCETEST = 69,

            /// <summary>
            /// Enum SOCIALBROADCAST for value: SOCIAL_BROADCAST
            /// </summary>
            [EnumMember(Value = "SOCIAL_BROADCAST")]
            SOCIALBROADCAST = 70,

            /// <summary>
            /// Enum DEALSPLIT for value: DEAL_SPLIT
            /// </summary>
            [EnumMember(Value = "DEAL_SPLIT")]
            DEALSPLIT = 71,

            /// <summary>
            /// Enum DEALREGISTRATION for value: DEAL_REGISTRATION
            /// </summary>
            [EnumMember(Value = "DEAL_REGISTRATION")]
            DEALREGISTRATION = 72,

            /// <summary>
            /// Enum GOALTARGET for value: GOAL_TARGET
            /// </summary>
            [EnumMember(Value = "GOAL_TARGET")]
            GOALTARGET = 73,

            /// <summary>
            /// Enum GOALTARGETGROUP for value: GOAL_TARGET_GROUP
            /// </summary>
            [EnumMember(Value = "GOAL_TARGET_GROUP")]
            GOALTARGETGROUP = 74,

            /// <summary>
            /// Enum PORTALOBJECTSYNCMESSAGE for value: PORTAL_OBJECT_SYNC_MESSAGE
            /// </summary>
            [EnumMember(Value = "PORTAL_OBJECT_SYNC_MESSAGE")]
            PORTALOBJECTSYNCMESSAGE = 75,

            /// <summary>
            /// Enum FILEMANAGERFILE for value: FILE_MANAGER_FILE
            /// </summary>
            [EnumMember(Value = "FILE_MANAGER_FILE")]
            FILEMANAGERFILE = 76,

            /// <summary>
            /// Enum FILEMANAGERFOLDER for value: FILE_MANAGER_FOLDER
            /// </summary>
            [EnumMember(Value = "FILE_MANAGER_FOLDER")]
            FILEMANAGERFOLDER = 77,

            /// <summary>
            /// Enum SEQUENCESTEPENROLLMENT for value: SEQUENCE_STEP_ENROLLMENT
            /// </summary>
            [EnumMember(Value = "SEQUENCE_STEP_ENROLLMENT")]
            SEQUENCESTEPENROLLMENT = 78,

            /// <summary>
            /// Enum APPROVAL for value: APPROVAL
            /// </summary>
            [EnumMember(Value = "APPROVAL")]
            APPROVAL = 79,

            /// <summary>
            /// Enum APPROVALSTEP for value: APPROVAL_STEP
            /// </summary>
            [EnumMember(Value = "APPROVAL_STEP")]
            APPROVALSTEP = 80,

            /// <summary>
            /// Enum CTAVARIANT for value: CTA_VARIANT
            /// </summary>
            [EnumMember(Value = "CTA_VARIANT")]
            CTAVARIANT = 81,

            /// <summary>
            /// Enum SALESDOCUMENT for value: SALES_DOCUMENT
            /// </summary>
            [EnumMember(Value = "SALES_DOCUMENT")]
            SALESDOCUMENT = 82,

            /// <summary>
            /// Enum DISCOUNT for value: DISCOUNT
            /// </summary>
            [EnumMember(Value = "DISCOUNT")]
            DISCOUNT = 83,

            /// <summary>
            /// Enum FEE for value: FEE
            /// </summary>
            [EnumMember(Value = "FEE")]
            FEE = 84,

            /// <summary>
            /// Enum TAX for value: TAX
            /// </summary>
            [EnumMember(Value = "TAX")]
            TAX = 85,

            /// <summary>
            /// Enum MARKETINGCALENDAR for value: MARKETING_CALENDAR
            /// </summary>
            [EnumMember(Value = "MARKETING_CALENDAR")]
            MARKETINGCALENDAR = 86,

            /// <summary>
            /// Enum PERMISSIONSTESTING for value: PERMISSIONS_TESTING
            /// </summary>
            [EnumMember(Value = "PERMISSIONS_TESTING")]
            PERMISSIONSTESTING = 87,

            /// <summary>
            /// Enum PRIVACYSCANNERCOOKIE for value: PRIVACY_SCANNER_COOKIE
            /// </summary>
            [EnumMember(Value = "PRIVACY_SCANNER_COOKIE")]
            PRIVACYSCANNERCOOKIE = 88,

            /// <summary>
            /// Enum DATASYNCSTATE for value: DATA_SYNC_STATE
            /// </summary>
            [EnumMember(Value = "DATA_SYNC_STATE")]
            DATASYNCSTATE = 89,

            /// <summary>
            /// Enum WEBINTERACTIVE for value: WEB_INTERACTIVE
            /// </summary>
            [EnumMember(Value = "WEB_INTERACTIVE")]
            WEBINTERACTIVE = 90,

            /// <summary>
            /// Enum PLAYBOOK for value: PLAYBOOK
            /// </summary>
            [EnumMember(Value = "PLAYBOOK")]
            PLAYBOOK = 91,

            /// <summary>
            /// Enum FOLDER for value: FOLDER
            /// </summary>
            [EnumMember(Value = "FOLDER")]
            FOLDER = 92,

            /// <summary>
            /// Enum PLAYBOOKQUESTION for value: PLAYBOOK_QUESTION
            /// </summary>
            [EnumMember(Value = "PLAYBOOK_QUESTION")]
            PLAYBOOKQUESTION = 93,

            /// <summary>
            /// Enum PLAYBOOKSUBMISSION for value: PLAYBOOK_SUBMISSION
            /// </summary>
            [EnumMember(Value = "PLAYBOOK_SUBMISSION")]
            PLAYBOOKSUBMISSION = 94,

            /// <summary>
            /// Enum PLAYBOOKSUBMISSIONANSWER for value: PLAYBOOK_SUBMISSION_ANSWER
            /// </summary>
            [EnumMember(Value = "PLAYBOOK_SUBMISSION_ANSWER")]
            PLAYBOOKSUBMISSIONANSWER = 95,

            /// <summary>
            /// Enum COMMERCEPAYMENT for value: COMMERCE_PAYMENT
            /// </summary>
            [EnumMember(Value = "COMMERCE_PAYMENT")]
            COMMERCEPAYMENT = 96,

            /// <summary>
            /// Enum GSCPROPERTY for value: GSC_PROPERTY
            /// </summary>
            [EnumMember(Value = "GSC_PROPERTY")]
            GSCPROPERTY = 97,

            /// <summary>
            /// Enum SOXPROTECTEDDUMMYTYPE for value: SOX_PROTECTED_DUMMY_TYPE
            /// </summary>
            [EnumMember(Value = "SOX_PROTECTED_DUMMY_TYPE")]
            SOXPROTECTEDDUMMYTYPE = 98,

            /// <summary>
            /// Enum BLOGLISTINGPAGE for value: BLOG_LISTING_PAGE
            /// </summary>
            [EnumMember(Value = "BLOG_LISTING_PAGE")]
            BLOGLISTINGPAGE = 99,

            /// <summary>
            /// Enum QUARANTINEDSUBMISSION for value: QUARANTINED_SUBMISSION
            /// </summary>
            [EnumMember(Value = "QUARANTINED_SUBMISSION")]
            QUARANTINEDSUBMISSION = 100,

            /// <summary>
            /// Enum PAYMENTSCHEDULE for value: PAYMENT_SCHEDULE
            /// </summary>
            [EnumMember(Value = "PAYMENT_SCHEDULE")]
            PAYMENTSCHEDULE = 101,

            /// <summary>
            /// Enum PAYMENTSCHEDULEINSTALLMENT for value: PAYMENT_SCHEDULE_INSTALLMENT
            /// </summary>
            [EnumMember(Value = "PAYMENT_SCHEDULE_INSTALLMENT")]
            PAYMENTSCHEDULEINSTALLMENT = 102,

            /// <summary>
            /// Enum MARKETINGCAMPAIGNUTM for value: MARKETING_CAMPAIGN_UTM
            /// </summary>
            [EnumMember(Value = "MARKETING_CAMPAIGN_UTM")]
            MARKETINGCAMPAIGNUTM = 103,

            /// <summary>
            /// Enum DISCOUNTTEMPLATE for value: DISCOUNT_TEMPLATE
            /// </summary>
            [EnumMember(Value = "DISCOUNT_TEMPLATE")]
            DISCOUNTTEMPLATE = 104,

            /// <summary>
            /// Enum DISCOUNTCODE for value: DISCOUNT_CODE
            /// </summary>
            [EnumMember(Value = "DISCOUNT_CODE")]
            DISCOUNTCODE = 105,

            /// <summary>
            /// Enum FEEDBACKSURVEY for value: FEEDBACK_SURVEY
            /// </summary>
            [EnumMember(Value = "FEEDBACK_SURVEY")]
            FEEDBACKSURVEY = 106,

            /// <summary>
            /// Enum CMSURL for value: CMS_URL
            /// </summary>
            [EnumMember(Value = "CMS_URL")]
            CMSURL = 107,

            /// <summary>
            /// Enum SALESTASK for value: SALES_TASK
            /// </summary>
            [EnumMember(Value = "SALES_TASK")]
            SALESTASK = 108,

            /// <summary>
            /// Enum SALESWORKLOAD for value: SALES_WORKLOAD
            /// </summary>
            [EnumMember(Value = "SALES_WORKLOAD")]
            SALESWORKLOAD = 109,

            /// <summary>
            /// Enum USER for value: USER
            /// </summary>
            [EnumMember(Value = "USER")]
            USER = 110,

            /// <summary>
            /// Enum POSTALMAIL for value: POSTAL_MAIL
            /// </summary>
            [EnumMember(Value = "POSTAL_MAIL")]
            POSTALMAIL = 111,

            /// <summary>
            /// Enum SCHEMASBACKENDTEST for value: SCHEMAS_BACKEND_TEST
            /// </summary>
            [EnumMember(Value = "SCHEMAS_BACKEND_TEST")]
            SCHEMASBACKENDTEST = 112,

            /// <summary>
            /// Enum PAYMENTLINK for value: PAYMENT_LINK
            /// </summary>
            [EnumMember(Value = "PAYMENT_LINK")]
            PAYMENTLINK = 113,

            /// <summary>
            /// Enum SUBMISSIONTAG for value: SUBMISSION_TAG
            /// </summary>
            [EnumMember(Value = "SUBMISSION_TAG")]
            SUBMISSIONTAG = 114,

            /// <summary>
            /// Enum CAMPAIGNSTEP for value: CAMPAIGN_STEP
            /// </summary>
            [EnumMember(Value = "CAMPAIGN_STEP")]
            CAMPAIGNSTEP = 115,

            /// <summary>
            /// Enum SCHEDULINGPAGE for value: SCHEDULING_PAGE
            /// </summary>
            [EnumMember(Value = "SCHEDULING_PAGE")]
            SCHEDULINGPAGE = 116,

            /// <summary>
            /// Enum SOXPROTECTEDTESTTYPE for value: SOX_PROTECTED_TEST_TYPE
            /// </summary>
            [EnumMember(Value = "SOX_PROTECTED_TEST_TYPE")]
            SOXPROTECTEDTESTTYPE = 117,

            /// <summary>
            /// Enum ORDER for value: ORDER
            /// </summary>
            [EnumMember(Value = "ORDER")]
            ORDER = 118,

            /// <summary>
            /// Enum MARKETINGSMS for value: MARKETING_SMS
            /// </summary>
            [EnumMember(Value = "MARKETING_SMS")]
            MARKETINGSMS = 119,

            /// <summary>
            /// Enum PARTNERACCOUNT for value: PARTNER_ACCOUNT
            /// </summary>
            [EnumMember(Value = "PARTNER_ACCOUNT")]
            PARTNERACCOUNT = 120,

            /// <summary>
            /// Enum CAMPAIGNTEMPLATE for value: CAMPAIGN_TEMPLATE
            /// </summary>
            [EnumMember(Value = "CAMPAIGN_TEMPLATE")]
            CAMPAIGNTEMPLATE = 121,

            /// <summary>
            /// Enum CAMPAIGNTEMPLATESTEP for value: CAMPAIGN_TEMPLATE_STEP
            /// </summary>
            [EnumMember(Value = "CAMPAIGN_TEMPLATE_STEP")]
            CAMPAIGNTEMPLATESTEP = 122,

            /// <summary>
            /// Enum UNKNOWN for value: UNKNOWN
            /// </summary>
            [EnumMember(Value = "UNKNOWN")]
            UNKNOWN = 123
        }


        /// <summary>
        /// Gets or Sets ObjectType
        /// </summary>
        [DataMember(Name = "objectType", EmitDefaultValue = false)]
        public ObjectTypeEnum? ObjectType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="PublicImportError" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected PublicImportError() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="PublicImportError" /> class.
        /// </summary>
        /// <param name="errorType">errorType (required).</param>
        /// <param name="sourceData">sourceData (required).</param>
        /// <param name="objectType">objectType.</param>
        /// <param name="invalidValue">invalidValue.</param>
        /// <param name="extraContext">extraContext.</param>
        /// <param name="objectTypeId">objectTypeId.</param>
        /// <param name="knownColumnNumber">knownColumnNumber (required).</param>
        /// <param name="createdAt">createdAt (required).</param>
        /// <param name="id">id (required).</param>
        public PublicImportError(ErrorTypeEnum errorType = default(ErrorTypeEnum), ImportRowCore sourceData = default(ImportRowCore), ObjectTypeEnum? objectType = default(ObjectTypeEnum?), string invalidValue = default(string), string extraContext = default(string), string objectTypeId = default(string), int knownColumnNumber = default(int), int createdAt = default(int), string id = default(string))
        {
            this.ErrorType = errorType;
            // to ensure "sourceData" is required (not null)
            if (sourceData == null)
            {
                throw new ArgumentNullException("sourceData is a required property for PublicImportError and cannot be null");
            }
            this.SourceData = sourceData;
            this.KnownColumnNumber = knownColumnNumber;
            this.CreatedAt = createdAt;
            // to ensure "id" is required (not null)
            if (id == null)
            {
                throw new ArgumentNullException("id is a required property for PublicImportError and cannot be null");
            }
            this.Id = id;
            this.ObjectType = objectType;
            this.InvalidValue = invalidValue;
            this.ExtraContext = extraContext;
            this.ObjectTypeId = objectTypeId;
        }

        /// <summary>
        /// Gets or Sets SourceData
        /// </summary>
        [DataMember(Name = "sourceData", IsRequired = true, EmitDefaultValue = true)]
        public ImportRowCore SourceData { get; set; }

        /// <summary>
        /// Gets or Sets InvalidValue
        /// </summary>
        [DataMember(Name = "invalidValue", EmitDefaultValue = false)]
        public string InvalidValue { get; set; }

        /// <summary>
        /// Gets or Sets ExtraContext
        /// </summary>
        [DataMember(Name = "extraContext", EmitDefaultValue = false)]
        public string ExtraContext { get; set; }

        /// <summary>
        /// Gets or Sets ObjectTypeId
        /// </summary>
        [DataMember(Name = "objectTypeId", EmitDefaultValue = false)]
        public string ObjectTypeId { get; set; }

        /// <summary>
        /// Gets or Sets KnownColumnNumber
        /// </summary>
        [DataMember(Name = "knownColumnNumber", IsRequired = true, EmitDefaultValue = true)]
        public int KnownColumnNumber { get; set; }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name = "createdAt", IsRequired = true, EmitDefaultValue = true)]
        public int CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = true)]
        public string Id { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PublicImportError {\n");
            sb.Append("  ErrorType: ").Append(ErrorType).Append("\n");
            sb.Append("  SourceData: ").Append(SourceData).Append("\n");
            sb.Append("  ObjectType: ").Append(ObjectType).Append("\n");
            sb.Append("  InvalidValue: ").Append(InvalidValue).Append("\n");
            sb.Append("  ExtraContext: ").Append(ExtraContext).Append("\n");
            sb.Append("  ObjectTypeId: ").Append(ObjectTypeId).Append("\n");
            sb.Append("  KnownColumnNumber: ").Append(KnownColumnNumber).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PublicImportError);
        }

        /// <summary>
        /// Returns true if PublicImportError instances are equal
        /// </summary>
        /// <param name="input">Instance of PublicImportError to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PublicImportError input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.ErrorType == input.ErrorType ||
                    this.ErrorType.Equals(input.ErrorType)
                ) && 
                (
                    this.SourceData == input.SourceData ||
                    (this.SourceData != null &&
                    this.SourceData.Equals(input.SourceData))
                ) && 
                (
                    this.ObjectType == input.ObjectType ||
                    this.ObjectType.Equals(input.ObjectType)
                ) && 
                (
                    this.InvalidValue == input.InvalidValue ||
                    (this.InvalidValue != null &&
                    this.InvalidValue.Equals(input.InvalidValue))
                ) && 
                (
                    this.ExtraContext == input.ExtraContext ||
                    (this.ExtraContext != null &&
                    this.ExtraContext.Equals(input.ExtraContext))
                ) && 
                (
                    this.ObjectTypeId == input.ObjectTypeId ||
                    (this.ObjectTypeId != null &&
                    this.ObjectTypeId.Equals(input.ObjectTypeId))
                ) && 
                (
                    this.KnownColumnNumber == input.KnownColumnNumber ||
                    this.KnownColumnNumber.Equals(input.KnownColumnNumber)
                ) && 
                (
                    this.CreatedAt == input.CreatedAt ||
                    this.CreatedAt.Equals(input.CreatedAt)
                ) && 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.ErrorType.GetHashCode();
                if (this.SourceData != null)
                {
                    hashCode = (hashCode * 59) + this.SourceData.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.ObjectType.GetHashCode();
                if (this.InvalidValue != null)
                {
                    hashCode = (hashCode * 59) + this.InvalidValue.GetHashCode();
                }
                if (this.ExtraContext != null)
                {
                    hashCode = (hashCode * 59) + this.ExtraContext.GetHashCode();
                }
                if (this.ObjectTypeId != null)
                {
                    hashCode = (hashCode * 59) + this.ObjectTypeId.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.KnownColumnNumber.GetHashCode();
                hashCode = (hashCode * 59) + this.CreatedAt.GetHashCode();
                if (this.Id != null)
                {
                    hashCode = (hashCode * 59) + this.Id.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
